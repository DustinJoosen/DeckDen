import{$ as he,$a as v,A as ve,Aa as vr,Ab as N,B as Dn,Ba as xr,Bb as Lt,C as de,Ca as $,Cb as $t,D as tr,Da as Je,Db as zr,E as ce,Ea as m,Eb as Br,F as ue,Fa as T,Fb as et,G as Rn,Ga as Vn,Gb as Gr,H as nr,Ha as wr,Hb as zt,I as ir,Ia as Tt,Ib as Bt,J as rr,Ja as Ot,Jb as qr,K as or,Ka as Un,L as W,La as _r,M as ar,Ma as Xe,N as P,Na as Ln,O as R,Oa as Cr,P as Tn,Pa as kr,Q as k,Qa as Pt,R as xe,Ra as Er,S as sr,Sa as H,T as I,Ta as Nt,U as On,Ua as Pe,V as E,Va as x,W as g,Wa as Sr,X as Ke,Xa as y,Y as we,Ya as b,Z,Za as Ne,_ as _e,_a as Ar,a as u,aa as Ce,ab as Mr,b as O,ba as lr,bb as Ir,ca as De,cb as Dr,d as j,da as ee,db as Ft,e as It,ea as Rt,eb as w,f as Ji,fa as dr,fb as Rr,g as Xi,ga as cr,gb as Tr,h as En,ha as Ze,hb as Or,i as Sn,ia as Pn,ib as Pr,j as ye,ja as Nn,jb as Nr,k as G,ka as ke,kb as Fr,l as ae,la as Re,lb as $n,m as V,ma as L,mb as J,n as p,na as ur,nb as jr,o as be,oa as Fn,ob as Vr,p as Yi,pa as hr,pb as jt,q as Qi,qa as Ee,qb as Vt,r as An,ra as fr,rb as zn,s as C,sa as jn,sb as Ut,t as Mn,ta as Te,tb as Bn,u as q,ua as Oe,ub as Ye,v as er,va as pr,vb as Ur,w as In,wa as gr,wb as Qe,x as Dt,xa as mr,xb as Fe,y as se,ya as yr,yb as Lr,z as le,za as br,zb as $r}from"./chunk-U7SK7DBV.js";var nt=class{},qt=class{},te=class t{constructor(e){this.normalizedNames=new Map,this.lazyUpdate=null,e?typeof e=="string"?this.lazyInit=()=>{this.headers=new Map,e.split(`
`).forEach(r=>{let n=r.indexOf(":");if(n>0){let i=r.slice(0,n),o=i.toLowerCase(),a=r.slice(n+1).trim();this.maybeSetNormalizedName(i,o),this.headers.has(o)?this.headers.get(o).push(a):this.headers.set(o,[a])}})}:typeof Headers<"u"&&e instanceof Headers?(this.headers=new Map,e.forEach((r,n)=>{this.setHeaderEntries(n,r)})):this.lazyInit=()=>{this.headers=new Map,Object.entries(e).forEach(([r,n])=>{this.setHeaderEntries(r,n)})}:this.headers=new Map}has(e){return this.init(),this.headers.has(e.toLowerCase())}get(e){this.init();let r=this.headers.get(e.toLowerCase());return r&&r.length>0?r[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(e){return this.init(),this.headers.get(e.toLowerCase())||null}append(e,r){return this.clone({name:e,value:r,op:"a"})}set(e,r){return this.clone({name:e,value:r,op:"s"})}delete(e,r){return this.clone({name:e,value:r,op:"d"})}maybeSetNormalizedName(e,r){this.normalizedNames.has(r)||this.normalizedNames.set(r,e)}init(){this.lazyInit&&(this.lazyInit instanceof t?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(e=>this.applyUpdate(e)),this.lazyUpdate=null))}copyFrom(e){e.init(),Array.from(e.headers.keys()).forEach(r=>{this.headers.set(r,e.headers.get(r)),this.normalizedNames.set(r,e.normalizedNames.get(r))})}clone(e){let r=new t;return r.lazyInit=this.lazyInit&&this.lazyInit instanceof t?this.lazyInit:this,r.lazyUpdate=(this.lazyUpdate||[]).concat([e]),r}applyUpdate(e){let r=e.name.toLowerCase();switch(e.op){case"a":case"s":let n=e.value;if(typeof n=="string"&&(n=[n]),n.length===0)return;this.maybeSetNormalizedName(e.name,r);let i=(e.op==="a"?this.headers.get(r):void 0)||[];i.push(...n),this.headers.set(r,i);break;case"d":let o=e.value;if(!o)this.headers.delete(r),this.normalizedNames.delete(r);else{let a=this.headers.get(r);if(!a)return;a=a.filter(s=>o.indexOf(s)===-1),a.length===0?(this.headers.delete(r),this.normalizedNames.delete(r)):this.headers.set(r,a)}break}}setHeaderEntries(e,r){let n=(Array.isArray(r)?r:[r]).map(o=>o.toString()),i=e.toLowerCase();this.headers.set(i,n),this.maybeSetNormalizedName(e,i)}forEach(e){this.init(),Array.from(this.normalizedNames.keys()).forEach(r=>e(this.normalizedNames.get(r),this.headers.get(r)))}};var qn=class{encodeKey(e){return Wr(e)}encodeValue(e){return Wr(e)}decodeKey(e){return decodeURIComponent(e)}decodeValue(e){return decodeURIComponent(e)}};function Na(t,e){let r=new Map;return t.length>0&&t.replace(/^\?/,"").split("&").forEach(i=>{let o=i.indexOf("="),[a,s]=o==-1?[e.decodeKey(i),""]:[e.decodeKey(i.slice(0,o)),e.decodeValue(i.slice(o+1))],d=r.get(a)||[];d.push(s),r.set(a,d)}),r}var Fa=/%(\d[a-f0-9])/gi,ja={40:"@","3A":":",24:"$","2C":",","3B":";","3D":"=","3F":"?","2F":"/"};function Wr(t){return encodeURIComponent(t).replace(Fa,(e,r)=>ja[r]??e)}function Gt(t){return`${t}`}var fe=class t{constructor(e={}){if(this.updates=null,this.cloneFrom=null,this.encoder=e.encoder||new qn,e.fromString){if(e.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=Na(e.fromString,this.encoder)}else e.fromObject?(this.map=new Map,Object.keys(e.fromObject).forEach(r=>{let n=e.fromObject[r],i=Array.isArray(n)?n.map(Gt):[Gt(n)];this.map.set(r,i)})):this.map=null}has(e){return this.init(),this.map.has(e)}get(e){this.init();let r=this.map.get(e);return r?r[0]:null}getAll(e){return this.init(),this.map.get(e)||null}keys(){return this.init(),Array.from(this.map.keys())}append(e,r){return this.clone({param:e,value:r,op:"a"})}appendAll(e){let r=[];return Object.keys(e).forEach(n=>{let i=e[n];Array.isArray(i)?i.forEach(o=>{r.push({param:n,value:o,op:"a"})}):r.push({param:n,value:i,op:"a"})}),this.clone(r)}set(e,r){return this.clone({param:e,value:r,op:"s"})}delete(e,r){return this.clone({param:e,value:r,op:"d"})}toString(){return this.init(),this.keys().map(e=>{let r=this.encoder.encodeKey(e);return this.map.get(e).map(n=>r+"="+this.encoder.encodeValue(n)).join("&")}).filter(e=>e!=="").join("&")}clone(e){let r=new t({encoder:this.encoder});return r.cloneFrom=this.cloneFrom||this,r.updates=(this.updates||[]).concat(e),r}init(){this.map===null&&(this.map=new Map),this.cloneFrom!==null&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(e=>this.map.set(e,this.cloneFrom.map.get(e))),this.updates.forEach(e=>{switch(e.op){case"a":case"s":let r=(e.op==="a"?this.map.get(e.param):void 0)||[];r.push(Gt(e.value)),this.map.set(e.param,r);break;case"d":if(e.value!==void 0){let n=this.map.get(e.param)||[],i=n.indexOf(Gt(e.value));i!==-1&&n.splice(i,1),n.length>0?this.map.set(e.param,n):this.map.delete(e.param)}else{this.map.delete(e.param);break}}}),this.cloneFrom=this.updates=null)}};var Wn=class{constructor(){this.map=new Map}set(e,r){return this.map.set(e,r),this}get(e){return this.map.has(e)||this.map.set(e,e.defaultValue()),this.map.get(e)}delete(e){return this.map.delete(e),this}has(e){return this.map.has(e)}keys(){return this.map.keys()}};function Va(t){switch(t){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0}}function Hr(t){return typeof ArrayBuffer<"u"&&t instanceof ArrayBuffer}function Kr(t){return typeof Blob<"u"&&t instanceof Blob}function Zr(t){return typeof FormData<"u"&&t instanceof FormData}function Ua(t){return typeof URLSearchParams<"u"&&t instanceof URLSearchParams}var tt=class t{constructor(e,r,n,i){this.url=r,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=e.toUpperCase();let o;if(Va(this.method)||i?(this.body=n!==void 0?n:null,o=i):o=n,o&&(this.reportProgress=!!o.reportProgress,this.withCredentials=!!o.withCredentials,o.responseType&&(this.responseType=o.responseType),o.headers&&(this.headers=o.headers),o.context&&(this.context=o.context),o.params&&(this.params=o.params),this.transferCache=o.transferCache),this.headers??=new te,this.context??=new Wn,!this.params)this.params=new fe,this.urlWithParams=r;else{let a=this.params.toString();if(a.length===0)this.urlWithParams=r;else{let s=r.indexOf("?"),d=s===-1?"?":s<r.length-1?"&":"";this.urlWithParams=r+d+a}}}serializeBody(){return this.body===null?null:typeof this.body=="string"||Hr(this.body)||Kr(this.body)||Zr(this.body)||Ua(this.body)?this.body:this.body instanceof fe?this.body.toString():typeof this.body=="object"||typeof this.body=="boolean"||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString()}detectContentTypeHeader(){return this.body===null||Zr(this.body)?null:Kr(this.body)?this.body.type||null:Hr(this.body)?null:typeof this.body=="string"?"text/plain":this.body instanceof fe?"application/x-www-form-urlencoded;charset=UTF-8":typeof this.body=="object"||typeof this.body=="number"||typeof this.body=="boolean"?"application/json":null}clone(e={}){let r=e.method||this.method,n=e.url||this.url,i=e.responseType||this.responseType,o=e.transferCache??this.transferCache,a=e.body!==void 0?e.body:this.body,s=e.withCredentials??this.withCredentials,d=e.reportProgress??this.reportProgress,l=e.headers||this.headers,c=e.params||this.params,h=e.context??this.context;return e.setHeaders!==void 0&&(l=Object.keys(e.setHeaders).reduce((f,A)=>f.set(A,e.setHeaders[A]),l)),e.setParams&&(c=Object.keys(e.setParams).reduce((f,A)=>f.set(A,e.setParams[A]),c)),new t(r,n,a,{params:c,headers:l,context:h,reportProgress:d,responseType:i,withCredentials:s,transferCache:o})}},je=function(t){return t[t.Sent=0]="Sent",t[t.UploadProgress=1]="UploadProgress",t[t.ResponseHeader=2]="ResponseHeader",t[t.DownloadProgress=3]="DownloadProgress",t[t.Response=4]="Response",t[t.User=5]="User",t}(je||{}),it=class{constructor(e,r=Kt.Ok,n="OK"){this.headers=e.headers||new te,this.status=e.status!==void 0?e.status:r,this.statusText=e.statusText||n,this.url=e.url||null,this.ok=this.status>=200&&this.status<300}},Hn=class t extends it{constructor(e={}){super(e),this.type=je.ResponseHeader}clone(e={}){return new t({headers:e.headers||this.headers,status:e.status!==void 0?e.status:this.status,statusText:e.statusText||this.statusText,url:e.url||this.url||void 0})}},Wt=class t extends it{constructor(e={}){super(e),this.type=je.Response,this.body=e.body!==void 0?e.body:null}clone(e={}){return new t({body:e.body!==void 0?e.body:this.body,headers:e.headers||this.headers,status:e.status!==void 0?e.status:this.status,statusText:e.statusText||this.statusText,url:e.url||this.url||void 0})}},Ht=class extends it{constructor(e){super(e,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.status>=200&&this.status<300?this.message=`Http failure during parsing for ${e.url||"(unknown url)"}`:this.message=`Http failure response for ${e.url||"(unknown url)"}: ${e.status} ${e.statusText}`,this.error=e.error||null}},Kt=function(t){return t[t.Continue=100]="Continue",t[t.SwitchingProtocols=101]="SwitchingProtocols",t[t.Processing=102]="Processing",t[t.EarlyHints=103]="EarlyHints",t[t.Ok=200]="Ok",t[t.Created=201]="Created",t[t.Accepted=202]="Accepted",t[t.NonAuthoritativeInformation=203]="NonAuthoritativeInformation",t[t.NoContent=204]="NoContent",t[t.ResetContent=205]="ResetContent",t[t.PartialContent=206]="PartialContent",t[t.MultiStatus=207]="MultiStatus",t[t.AlreadyReported=208]="AlreadyReported",t[t.ImUsed=226]="ImUsed",t[t.MultipleChoices=300]="MultipleChoices",t[t.MovedPermanently=301]="MovedPermanently",t[t.Found=302]="Found",t[t.SeeOther=303]="SeeOther",t[t.NotModified=304]="NotModified",t[t.UseProxy=305]="UseProxy",t[t.Unused=306]="Unused",t[t.TemporaryRedirect=307]="TemporaryRedirect",t[t.PermanentRedirect=308]="PermanentRedirect",t[t.BadRequest=400]="BadRequest",t[t.Unauthorized=401]="Unauthorized",t[t.PaymentRequired=402]="PaymentRequired",t[t.Forbidden=403]="Forbidden",t[t.NotFound=404]="NotFound",t[t.MethodNotAllowed=405]="MethodNotAllowed",t[t.NotAcceptable=406]="NotAcceptable",t[t.ProxyAuthenticationRequired=407]="ProxyAuthenticationRequired",t[t.RequestTimeout=408]="RequestTimeout",t[t.Conflict=409]="Conflict",t[t.Gone=410]="Gone",t[t.LengthRequired=411]="LengthRequired",t[t.PreconditionFailed=412]="PreconditionFailed",t[t.PayloadTooLarge=413]="PayloadTooLarge",t[t.UriTooLong=414]="UriTooLong",t[t.UnsupportedMediaType=415]="UnsupportedMediaType",t[t.RangeNotSatisfiable=416]="RangeNotSatisfiable",t[t.ExpectationFailed=417]="ExpectationFailed",t[t.ImATeapot=418]="ImATeapot",t[t.MisdirectedRequest=421]="MisdirectedRequest",t[t.UnprocessableEntity=422]="UnprocessableEntity",t[t.Locked=423]="Locked",t[t.FailedDependency=424]="FailedDependency",t[t.TooEarly=425]="TooEarly",t[t.UpgradeRequired=426]="UpgradeRequired",t[t.PreconditionRequired=428]="PreconditionRequired",t[t.TooManyRequests=429]="TooManyRequests",t[t.RequestHeaderFieldsTooLarge=431]="RequestHeaderFieldsTooLarge",t[t.UnavailableForLegalReasons=451]="UnavailableForLegalReasons",t[t.InternalServerError=500]="InternalServerError",t[t.NotImplemented=501]="NotImplemented",t[t.BadGateway=502]="BadGateway",t[t.ServiceUnavailable=503]="ServiceUnavailable",t[t.GatewayTimeout=504]="GatewayTimeout",t[t.HttpVersionNotSupported=505]="HttpVersionNotSupported",t[t.VariantAlsoNegotiates=506]="VariantAlsoNegotiates",t[t.InsufficientStorage=507]="InsufficientStorage",t[t.LoopDetected=508]="LoopDetected",t[t.NotExtended=510]="NotExtended",t[t.NetworkAuthenticationRequired=511]="NetworkAuthenticationRequired",t}(Kt||{});function Gn(t,e){return{body:e,headers:t.headers,context:t.context,observe:t.observe,params:t.params,reportProgress:t.reportProgress,responseType:t.responseType,withCredentials:t.withCredentials,transferCache:t.transferCache}}var rt=(()=>{let e=class e{constructor(n){this.handler=n}request(n,i,o={}){let a;if(n instanceof tt)a=n;else{let l;o.headers instanceof te?l=o.headers:l=new te(o.headers);let c;o.params&&(o.params instanceof fe?c=o.params:c=new fe({fromObject:o.params})),a=new tt(n,i,o.body!==void 0?o.body:null,{headers:l,context:o.context,params:c,reportProgress:o.reportProgress,responseType:o.responseType||"json",withCredentials:o.withCredentials,transferCache:o.transferCache})}let s=p(a).pipe(ve(l=>this.handler.handle(l)));if(n instanceof tt||o.observe==="events")return s;let d=s.pipe(se(l=>l instanceof Wt));switch(o.observe||"body"){case"body":switch(a.responseType){case"arraybuffer":return d.pipe(C(l=>{if(l.body!==null&&!(l.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return l.body}));case"blob":return d.pipe(C(l=>{if(l.body!==null&&!(l.body instanceof Blob))throw new Error("Response is not a Blob.");return l.body}));case"text":return d.pipe(C(l=>{if(l.body!==null&&typeof l.body!="string")throw new Error("Response is not a string.");return l.body}));case"json":default:return d.pipe(C(l=>l.body))}case"response":return d;default:throw new Error(`Unreachable: unhandled observe type ${o.observe}}`)}}delete(n,i={}){return this.request("DELETE",n,i)}get(n,i={}){return this.request("GET",n,i)}head(n,i={}){return this.request("HEAD",n,i)}jsonp(n,i){return this.request("JSONP",n,{params:new fe().append(i,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(n,i={}){return this.request("OPTIONS",n,i)}patch(n,i,o={}){return this.request("PATCH",n,Gn(o,i))}post(n,i,o={}){return this.request("POST",n,Gn(o,i))}put(n,i,o={}){return this.request("PUT",n,Gn(o,i))}};e.\u0275fac=function(i){return new(i||e)(E(nt))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})();function La(t,e){return e(t)}function $a(t,e,r){return(n,i)=>ee(r,()=>e(n,o=>t(o,i)))}var Yr=new I(""),za=new I(""),Ba=new I("");var Jr=(()=>{let e=class e extends nt{constructor(n,i){super(),this.backend=n,this.injector=i,this.chain=null,this.pendingTasks=g(Pt);let o=g(Ba,{optional:!0});this.backend=o??n}handle(n){if(this.chain===null){let o=Array.from(new Set([...this.injector.get(Yr),...this.injector.get(za,[])]));this.chain=o.reduceRight((a,s)=>$a(a,s,this.injector),La)}let i=this.pendingTasks.add();return this.chain(n,o=>this.backend.handle(o)).pipe(ce(()=>this.pendingTasks.remove(i)))}};e.\u0275fac=function(i){return new(i||e)(E(qt),E(De))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})();var Ga=/^\)\]\}',?\n/;function qa(t){return"responseURL"in t&&t.responseURL?t.responseURL:/^X-Request-URL:/m.test(t.getAllResponseHeaders())?t.getResponseHeader("X-Request-URL"):null}var Xr=(()=>{let e=class e{constructor(n){this.xhrFactory=n}handle(n){if(n.method==="JSONP")throw new R(-2800,!1);let i=this.xhrFactory;return(i.\u0275loadImpl?V(i.\u0275loadImpl()):p(null)).pipe(W(()=>new Xi(a=>{let s=i.build();if(s.open(n.method,n.urlWithParams),n.withCredentials&&(s.withCredentials=!0),n.headers.forEach((D,M)=>s.setRequestHeader(D,M.join(","))),n.headers.has("Accept")||s.setRequestHeader("Accept","application/json, text/plain, */*"),!n.headers.has("Content-Type")){let D=n.detectContentTypeHeader();D!==null&&s.setRequestHeader("Content-Type",D)}if(n.responseType){let D=n.responseType.toLowerCase();s.responseType=D!=="json"?D:"text"}let d=n.serializeBody(),l=null,c=()=>{if(l!==null)return l;let D=s.statusText||"OK",M=new te(s.getAllResponseHeaders()),oe=qa(s)||n.url;return l=new Hn({headers:M,status:s.status,statusText:D,url:oe}),l},h=()=>{let{headers:D,status:M,statusText:oe,url:Zi}=c(),U=null;M!==Kt.NoContent&&(U=typeof s.response>"u"?s.responseText:s.response),M===0&&(M=U?Kt.Ok:0);let kn=M>=200&&M<300;if(n.responseType==="json"&&typeof U=="string"){let Ia=U;U=U.replace(Ga,"");try{U=U!==""?JSON.parse(U):null}catch(Da){U=Ia,kn&&(kn=!1,U={error:Da,text:U})}}kn?(a.next(new Wt({body:U,headers:D,status:M,statusText:oe,url:Zi||void 0})),a.complete()):a.error(new Ht({error:U,headers:D,status:M,statusText:oe,url:Zi||void 0}))},f=D=>{let{url:M}=c(),oe=new Ht({error:D,status:s.status||0,statusText:s.statusText||"Unknown Error",url:M||void 0});a.error(oe)},A=!1,ie=D=>{A||(a.next(c()),A=!0);let M={type:je.DownloadProgress,loaded:D.loaded};D.lengthComputable&&(M.total=D.total),n.responseType==="text"&&s.responseText&&(M.partialText=s.responseText),a.next(M)},re=D=>{let M={type:je.UploadProgress,loaded:D.loaded};D.lengthComputable&&(M.total=D.total),a.next(M)};return s.addEventListener("load",h),s.addEventListener("error",f),s.addEventListener("timeout",f),s.addEventListener("abort",f),n.reportProgress&&(s.addEventListener("progress",ie),d!==null&&s.upload&&s.upload.addEventListener("progress",re)),s.send(d),a.next({type:je.Sent}),()=>{s.removeEventListener("error",f),s.removeEventListener("abort",f),s.removeEventListener("load",h),s.removeEventListener("timeout",f),n.reportProgress&&(s.removeEventListener("progress",ie),d!==null&&s.upload&&s.upload.removeEventListener("progress",re)),s.readyState!==s.DONE&&s.abort()}})))}};e.\u0275fac=function(i){return new(i||e)(E(Bt))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})(),Qr=new I(""),Wa="XSRF-TOKEN",Ha=new I("",{providedIn:"root",factory:()=>Wa}),Ka="X-XSRF-TOKEN",Za=new I("",{providedIn:"root",factory:()=>Ka}),Zt=class{},Ja=(()=>{let e=class e{constructor(n,i,o){this.doc=n,this.platform=i,this.cookieName=o,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if(this.platform==="server")return null;let n=this.doc.cookie||"";return n!==this.lastCookieString&&(this.parseCount++,this.lastToken=$t(n,this.cookieName),this.lastCookieString=n),this.lastToken}};e.\u0275fac=function(i){return new(i||e)(E(N),E(Ee),E(Ha))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})();function Xa(t,e){let r=t.url.toLowerCase();if(!g(Qr)||t.method==="GET"||t.method==="HEAD"||r.startsWith("http://")||r.startsWith("https://"))return e(t);let n=g(Zt).getToken(),i=g(Za);return n!=null&&!t.headers.has(i)&&(t=t.clone({headers:t.headers.set(i,n)})),e(t)}function eo(...t){let e=[rt,Xr,Jr,{provide:nt,useExisting:Jr},{provide:qt,useExisting:Xr},{provide:Yr,useValue:Xa,multi:!0},{provide:Qr,useValue:!0},{provide:Zt,useClass:Ja}];for(let r of t)e.push(...r.\u0275providers);return Ce(e)}var Jn=class extends $r{constructor(){super(...arguments),this.supportsDOMEvents=!0}},Xn=class t extends Jn{static makeCurrent(){Lr(new t)}onAndCancel(e,r,n){return e.addEventListener(r,n),()=>{e.removeEventListener(r,n)}}dispatchEvent(e,r){e.dispatchEvent(r)}remove(e){e.parentNode&&e.parentNode.removeChild(e)}createElement(e,r){return r=r||this.getDefaultDocument(),r.createElement(e)}createHtmlDocument(){return document.implementation.createHTMLDocument("fakeTitle")}getDefaultDocument(){return document}isElementNode(e){return e.nodeType===Node.ELEMENT_NODE}isShadowRoot(e){return e instanceof DocumentFragment}getGlobalEventTarget(e,r){return r==="window"?window:r==="document"?e:r==="body"?e.body:null}getBaseHref(e){let r=Qa();return r==null?null:es(r)}resetBaseElement(){ot=null}getUserAgent(){return window.navigator.userAgent}getCookie(e){return $t(document.cookie,e)}},ot=null;function Qa(){return ot=ot||document.querySelector("base"),ot?ot.getAttribute("href"):null}function es(t){return new URL(t,document.baseURI).pathname}var ts=(()=>{let e=class e{build(){return new XMLHttpRequest}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})(),Yn=new I(""),ao=(()=>{let e=class e{constructor(n,i){this._zone=i,this._eventNameToPlugin=new Map,n.forEach(o=>{o.manager=this}),this._plugins=n.slice().reverse()}addEventListener(n,i,o){return this._findPluginFor(i).addEventListener(n,i,o)}getZone(){return this._zone}_findPluginFor(n){let i=this._eventNameToPlugin.get(n);if(i)return i;if(i=this._plugins.find(a=>a.supports(n)),!i)throw new R(5101,!1);return this._eventNameToPlugin.set(n,i),i}};e.\u0275fac=function(i){return new(i||e)(E(Yn),E(H))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})(),Jt=class{constructor(e){this._doc=e}},Kn="ng-app-id",so=(()=>{let e=class e{constructor(n,i,o,a={}){this.doc=n,this.appId=i,this.nonce=o,this.platformId=a,this.styleRef=new Map,this.hostNodes=new Set,this.styleNodesInDOM=this.collectServerRenderedStyles(),this.platformIsServer=zt(a),this.resetHostNodes()}addStyles(n){for(let i of n)this.changeUsageCount(i,1)===1&&this.onStyleAdded(i)}removeStyles(n){for(let i of n)this.changeUsageCount(i,-1)<=0&&this.onStyleRemoved(i)}ngOnDestroy(){let n=this.styleNodesInDOM;n&&(n.forEach(i=>i.remove()),n.clear());for(let i of this.getAllStyles())this.onStyleRemoved(i);this.resetHostNodes()}addHost(n){this.hostNodes.add(n);for(let i of this.getAllStyles())this.addStyleToHost(n,i)}removeHost(n){this.hostNodes.delete(n)}getAllStyles(){return this.styleRef.keys()}onStyleAdded(n){for(let i of this.hostNodes)this.addStyleToHost(i,n)}onStyleRemoved(n){let i=this.styleRef;i.get(n)?.elements?.forEach(o=>o.remove()),i.delete(n)}collectServerRenderedStyles(){let n=this.doc.head?.querySelectorAll(`style[${Kn}="${this.appId}"]`);if(n?.length){let i=new Map;return n.forEach(o=>{o.textContent!=null&&i.set(o.textContent,o)}),i}return null}changeUsageCount(n,i){let o=this.styleRef;if(o.has(n)){let a=o.get(n);return a.usage+=i,a.usage}return o.set(n,{usage:i,elements:[]}),i}getStyleElement(n,i){let o=this.styleNodesInDOM,a=o?.get(i);if(a?.parentNode===n)return o.delete(i),a.removeAttribute(Kn),a;{let s=this.doc.createElement("style");return this.nonce&&s.setAttribute("nonce",this.nonce),s.textContent=i,this.platformIsServer&&s.setAttribute(Kn,this.appId),n.appendChild(s),s}}addStyleToHost(n,i){let o=this.getStyleElement(n,i),a=this.styleRef,s=a.get(i)?.elements;s?s.push(o):a.set(i,{elements:[o],usage:1})}resetHostNodes(){let n=this.hostNodes;n.clear(),n.add(this.doc.head)}};e.\u0275fac=function(i){return new(i||e)(E(N),E(Fn),E(jn,8),E(Ee))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})(),Zn={svg:"http://www.w3.org/2000/svg",xhtml:"http://www.w3.org/1999/xhtml",xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace",xmlns:"http://www.w3.org/2000/xmlns/",math:"http://www.w3.org/1998/MathML/"},ei=/%COMP%/g,lo="%COMP%",ns=`_nghost-${lo}`,is=`_ngcontent-${lo}`,rs=!0,os=new I("",{providedIn:"root",factory:()=>rs});function as(t){return is.replace(ei,t)}function ss(t){return ns.replace(ei,t)}function co(t,e){return e.map(r=>r.replace(ei,t))}var Xt=(()=>{let e=class e{constructor(n,i,o,a,s,d,l,c=null){this.eventManager=n,this.sharedStylesHost=i,this.appId=o,this.removeStylesOnCompDestroy=a,this.doc=s,this.platformId=d,this.ngZone=l,this.nonce=c,this.rendererByCompId=new Map,this.platformIsServer=zt(d),this.defaultRenderer=new at(n,s,l,this.platformIsServer)}createRenderer(n,i){if(!n||!i)return this.defaultRenderer;this.platformIsServer&&i.encapsulation===Ke.ShadowDom&&(i=O(u({},i),{encapsulation:Ke.Emulated}));let o=this.getOrCreateRenderer(n,i);return o instanceof Yt?o.applyToHost(n):o instanceof st&&o.applyStyles(),o}getOrCreateRenderer(n,i){let o=this.rendererByCompId,a=o.get(i.id);if(!a){let s=this.doc,d=this.ngZone,l=this.eventManager,c=this.sharedStylesHost,h=this.removeStylesOnCompDestroy,f=this.platformIsServer;switch(i.encapsulation){case Ke.Emulated:a=new Yt(l,c,i,this.appId,h,s,d,f);break;case Ke.ShadowDom:return new Qn(l,c,n,i,s,d,this.nonce,f);default:a=new st(l,c,i,h,s,d,f);break}o.set(i.id,a)}return a}ngOnDestroy(){this.rendererByCompId.clear()}};e.\u0275fac=function(i){return new(i||e)(E(ao),E(so),E(Fn),E(os),E(N),E(Ee),E(H),E(jn))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})(),at=class{constructor(e,r,n,i){this.eventManager=e,this.doc=r,this.ngZone=n,this.platformIsServer=i,this.data=Object.create(null),this.throwOnSyntheticProps=!0,this.destroyNode=null}destroy(){}createElement(e,r){return r?this.doc.createElementNS(Zn[r]||r,e):this.doc.createElement(e)}createComment(e){return this.doc.createComment(e)}createText(e){return this.doc.createTextNode(e)}appendChild(e,r){(no(e)?e.content:e).appendChild(r)}insertBefore(e,r,n){e&&(no(e)?e.content:e).insertBefore(r,n)}removeChild(e,r){e&&e.removeChild(r)}selectRootElement(e,r){let n=typeof e=="string"?this.doc.querySelector(e):e;if(!n)throw new R(-5104,!1);return r||(n.textContent=""),n}parentNode(e){return e.parentNode}nextSibling(e){return e.nextSibling}setAttribute(e,r,n,i){if(i){r=i+":"+r;let o=Zn[i];o?e.setAttributeNS(o,r,n):e.setAttribute(r,n)}else e.setAttribute(r,n)}removeAttribute(e,r,n){if(n){let i=Zn[n];i?e.removeAttributeNS(i,r):e.removeAttribute(`${n}:${r}`)}else e.removeAttribute(r)}addClass(e,r){e.classList.add(r)}removeClass(e,r){e.classList.remove(r)}setStyle(e,r,n,i){i&(Je.DashCase|Je.Important)?e.style.setProperty(r,n,i&Je.Important?"important":""):e.style[r]=n}removeStyle(e,r,n){n&Je.DashCase?e.style.removeProperty(r):e.style[r]=""}setProperty(e,r,n){e!=null&&(e[r]=n)}setValue(e,r){e.nodeValue=r}listen(e,r,n){if(typeof e=="string"&&(e=Fe().getGlobalEventTarget(this.doc,e),!e))throw new Error(`Unsupported event target ${e} for event ${r}`);return this.eventManager.addEventListener(e,r,this.decoratePreventDefault(n))}decoratePreventDefault(e){return r=>{if(r==="__ngUnwrap__")return e;(this.platformIsServer?this.ngZone.runGuarded(()=>e(r)):e(r))===!1&&r.preventDefault()}}};function no(t){return t.tagName==="TEMPLATE"&&t.content!==void 0}var Qn=class extends at{constructor(e,r,n,i,o,a,s,d){super(e,o,a,d),this.sharedStylesHost=r,this.hostEl=n,this.shadowRoot=n.attachShadow({mode:"open"}),this.sharedStylesHost.addHost(this.shadowRoot);let l=co(i.id,i.styles);for(let c of l){let h=document.createElement("style");s&&h.setAttribute("nonce",s),h.textContent=c,this.shadowRoot.appendChild(h)}}nodeOrShadowRoot(e){return e===this.hostEl?this.shadowRoot:e}appendChild(e,r){return super.appendChild(this.nodeOrShadowRoot(e),r)}insertBefore(e,r,n){return super.insertBefore(this.nodeOrShadowRoot(e),r,n)}removeChild(e,r){return super.removeChild(this.nodeOrShadowRoot(e),r)}parentNode(e){return this.nodeOrShadowRoot(super.parentNode(this.nodeOrShadowRoot(e)))}destroy(){this.sharedStylesHost.removeHost(this.shadowRoot)}},st=class extends at{constructor(e,r,n,i,o,a,s,d){super(e,o,a,s),this.sharedStylesHost=r,this.removeStylesOnCompDestroy=i,this.styles=d?co(d,n.styles):n.styles}applyStyles(){this.sharedStylesHost.addStyles(this.styles)}destroy(){this.removeStylesOnCompDestroy&&this.sharedStylesHost.removeStyles(this.styles)}},Yt=class extends st{constructor(e,r,n,i,o,a,s,d){let l=i+"-"+n.id;super(e,r,n,o,a,s,d,l),this.contentAttr=as(l),this.hostAttr=ss(l)}applyToHost(e){this.applyStyles(),this.setAttribute(e,this.hostAttr,"")}createElement(e,r){let n=super.createElement(e,r);return super.setAttribute(n,this.contentAttr,""),n}},ls=(()=>{let e=class e extends Jt{constructor(n){super(n)}supports(n){return!0}addEventListener(n,i,o){return n.addEventListener(i,o,!1),()=>this.removeEventListener(n,i,o)}removeEventListener(n,i,o){return n.removeEventListener(i,o)}};e.\u0275fac=function(i){return new(i||e)(E(N))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})(),io=["alt","control","meta","shift"],ds={"\b":"Backspace","	":"Tab","\x7F":"Delete","\x1B":"Escape",Del:"Delete",Esc:"Escape",Left:"ArrowLeft",Right:"ArrowRight",Up:"ArrowUp",Down:"ArrowDown",Menu:"ContextMenu",Scroll:"ScrollLock",Win:"OS"},cs={alt:t=>t.altKey,control:t=>t.ctrlKey,meta:t=>t.metaKey,shift:t=>t.shiftKey},us=(()=>{let e=class e extends Jt{constructor(n){super(n)}supports(n){return e.parseEventName(n)!=null}addEventListener(n,i,o){let a=e.parseEventName(i),s=e.eventCallback(a.fullKey,o,this.manager.getZone());return this.manager.getZone().runOutsideAngular(()=>Fe().onAndCancel(n,a.domEventName,s))}static parseEventName(n){let i=n.toLowerCase().split("."),o=i.shift();if(i.length===0||!(o==="keydown"||o==="keyup"))return null;let a=e._normalizeKey(i.pop()),s="",d=i.indexOf("code");if(d>-1&&(i.splice(d,1),s="code."),io.forEach(c=>{let h=i.indexOf(c);h>-1&&(i.splice(h,1),s+=c+".")}),s+=a,i.length!=0||a.length===0)return null;let l={};return l.domEventName=o,l.fullKey=s,l}static matchEventFullKeyCode(n,i){let o=ds[n.key]||n.key,a="";return i.indexOf("code.")>-1&&(o=n.code,a="code."),o==null||!o?!1:(o=o.toLowerCase(),o===" "?o="space":o==="."&&(o="dot"),io.forEach(s=>{if(s!==o){let d=cs[s];d(n)&&(a+=s+".")}}),a+=o,a===i)}static eventCallback(n,i,o){return a=>{e.matchEventFullKeyCode(a,n)&&o.runGuarded(()=>i(a))}}static _normalizeKey(n){return n==="esc"?"escape":n}};e.\u0275fac=function(i){return new(i||e)(E(N))},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})();function uo(t,e){return Ur(u({rootComponent:t},hs(e)))}function hs(t){return{appProviders:[...ys,...t?.providers??[]],platformProviders:ms}}function fs(){Xn.makeCurrent()}function ps(){return new ke}function gs(){return ur(document),document}var ms=[{provide:Ee,useValue:Gr},{provide:hr,useValue:fs,multi:!0},{provide:N,useFactory:gs,deps:[]}];var ys=[{provide:lr,useValue:"root"},{provide:ke,useFactory:ps,deps:[]},{provide:Yn,useClass:ls,multi:!0,deps:[N,H,Ee]},{provide:Yn,useClass:us,multi:!0,deps:[N]},Xt,so,ao,{provide:Tt,useExisting:Xt},{provide:Bt,useClass:ts,deps:[]},[]];var ho=(()=>{let e=class e{constructor(n){this._doc=n}getTitle(){return this._doc.title}setTitle(n){this._doc.title=n||""}};e.\u0275fac=function(i){return new(i||e)(E(N))},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();var ti=(()=>{let e=class e{};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:function(i){let o=null;return i?o=new(i||e):o=E(bs),o},providedIn:"root"});let t=e;return t})(),bs=(()=>{let e=class e extends ti{constructor(n){super(),this._doc=n}sanitize(n,i){if(i==null)return null;switch(n){case $.NONE:return i;case $.HTML:return Oe(i,"HTML")?Te(i):xr(this._doc,String(i)).toString();case $.STYLE:return Oe(i,"Style")?Te(i):i;case $.SCRIPT:if(Oe(i,"Script"))return Te(i);throw new R(5200,!1);case $.URL:return Oe(i,"URL")?Te(i):vr(String(i));case $.RESOURCE_URL:if(Oe(i,"ResourceURL"))return Te(i);throw new R(5201,!1);default:throw new R(5202,!1)}}bypassSecurityTrustHtml(n){return pr(n)}bypassSecurityTrustStyle(n){return gr(n)}bypassSecurityTrustScript(n){return mr(n)}bypassSecurityTrustUrl(n){return yr(n)}bypassSecurityTrustResourceUrl(n){return br(n)}};e.\u0275fac=function(i){return new(i||e)(E(N))},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();var _="primary",_t=Symbol("RouteTitle"),ai=class{constructor(e){this.params=e||{}}has(e){return Object.prototype.hasOwnProperty.call(this.params,e)}get(e){if(this.has(e)){let r=this.params[e];return Array.isArray(r)?r[0]:r}return null}getAll(e){if(this.has(e)){let r=this.params[e];return Array.isArray(r)?r:[r]}return[]}get keys(){return Object.keys(this.params)}};function ze(t){return new ai(t)}function xs(t,e,r){let n=r.path.split("/");if(n.length>t.length||r.pathMatch==="full"&&(e.hasChildren()||n.length<t.length))return null;let i={};for(let o=0;o<n.length;o++){let a=n[o],s=t[o];if(a.startsWith(":"))i[a.substring(1)]=s;else if(a!==s.path)return null}return{consumed:t.slice(0,n.length),posParams:i}}function ws(t,e){if(t.length!==e.length)return!1;for(let r=0;r<t.length;++r)if(!Y(t[r],e[r]))return!1;return!0}function Y(t,e){let r=t?si(t):void 0,n=e?si(e):void 0;if(!r||!n||r.length!=n.length)return!1;let i;for(let o=0;o<r.length;o++)if(i=r[o],!vo(t[i],e[i]))return!1;return!0}function si(t){return[...Object.keys(t),...Object.getOwnPropertySymbols(t)]}function vo(t,e){if(Array.isArray(t)&&Array.isArray(e)){if(t.length!==e.length)return!1;let r=[...t].sort(),n=[...e].sort();return r.every((i,o)=>n[o]===i)}else return t===e}function xo(t){return t.length>0?t[t.length-1]:null}function me(t){return Yi(t)?t:Vt(t)?V(Promise.resolve(t)):p(t)}var _s={exact:_o,subset:Co},wo={exact:Cs,subset:ks,ignored:()=>!0};function po(t,e,r){return _s[r.paths](t.root,e.root,r.matrixParams)&&wo[r.queryParams](t.queryParams,e.queryParams)&&!(r.fragment==="exact"&&t.fragment!==e.fragment)}function Cs(t,e){return Y(t,e)}function _o(t,e,r){if(!Ae(t.segments,e.segments)||!tn(t.segments,e.segments,r)||t.numberOfChildren!==e.numberOfChildren)return!1;for(let n in e.children)if(!t.children[n]||!_o(t.children[n],e.children[n],r))return!1;return!0}function ks(t,e){return Object.keys(e).length<=Object.keys(t).length&&Object.keys(e).every(r=>vo(t[r],e[r]))}function Co(t,e,r){return ko(t,e,e.segments,r)}function ko(t,e,r,n){if(t.segments.length>r.length){let i=t.segments.slice(0,r.length);return!(!Ae(i,r)||e.hasChildren()||!tn(i,r,n))}else if(t.segments.length===r.length){if(!Ae(t.segments,r)||!tn(t.segments,r,n))return!1;for(let i in e.children)if(!t.children[i]||!Co(t.children[i],e.children[i],n))return!1;return!0}else{let i=r.slice(0,t.segments.length),o=r.slice(t.segments.length);return!Ae(t.segments,i)||!tn(t.segments,i,n)||!t.children[_]?!1:ko(t.children[_],e,o,n)}}function tn(t,e,r){return e.every((n,i)=>wo[r](t[i].parameters,n.parameters))}var pe=class{constructor(e=new S([],{}),r={},n=null){this.root=e,this.queryParams=r,this.fragment=n}get queryParamMap(){return this._queryParamMap??=ze(this.queryParams),this._queryParamMap}toString(){return As.serialize(this)}},S=class{constructor(e,r){this.segments=e,this.children=r,this.parent=null,Object.values(r).forEach(n=>n.parent=this)}hasChildren(){return this.numberOfChildren>0}get numberOfChildren(){return Object.keys(this.children).length}toString(){return nn(this)}},Se=class{constructor(e,r){this.path=e,this.parameters=r}get parameterMap(){return this._parameterMap??=ze(this.parameters),this._parameterMap}toString(){return So(this)}};function Es(t,e){return Ae(t,e)&&t.every((r,n)=>Y(r.parameters,e[n].parameters))}function Ae(t,e){return t.length!==e.length?!1:t.every((r,n)=>r.path===e[n].path)}function Ss(t,e){let r=[];return Object.entries(t.children).forEach(([n,i])=>{n===_&&(r=r.concat(e(i,n)))}),Object.entries(t.children).forEach(([n,i])=>{n!==_&&(r=r.concat(e(i,n)))}),r}var Oi=(()=>{let e=class e{};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:()=>new on,providedIn:"root"});let t=e;return t})(),on=class{parse(e){let r=new di(e);return new pe(r.parseRootSegment(),r.parseQueryParams(),r.parseFragment())}serialize(e){let r=`/${lt(e.root,!0)}`,n=Ds(e.queryParams),i=typeof e.fragment=="string"?`#${Ms(e.fragment)}`:"";return`${r}${n}${i}`}},As=new on;function nn(t){return t.segments.map(e=>So(e)).join("/")}function lt(t,e){if(!t.hasChildren())return nn(t);if(e){let r=t.children[_]?lt(t.children[_],!1):"",n=[];return Object.entries(t.children).forEach(([i,o])=>{i!==_&&n.push(`${i}:${lt(o,!1)}`)}),n.length>0?`${r}(${n.join("//")})`:r}else{let r=Ss(t,(n,i)=>i===_?[lt(t.children[_],!1)]:[`${i}:${lt(n,!1)}`]);return Object.keys(t.children).length===1&&t.children[_]!=null?`${nn(t)}/${r[0]}`:`${nn(t)}/(${r.join("//")})`}}function Eo(t){return encodeURIComponent(t).replace(/%40/g,"@").replace(/%3A/gi,":").replace(/%24/g,"$").replace(/%2C/gi,",")}function Qt(t){return Eo(t).replace(/%3B/gi,";")}function Ms(t){return encodeURI(t)}function li(t){return Eo(t).replace(/\(/g,"%28").replace(/\)/g,"%29").replace(/%26/gi,"&")}function rn(t){return decodeURIComponent(t)}function go(t){return rn(t.replace(/\+/g,"%20"))}function So(t){return`${li(t.path)}${Is(t.parameters)}`}function Is(t){return Object.entries(t).map(([e,r])=>`;${li(e)}=${li(r)}`).join("")}function Ds(t){let e=Object.entries(t).map(([r,n])=>Array.isArray(n)?n.map(i=>`${Qt(r)}=${Qt(i)}`).join("&"):`${Qt(r)}=${Qt(n)}`).filter(r=>r);return e.length?`?${e.join("&")}`:""}var Rs=/^[^\/()?;#]+/;function ni(t){let e=t.match(Rs);return e?e[0]:""}var Ts=/^[^\/()?;=#]+/;function Os(t){let e=t.match(Ts);return e?e[0]:""}var Ps=/^[^=?&#]+/;function Ns(t){let e=t.match(Ps);return e?e[0]:""}var Fs=/^[^&#]+/;function js(t){let e=t.match(Fs);return e?e[0]:""}var di=class{constructor(e){this.url=e,this.remaining=e}parseRootSegment(){return this.consumeOptional("/"),this.remaining===""||this.peekStartsWith("?")||this.peekStartsWith("#")?new S([],{}):new S([],this.parseChildren())}parseQueryParams(){let e={};if(this.consumeOptional("?"))do this.parseQueryParam(e);while(this.consumeOptional("&"));return e}parseFragment(){return this.consumeOptional("#")?decodeURIComponent(this.remaining):null}parseChildren(){if(this.remaining==="")return{};this.consumeOptional("/");let e=[];for(this.peekStartsWith("(")||e.push(this.parseSegment());this.peekStartsWith("/")&&!this.peekStartsWith("//")&&!this.peekStartsWith("/(");)this.capture("/"),e.push(this.parseSegment());let r={};this.peekStartsWith("/(")&&(this.capture("/"),r=this.parseParens(!0));let n={};return this.peekStartsWith("(")&&(n=this.parseParens(!1)),(e.length>0||Object.keys(r).length>0)&&(n[_]=new S(e,r)),n}parseSegment(){let e=ni(this.remaining);if(e===""&&this.peekStartsWith(";"))throw new R(4009,!1);return this.capture(e),new Se(rn(e),this.parseMatrixParams())}parseMatrixParams(){let e={};for(;this.consumeOptional(";");)this.parseParam(e);return e}parseParam(e){let r=Os(this.remaining);if(!r)return;this.capture(r);let n="";if(this.consumeOptional("=")){let i=ni(this.remaining);i&&(n=i,this.capture(n))}e[rn(r)]=rn(n)}parseQueryParam(e){let r=Ns(this.remaining);if(!r)return;this.capture(r);let n="";if(this.consumeOptional("=")){let a=js(this.remaining);a&&(n=a,this.capture(n))}let i=go(r),o=go(n);if(e.hasOwnProperty(i)){let a=e[i];Array.isArray(a)||(a=[a],e[i]=a),a.push(o)}else e[i]=o}parseParens(e){let r={};for(this.capture("(");!this.consumeOptional(")")&&this.remaining.length>0;){let n=ni(this.remaining),i=this.remaining[n.length];if(i!=="/"&&i!==")"&&i!==";")throw new R(4010,!1);let o;n.indexOf(":")>-1?(o=n.slice(0,n.indexOf(":")),this.capture(o),this.capture(":")):e&&(o=_);let a=this.parseChildren();r[o]=Object.keys(a).length===1?a[_]:new S([],a),this.consumeOptional("//")}return r}peekStartsWith(e){return this.remaining.startsWith(e)}consumeOptional(e){return this.peekStartsWith(e)?(this.remaining=this.remaining.substring(e.length),!0):!1}capture(e){if(!this.consumeOptional(e))throw new R(4011,!1)}};function Ao(t){return t.segments.length>0?new S([],{[_]:t}):t}function Mo(t){let e={};for(let[n,i]of Object.entries(t.children)){let o=Mo(i);if(n===_&&o.segments.length===0&&o.hasChildren())for(let[a,s]of Object.entries(o.children))e[a]=s;else(o.segments.length>0||o.hasChildren())&&(e[n]=o)}let r=new S(t.segments,e);return Vs(r)}function Vs(t){if(t.numberOfChildren===1&&t.children[_]){let e=t.children[_];return new S(t.segments.concat(e.segments),e.children)}return t}function Be(t){return t instanceof pe}function Us(t,e,r=null,n=null){let i=Io(t);return Do(i,e,r,n)}function Io(t){let e;function r(o){let a={};for(let d of o.children){let l=r(d);a[d.outlet]=l}let s=new S(o.url,a);return o===t&&(e=s),s}let n=r(t.root),i=Ao(n);return e??i}function Do(t,e,r,n){let i=t;for(;i.parent;)i=i.parent;if(e.length===0)return ii(i,i,i,r,n);let o=Ls(e);if(o.toRoot())return ii(i,i,new S([],{}),r,n);let a=$s(o,i,t),s=a.processChildren?ut(a.segmentGroup,a.index,o.commands):To(a.segmentGroup,a.index,o.commands);return ii(i,a.segmentGroup,s,r,n)}function an(t){return typeof t=="object"&&t!=null&&!t.outlets&&!t.segmentPath}function pt(t){return typeof t=="object"&&t!=null&&t.outlets}function ii(t,e,r,n,i){let o={};n&&Object.entries(n).forEach(([d,l])=>{o[d]=Array.isArray(l)?l.map(c=>`${c}`):`${l}`});let a;t===e?a=r:a=Ro(t,e,r);let s=Ao(Mo(a));return new pe(s,o,i)}function Ro(t,e,r){let n={};return Object.entries(t.children).forEach(([i,o])=>{o===e?n[i]=r:n[i]=Ro(o,e,r)}),new S(t.segments,n)}var sn=class{constructor(e,r,n){if(this.isAbsolute=e,this.numberOfDoubleDots=r,this.commands=n,e&&n.length>0&&an(n[0]))throw new R(4003,!1);let i=n.find(pt);if(i&&i!==xo(n))throw new R(4004,!1)}toRoot(){return this.isAbsolute&&this.commands.length===1&&this.commands[0]=="/"}};function Ls(t){if(typeof t[0]=="string"&&t.length===1&&t[0]==="/")return new sn(!0,0,t);let e=0,r=!1,n=t.reduce((i,o,a)=>{if(typeof o=="object"&&o!=null){if(o.outlets){let s={};return Object.entries(o.outlets).forEach(([d,l])=>{s[d]=typeof l=="string"?l.split("/"):l}),[...i,{outlets:s}]}if(o.segmentPath)return[...i,o.segmentPath]}return typeof o!="string"?[...i,o]:a===0?(o.split("/").forEach((s,d)=>{d==0&&s==="."||(d==0&&s===""?r=!0:s===".."?e++:s!=""&&i.push(s))}),i):[...i,o]},[]);return new sn(r,e,n)}var Le=class{constructor(e,r,n){this.segmentGroup=e,this.processChildren=r,this.index=n}};function $s(t,e,r){if(t.isAbsolute)return new Le(e,!0,0);if(!r)return new Le(e,!1,NaN);if(r.parent===null)return new Le(r,!0,0);let n=an(t.commands[0])?0:1,i=r.segments.length-1+n;return zs(r,i,t.numberOfDoubleDots)}function zs(t,e,r){let n=t,i=e,o=r;for(;o>i;){if(o-=i,n=n.parent,!n)throw new R(4005,!1);i=n.segments.length}return new Le(n,!1,i-o)}function Bs(t){return pt(t[0])?t[0].outlets:{[_]:t}}function To(t,e,r){if(t??=new S([],{}),t.segments.length===0&&t.hasChildren())return ut(t,e,r);let n=Gs(t,e,r),i=r.slice(n.commandIndex);if(n.match&&n.pathIndex<t.segments.length){let o=new S(t.segments.slice(0,n.pathIndex),{});return o.children[_]=new S(t.segments.slice(n.pathIndex),t.children),ut(o,0,i)}else return n.match&&i.length===0?new S(t.segments,{}):n.match&&!t.hasChildren()?ci(t,e,r):n.match?ut(t,0,i):ci(t,e,r)}function ut(t,e,r){if(r.length===0)return new S(t.segments,{});{let n=Bs(r),i={};if(Object.keys(n).some(o=>o!==_)&&t.children[_]&&t.numberOfChildren===1&&t.children[_].segments.length===0){let o=ut(t.children[_],e,r);return new S(t.segments,o.children)}return Object.entries(n).forEach(([o,a])=>{typeof a=="string"&&(a=[a]),a!==null&&(i[o]=To(t.children[o],e,a))}),Object.entries(t.children).forEach(([o,a])=>{n[o]===void 0&&(i[o]=a)}),new S(t.segments,i)}}function Gs(t,e,r){let n=0,i=e,o={match:!1,pathIndex:0,commandIndex:0};for(;i<t.segments.length;){if(n>=r.length)return o;let a=t.segments[i],s=r[n];if(pt(s))break;let d=`${s}`,l=n<r.length-1?r[n+1]:null;if(i>0&&d===void 0)break;if(d&&l&&typeof l=="object"&&l.outlets===void 0){if(!yo(d,l,a))return o;n+=2}else{if(!yo(d,{},a))return o;n++}i++}return{match:!0,pathIndex:i,commandIndex:n}}function ci(t,e,r){let n=t.segments.slice(0,e),i=0;for(;i<r.length;){let o=r[i];if(pt(o)){let d=qs(o.outlets);return new S(n,d)}if(i===0&&an(r[0])){let d=t.segments[e];n.push(new Se(d.path,mo(r[0]))),i++;continue}let a=pt(o)?o.outlets[_]:`${o}`,s=i<r.length-1?r[i+1]:null;a&&s&&an(s)?(n.push(new Se(a,mo(s))),i+=2):(n.push(new Se(a,{})),i++)}return new S(n,{})}function qs(t){let e={};return Object.entries(t).forEach(([r,n])=>{typeof n=="string"&&(n=[n]),n!==null&&(e[r]=ci(new S([],{}),0,n))}),e}function mo(t){let e={};return Object.entries(t).forEach(([r,n])=>e[r]=`${n}`),e}function yo(t,e,r){return t==r.path&&Y(e,r.parameters)}var ht="imperative",F=function(t){return t[t.NavigationStart=0]="NavigationStart",t[t.NavigationEnd=1]="NavigationEnd",t[t.NavigationCancel=2]="NavigationCancel",t[t.NavigationError=3]="NavigationError",t[t.RoutesRecognized=4]="RoutesRecognized",t[t.ResolveStart=5]="ResolveStart",t[t.ResolveEnd=6]="ResolveEnd",t[t.GuardsCheckStart=7]="GuardsCheckStart",t[t.GuardsCheckEnd=8]="GuardsCheckEnd",t[t.RouteConfigLoadStart=9]="RouteConfigLoadStart",t[t.RouteConfigLoadEnd=10]="RouteConfigLoadEnd",t[t.ChildActivationStart=11]="ChildActivationStart",t[t.ChildActivationEnd=12]="ChildActivationEnd",t[t.ActivationStart=13]="ActivationStart",t[t.ActivationEnd=14]="ActivationEnd",t[t.Scroll=15]="Scroll",t[t.NavigationSkipped=16]="NavigationSkipped",t}(F||{}),K=class{constructor(e,r){this.id=e,this.url=r}},gt=class extends K{constructor(e,r,n="imperative",i=null){super(e,r),this.type=F.NavigationStart,this.navigationTrigger=n,this.restoredState=i}toString(){return`NavigationStart(id: ${this.id}, url: '${this.url}')`}},Me=class extends K{constructor(e,r,n){super(e,r),this.urlAfterRedirects=n,this.type=F.NavigationEnd}toString(){return`NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`}},B=function(t){return t[t.Redirect=0]="Redirect",t[t.SupersededByNewNavigation=1]="SupersededByNewNavigation",t[t.NoDataFromResolver=2]="NoDataFromResolver",t[t.GuardRejected=3]="GuardRejected",t}(B||{}),ui=function(t){return t[t.IgnoredSameUrlNavigation=0]="IgnoredSameUrlNavigation",t[t.IgnoredByUrlHandlingStrategy=1]="IgnoredByUrlHandlingStrategy",t}(ui||{}),ge=class extends K{constructor(e,r,n,i){super(e,r),this.reason=n,this.code=i,this.type=F.NavigationCancel}toString(){return`NavigationCancel(id: ${this.id}, url: '${this.url}')`}},Ie=class extends K{constructor(e,r,n,i){super(e,r),this.reason=n,this.code=i,this.type=F.NavigationSkipped}},mt=class extends K{constructor(e,r,n,i){super(e,r),this.error=n,this.target=i,this.type=F.NavigationError}toString(){return`NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`}},ln=class extends K{constructor(e,r,n,i){super(e,r),this.urlAfterRedirects=n,this.state=i,this.type=F.RoutesRecognized}toString(){return`RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},hi=class extends K{constructor(e,r,n,i){super(e,r),this.urlAfterRedirects=n,this.state=i,this.type=F.GuardsCheckStart}toString(){return`GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},fi=class extends K{constructor(e,r,n,i,o){super(e,r),this.urlAfterRedirects=n,this.state=i,this.shouldActivate=o,this.type=F.GuardsCheckEnd}toString(){return`GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`}},pi=class extends K{constructor(e,r,n,i){super(e,r),this.urlAfterRedirects=n,this.state=i,this.type=F.ResolveStart}toString(){return`ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},gi=class extends K{constructor(e,r,n,i){super(e,r),this.urlAfterRedirects=n,this.state=i,this.type=F.ResolveEnd}toString(){return`ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`}},mi=class{constructor(e){this.route=e,this.type=F.RouteConfigLoadStart}toString(){return`RouteConfigLoadStart(path: ${this.route.path})`}},yi=class{constructor(e){this.route=e,this.type=F.RouteConfigLoadEnd}toString(){return`RouteConfigLoadEnd(path: ${this.route.path})`}},bi=class{constructor(e){this.snapshot=e,this.type=F.ChildActivationStart}toString(){return`ChildActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},vi=class{constructor(e){this.snapshot=e,this.type=F.ChildActivationEnd}toString(){return`ChildActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},xi=class{constructor(e){this.snapshot=e,this.type=F.ActivationStart}toString(){return`ActivationStart(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}},wi=class{constructor(e){this.snapshot=e,this.type=F.ActivationEnd}toString(){return`ActivationEnd(path: '${this.snapshot.routeConfig&&this.snapshot.routeConfig.path||""}')`}};var yt=class{},bt=class{constructor(e){this.url=e}};var _i=class{constructor(){this.outlet=null,this.route=null,this.injector=null,this.children=new pn,this.attachRef=null}},pn=(()=>{let e=class e{constructor(){this.contexts=new Map}onChildOutletCreated(n,i){let o=this.getOrCreateContext(n);o.outlet=i,this.contexts.set(n,o)}onChildOutletDestroyed(n){let i=this.getContext(n);i&&(i.outlet=null,i.attachRef=null)}onOutletDeactivated(){let n=this.contexts;return this.contexts=new Map,n}onOutletReAttached(n){this.contexts=n}getOrCreateContext(n){let i=this.getContext(n);return i||(i=new _i,this.contexts.set(n,i)),i}getContext(n){return this.contexts.get(n)||null}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})(),dn=class{constructor(e){this._root=e}get root(){return this._root.value}parent(e){let r=this.pathFromRoot(e);return r.length>1?r[r.length-2]:null}children(e){let r=Ci(e,this._root);return r?r.children.map(n=>n.value):[]}firstChild(e){let r=Ci(e,this._root);return r&&r.children.length>0?r.children[0].value:null}siblings(e){let r=ki(e,this._root);return r.length<2?[]:r[r.length-2].children.map(i=>i.value).filter(i=>i!==e)}pathFromRoot(e){return ki(e,this._root).map(r=>r.value)}};function Ci(t,e){if(t===e.value)return e;for(let r of e.children){let n=Ci(t,r);if(n)return n}return null}function ki(t,e){if(t===e.value)return[e];for(let r of e.children){let n=ki(t,r);if(n.length)return n.unshift(e),n}return[]}var z=class{constructor(e,r){this.value=e,this.children=r}toString(){return`TreeNode(${this.value})`}};function Ue(t){let e={};return t&&t.children.forEach(r=>e[r.value.outlet]=r),e}var cn=class extends dn{constructor(e,r){super(e),this.snapshot=r,Ni(this,e)}toString(){return this.snapshot.toString()}};function Oo(t){let e=Ws(t),r=new G([new Se("",{})]),n=new G({}),i=new G({}),o=new G({}),a=new G(""),s=new Ge(r,n,o,a,i,_,t,e.root);return s.snapshot=e.root,new cn(new z(s,[]),e)}function Ws(t){let e={},r={},n={},i="",o=new vt([],e,n,i,r,_,t,null,{});return new un("",new z(o,[]))}var Ge=class{constructor(e,r,n,i,o,a,s,d){this.urlSubject=e,this.paramsSubject=r,this.queryParamsSubject=n,this.fragmentSubject=i,this.dataSubject=o,this.outlet=a,this.component=s,this._futureSnapshot=d,this.title=this.dataSubject?.pipe(C(l=>l[_t]))??p(void 0),this.url=e,this.params=r,this.queryParams=n,this.fragment=i,this.data=o}get routeConfig(){return this._futureSnapshot.routeConfig}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=this.params.pipe(C(e=>ze(e))),this._paramMap}get queryParamMap(){return this._queryParamMap??=this.queryParams.pipe(C(e=>ze(e))),this._queryParamMap}toString(){return this.snapshot?this.snapshot.toString():`Future(${this._futureSnapshot})`}};function Pi(t,e,r="emptyOnly"){let n,{routeConfig:i}=t;return e!==null&&(r==="always"||i?.path===""||!e.component&&!e.routeConfig?.loadComponent)?n={params:u(u({},e.params),t.params),data:u(u({},e.data),t.data),resolve:u(u(u(u({},t.data),e.data),i?.data),t._resolvedData)}:n={params:u({},t.params),data:u({},t.data),resolve:u(u({},t.data),t._resolvedData??{})},i&&No(i)&&(n.resolve[_t]=i.title),n}var vt=class{get title(){return this.data?.[_t]}constructor(e,r,n,i,o,a,s,d,l){this.url=e,this.params=r,this.queryParams=n,this.fragment=i,this.data=o,this.outlet=a,this.component=s,this.routeConfig=d,this._resolve=l}get root(){return this._routerState.root}get parent(){return this._routerState.parent(this)}get firstChild(){return this._routerState.firstChild(this)}get children(){return this._routerState.children(this)}get pathFromRoot(){return this._routerState.pathFromRoot(this)}get paramMap(){return this._paramMap??=ze(this.params),this._paramMap}get queryParamMap(){return this._queryParamMap??=ze(this.queryParams),this._queryParamMap}toString(){let e=this.url.map(n=>n.toString()).join("/"),r=this.routeConfig?this.routeConfig.path:"";return`Route(url:'${e}', path:'${r}')`}},un=class extends dn{constructor(e,r){super(r),this.url=e,Ni(this,r)}toString(){return Po(this._root)}};function Ni(t,e){e.value._routerState=t,e.children.forEach(r=>Ni(t,r))}function Po(t){let e=t.children.length>0?` { ${t.children.map(Po).join(", ")} } `:"";return`${t.value}${e}`}function ri(t){if(t.snapshot){let e=t.snapshot,r=t._futureSnapshot;t.snapshot=r,Y(e.queryParams,r.queryParams)||t.queryParamsSubject.next(r.queryParams),e.fragment!==r.fragment&&t.fragmentSubject.next(r.fragment),Y(e.params,r.params)||t.paramsSubject.next(r.params),ws(e.url,r.url)||t.urlSubject.next(r.url),Y(e.data,r.data)||t.dataSubject.next(r.data)}else t.snapshot=t._futureSnapshot,t.dataSubject.next(t._futureSnapshot.data)}function Ei(t,e){let r=Y(t.params,e.params)&&Es(t.url,e.url),n=!t.parent!=!e.parent;return r&&!n&&(!t.parent||Ei(t.parent,e.parent))}function No(t){return typeof t.title=="string"||t.title===null}var Hs=(()=>{let e=class e{constructor(){this.activated=null,this._activatedRoute=null,this.name=_,this.activateEvents=new L,this.deactivateEvents=new L,this.attachEvents=new L,this.detachEvents=new L,this.parentContexts=g(pn),this.location=g(_r),this.changeDetector=g(Ye),this.environmentInjector=g(De),this.inputBinder=g(Fi,{optional:!0}),this.supportsBindingToComponentInputs=!0}get activatedComponentRef(){return this.activated}ngOnChanges(n){if(n.name){let{firstChange:i,previousValue:o}=n.name;if(i)return;this.isTrackedInParentContexts(o)&&(this.deactivate(),this.parentContexts.onChildOutletDestroyed(o)),this.initializeOutletWithName()}}ngOnDestroy(){this.isTrackedInParentContexts(this.name)&&this.parentContexts.onChildOutletDestroyed(this.name),this.inputBinder?.unsubscribeFromRouteData(this)}isTrackedInParentContexts(n){return this.parentContexts.getContext(n)?.outlet===this}ngOnInit(){this.initializeOutletWithName()}initializeOutletWithName(){if(this.parentContexts.onChildOutletCreated(this.name,this),this.activated)return;let n=this.parentContexts.getContext(this.name);n?.route&&(n.attachRef?this.attach(n.attachRef,n.route):this.activateWith(n.route,n.injector))}get isActivated(){return!!this.activated}get component(){if(!this.activated)throw new R(4012,!1);return this.activated.instance}get activatedRoute(){if(!this.activated)throw new R(4012,!1);return this._activatedRoute}get activatedRouteData(){return this._activatedRoute?this._activatedRoute.snapshot.data:{}}detach(){if(!this.activated)throw new R(4012,!1);this.location.detach();let n=this.activated;return this.activated=null,this._activatedRoute=null,this.detachEvents.emit(n.instance),n}attach(n,i){this.activated=n,this._activatedRoute=i,this.location.insert(n.hostView),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.attachEvents.emit(n.instance)}deactivate(){if(this.activated){let n=this.component;this.activated.destroy(),this.activated=null,this._activatedRoute=null,this.deactivateEvents.emit(n)}}activateWith(n,i){if(this.isActivated)throw new R(4013,!1);this._activatedRoute=n;let o=this.location,s=n.snapshot.component,d=this.parentContexts.getOrCreateContext(this.name).children,l=new Si(n,d,o.injector);this.activated=o.createComponent(s,{index:o.length,injector:l,environmentInjector:i??this.environmentInjector}),this.changeDetector.markForCheck(),this.inputBinder?.bindActivatedRouteToOutletComponent(this),this.activateEvents.emit(this.activated.instance)}};e.\u0275fac=function(i){return new(i||e)},e.\u0275dir=he({type:e,selectors:[["router-outlet"]],inputs:{name:"name"},outputs:{activateEvents:"activate",deactivateEvents:"deactivate",attachEvents:"attach",detachEvents:"detach"},exportAs:["outlet"],standalone:!0,features:[Rt]});let t=e;return t})(),Si=class t{__ngOutletInjector(e){return new t(this.route,this.childContexts,e)}constructor(e,r,n){this.route=e,this.childContexts=r,this.parent=n}get(e,r){return e===Ge?this.route:e===pn?this.childContexts:this.parent.get(e,r)}},Fi=new I("");function Ks(t,e,r){let n=xt(t,e._root,r?r._root:void 0);return new cn(n,e)}function xt(t,e,r){if(r&&t.shouldReuseRoute(e.value,r.value.snapshot)){let n=r.value;n._futureSnapshot=e.value;let i=Zs(t,e,r);return new z(n,i)}else{if(t.shouldAttach(e.value)){let o=t.retrieve(e.value);if(o!==null){let a=o.route;return a.value._futureSnapshot=e.value,a.children=e.children.map(s=>xt(t,s)),a}}let n=Js(e.value),i=e.children.map(o=>xt(t,o));return new z(n,i)}}function Zs(t,e,r){return e.children.map(n=>{for(let i of r.children)if(t.shouldReuseRoute(n.value,i.value.snapshot))return xt(t,n,i);return xt(t,n)})}function Js(t){return new Ge(new G(t.url),new G(t.params),new G(t.queryParams),new G(t.fragment),new G(t.data),t.outlet,t.component,t)}var Fo="ngNavigationCancelingError";function jo(t,e){let{redirectTo:r,navigationBehaviorOptions:n}=Be(e)?{redirectTo:e,navigationBehaviorOptions:void 0}:e,i=Vo(!1,B.Redirect);return i.url=r,i.navigationBehaviorOptions=n,i}function Vo(t,e){let r=new Error(`NavigationCancelingError: ${t||""}`);return r[Fo]=!0,r.cancellationCode=e,r}function Xs(t){return Uo(t)&&Be(t.url)}function Uo(t){return!!t&&t[Fo]}var Ys=(()=>{let e=class e{};e.\u0275fac=function(i){return new(i||e)},e.\u0275cmp=Z({type:e,selectors:[["ng-component"]],standalone:!0,features:[J],decls:1,vars:0,template:function(i,o){i&1&&Ne(0,"router-outlet")},dependencies:[Hs],encapsulation:2});let t=e;return t})();function Qs(t,e){return t.providers&&!t._injector&&(t._injector=kr(t.providers,e,`Route: ${t.path}`)),t._injector??e}function ji(t){let e=t.children&&t.children.map(ji),r=e?O(u({},t),{children:e}):u({},t);return!r.component&&!r.loadComponent&&(e||r.loadChildren)&&r.outlet&&r.outlet!==_&&(r.component=Ys),r}function Q(t){return t.outlet||_}function el(t,e){let r=t.filter(n=>Q(n)===e);return r.push(...t.filter(n=>Q(n)!==e)),r}function Ct(t){if(!t)return null;if(t.routeConfig?._injector)return t.routeConfig._injector;for(let e=t.parent;e;e=e.parent){let r=e.routeConfig;if(r?._loadedInjector)return r._loadedInjector;if(r?._injector)return r._injector}return null}var tl=(t,e,r,n)=>C(i=>(new Ai(e,i.targetRouterState,i.currentRouterState,r,n).activate(t),i)),Ai=class{constructor(e,r,n,i,o){this.routeReuseStrategy=e,this.futureState=r,this.currState=n,this.forwardEvent=i,this.inputBindingEnabled=o}activate(e){let r=this.futureState._root,n=this.currState?this.currState._root:null;this.deactivateChildRoutes(r,n,e),ri(this.futureState.root),this.activateChildRoutes(r,n,e)}deactivateChildRoutes(e,r,n){let i=Ue(r);e.children.forEach(o=>{let a=o.value.outlet;this.deactivateRoutes(o,i[a],n),delete i[a]}),Object.values(i).forEach(o=>{this.deactivateRouteAndItsChildren(o,n)})}deactivateRoutes(e,r,n){let i=e.value,o=r?r.value:null;if(i===o)if(i.component){let a=n.getContext(i.outlet);a&&this.deactivateChildRoutes(e,r,a.children)}else this.deactivateChildRoutes(e,r,n);else o&&this.deactivateRouteAndItsChildren(r,n)}deactivateRouteAndItsChildren(e,r){e.value.component&&this.routeReuseStrategy.shouldDetach(e.value.snapshot)?this.detachAndStoreRouteSubtree(e,r):this.deactivateRouteAndOutlet(e,r)}detachAndStoreRouteSubtree(e,r){let n=r.getContext(e.value.outlet),i=n&&e.value.component?n.children:r,o=Ue(e);for(let a of Object.values(o))this.deactivateRouteAndItsChildren(a,i);if(n&&n.outlet){let a=n.outlet.detach(),s=n.children.onOutletDeactivated();this.routeReuseStrategy.store(e.value.snapshot,{componentRef:a,route:e,contexts:s})}}deactivateRouteAndOutlet(e,r){let n=r.getContext(e.value.outlet),i=n&&e.value.component?n.children:r,o=Ue(e);for(let a of Object.values(o))this.deactivateRouteAndItsChildren(a,i);n&&(n.outlet&&(n.outlet.deactivate(),n.children.onOutletDeactivated()),n.attachRef=null,n.route=null)}activateChildRoutes(e,r,n){let i=Ue(r);e.children.forEach(o=>{this.activateRoutes(o,i[o.value.outlet],n),this.forwardEvent(new wi(o.value.snapshot))}),e.children.length&&this.forwardEvent(new vi(e.value.snapshot))}activateRoutes(e,r,n){let i=e.value,o=r?r.value:null;if(ri(i),i===o)if(i.component){let a=n.getOrCreateContext(i.outlet);this.activateChildRoutes(e,r,a.children)}else this.activateChildRoutes(e,r,n);else if(i.component){let a=n.getOrCreateContext(i.outlet);if(this.routeReuseStrategy.shouldAttach(i.snapshot)){let s=this.routeReuseStrategy.retrieve(i.snapshot);this.routeReuseStrategy.store(i.snapshot,null),a.children.onOutletReAttached(s.contexts),a.attachRef=s.componentRef,a.route=s.route.value,a.outlet&&a.outlet.attach(s.componentRef,s.route.value),ri(s.route.value),this.activateChildRoutes(e,null,a.children)}else{let s=Ct(i.snapshot);a.attachRef=null,a.route=i,a.injector=s,a.outlet&&a.outlet.activateWith(i,a.injector),this.activateChildRoutes(e,null,a.children)}}else this.activateChildRoutes(e,null,n)}},hn=class{constructor(e){this.path=e,this.route=this.path[this.path.length-1]}},$e=class{constructor(e,r){this.component=e,this.route=r}};function nl(t,e,r){let n=t._root,i=e?e._root:null;return dt(n,i,r,[n.value])}function il(t){let e=t.routeConfig?t.routeConfig.canActivateChild:null;return!e||e.length===0?null:{node:t,guards:e}}function We(t,e){let r=Symbol(),n=e.get(t,r);return n===r?typeof t=="function"&&!sr(t)?t:e.get(t):n}function dt(t,e,r,n,i={canDeactivateChecks:[],canActivateChecks:[]}){let o=Ue(e);return t.children.forEach(a=>{rl(a,o[a.value.outlet],r,n.concat([a.value]),i),delete o[a.value.outlet]}),Object.entries(o).forEach(([a,s])=>ft(s,r.getContext(a),i)),i}function rl(t,e,r,n,i={canDeactivateChecks:[],canActivateChecks:[]}){let o=t.value,a=e?e.value:null,s=r?r.getContext(t.value.outlet):null;if(a&&o.routeConfig===a.routeConfig){let d=ol(a,o,o.routeConfig.runGuardsAndResolvers);d?i.canActivateChecks.push(new hn(n)):(o.data=a.data,o._resolvedData=a._resolvedData),o.component?dt(t,e,s?s.children:null,n,i):dt(t,e,r,n,i),d&&s&&s.outlet&&s.outlet.isActivated&&i.canDeactivateChecks.push(new $e(s.outlet.component,a))}else a&&ft(e,s,i),i.canActivateChecks.push(new hn(n)),o.component?dt(t,null,s?s.children:null,n,i):dt(t,null,r,n,i);return i}function ol(t,e,r){if(typeof r=="function")return r(t,e);switch(r){case"pathParamsChange":return!Ae(t.url,e.url);case"pathParamsOrQueryParamsChange":return!Ae(t.url,e.url)||!Y(t.queryParams,e.queryParams);case"always":return!0;case"paramsOrQueryParamsChange":return!Ei(t,e)||!Y(t.queryParams,e.queryParams);case"paramsChange":default:return!Ei(t,e)}}function ft(t,e,r){let n=Ue(t),i=t.value;Object.entries(n).forEach(([o,a])=>{i.component?e?ft(a,e.children.getContext(o),r):ft(a,null,r):ft(a,e,r)}),i.component?e&&e.outlet&&e.outlet.isActivated?r.canDeactivateChecks.push(new $e(e.outlet.component,i)):r.canDeactivateChecks.push(new $e(null,i)):r.canDeactivateChecks.push(new $e(null,i))}function kt(t){return typeof t=="function"}function al(t){return typeof t=="boolean"}function sl(t){return t&&kt(t.canLoad)}function ll(t){return t&&kt(t.canActivate)}function dl(t){return t&&kt(t.canActivateChild)}function cl(t){return t&&kt(t.canDeactivate)}function ul(t){return t&&kt(t.canMatch)}function Lo(t){return t instanceof Qi||t?.name==="EmptyError"}var en=Symbol("INITIAL_VALUE");function qe(){return W(t=>Mn(t.map(e=>e.pipe(de(1),or(en)))).pipe(C(e=>{for(let r of e)if(r!==!0){if(r===en)return en;if(r===!1||r instanceof pe)return r}return!0}),se(e=>e!==en),de(1)))}function hl(t,e){return q(r=>{let{targetSnapshot:n,currentSnapshot:i,guards:{canActivateChecks:o,canDeactivateChecks:a}}=r;return a.length===0&&o.length===0?p(O(u({},r),{guardsResult:!0})):fl(a,n,i,t).pipe(q(s=>s&&al(s)?pl(n,o,t,e):p(s)),C(s=>O(u({},r),{guardsResult:s})))})}function fl(t,e,r,n){return V(t).pipe(q(i=>vl(i.component,i.route,r,e,n)),ue(i=>i!==!0,!0))}function pl(t,e,r,n){return V(e).pipe(ve(i=>er(ml(i.route.parent,n),gl(i.route,n),bl(t,i.path,r),yl(t,i.route,r))),ue(i=>i!==!0,!0))}function gl(t,e){return t!==null&&e&&e(new xi(t)),p(!0)}function ml(t,e){return t!==null&&e&&e(new bi(t)),p(!0)}function yl(t,e,r){let n=e.routeConfig?e.routeConfig.canActivate:null;if(!n||n.length===0)return p(!0);let i=n.map(o=>In(()=>{let a=Ct(e)??r,s=We(o,a),d=ll(s)?s.canActivate(e,t):ee(a,()=>s(e,t));return me(d).pipe(ue())}));return p(i).pipe(qe())}function bl(t,e,r){let n=e[e.length-1],o=e.slice(0,e.length-1).reverse().map(a=>il(a)).filter(a=>a!==null).map(a=>In(()=>{let s=a.guards.map(d=>{let l=Ct(a.node)??r,c=We(d,l),h=dl(c)?c.canActivateChild(n,t):ee(l,()=>c(n,t));return me(h).pipe(ue())});return p(s).pipe(qe())}));return p(o).pipe(qe())}function vl(t,e,r,n,i){let o=e&&e.routeConfig?e.routeConfig.canDeactivate:null;if(!o||o.length===0)return p(!0);let a=o.map(s=>{let d=Ct(e)??i,l=We(s,d),c=cl(l)?l.canDeactivate(t,e,r,n):ee(d,()=>l(t,e,r,n));return me(c).pipe(ue())});return p(a).pipe(qe())}function xl(t,e,r,n){let i=e.canLoad;if(i===void 0||i.length===0)return p(!0);let o=i.map(a=>{let s=We(a,t),d=sl(s)?s.canLoad(e,r):ee(t,()=>s(e,r));return me(d)});return p(o).pipe(qe(),$o(n))}function $o(t){return Ji(P(e=>{if(Be(e))throw jo(t,e)}),C(e=>e===!0))}function wl(t,e,r,n){let i=e.canMatch;if(!i||i.length===0)return p(!0);let o=i.map(a=>{let s=We(a,t),d=ul(s)?s.canMatch(e,r):ee(t,()=>s(e,r));return me(d)});return p(o).pipe(qe(),$o(n))}var wt=class{constructor(e){this.segmentGroup=e||null}},fn=class extends Error{constructor(e){super(),this.urlTree=e}};function Ve(t){return be(new wt(t))}function _l(t){return be(new R(4e3,!1))}function Cl(t){return be(Vo(!1,B.GuardRejected))}var Mi=class{constructor(e,r){this.urlSerializer=e,this.urlTree=r}lineralizeSegments(e,r){let n=[],i=r.root;for(;;){if(n=n.concat(i.segments),i.numberOfChildren===0)return p(n);if(i.numberOfChildren>1||!i.children[_])return _l(e.redirectTo);i=i.children[_]}}applyRedirectCommands(e,r,n){let i=this.applyRedirectCreateUrlTree(r,this.urlSerializer.parse(r),e,n);if(r.startsWith("/"))throw new fn(i);return i}applyRedirectCreateUrlTree(e,r,n,i){let o=this.createSegmentGroup(e,r.root,n,i);return new pe(o,this.createQueryParams(r.queryParams,this.urlTree.queryParams),r.fragment)}createQueryParams(e,r){let n={};return Object.entries(e).forEach(([i,o])=>{if(typeof o=="string"&&o.startsWith(":")){let s=o.substring(1);n[i]=r[s]}else n[i]=o}),n}createSegmentGroup(e,r,n,i){let o=this.createSegments(e,r.segments,n,i),a={};return Object.entries(r.children).forEach(([s,d])=>{a[s]=this.createSegmentGroup(e,d,n,i)}),new S(o,a)}createSegments(e,r,n,i){return r.map(o=>o.path.startsWith(":")?this.findPosParam(e,o,i):this.findOrReturn(o,n))}findPosParam(e,r,n){let i=n[r.path.substring(1)];if(!i)throw new R(4001,!1);return i}findOrReturn(e,r){let n=0;for(let i of r){if(i.path===e.path)return r.splice(n),i;n++}return e}},Ii={matched:!1,consumedSegments:[],remainingSegments:[],parameters:{},positionalParamSegments:{}};function kl(t,e,r,n,i){let o=Vi(t,e,r);return o.matched?(n=Qs(e,n),wl(n,e,r,i).pipe(C(a=>a===!0?o:u({},Ii)))):p(o)}function Vi(t,e,r){if(e.path==="**")return El(r);if(e.path==="")return e.pathMatch==="full"&&(t.hasChildren()||r.length>0)?u({},Ii):{matched:!0,consumedSegments:[],remainingSegments:r,parameters:{},positionalParamSegments:{}};let i=(e.matcher||xs)(r,t,e);if(!i)return u({},Ii);let o={};Object.entries(i.posParams??{}).forEach(([s,d])=>{o[s]=d.path});let a=i.consumed.length>0?u(u({},o),i.consumed[i.consumed.length-1].parameters):o;return{matched:!0,consumedSegments:i.consumed,remainingSegments:r.slice(i.consumed.length),parameters:a,positionalParamSegments:i.posParams??{}}}function El(t){return{matched:!0,parameters:t.length>0?xo(t).parameters:{},consumedSegments:t,remainingSegments:[],positionalParamSegments:{}}}function bo(t,e,r,n){return r.length>0&&Ml(t,r,n)?{segmentGroup:new S(e,Al(n,new S(r,t.children))),slicedSegments:[]}:r.length===0&&Il(t,r,n)?{segmentGroup:new S(t.segments,Sl(t,r,n,t.children)),slicedSegments:r}:{segmentGroup:new S(t.segments,t.children),slicedSegments:r}}function Sl(t,e,r,n){let i={};for(let o of r)if(gn(t,e,o)&&!n[Q(o)]){let a=new S([],{});i[Q(o)]=a}return u(u({},n),i)}function Al(t,e){let r={};r[_]=e;for(let n of t)if(n.path===""&&Q(n)!==_){let i=new S([],{});r[Q(n)]=i}return r}function Ml(t,e,r){return r.some(n=>gn(t,e,n)&&Q(n)!==_)}function Il(t,e,r){return r.some(n=>gn(t,e,n))}function gn(t,e,r){return(t.hasChildren()||e.length>0)&&r.pathMatch==="full"?!1:r.path===""}function Dl(t,e,r,n){return Q(t)!==n&&(n===_||!gn(e,r,t))?!1:Vi(e,t,r).matched}function Rl(t,e,r){return e.length===0&&!t.children[r]}var Di=class{};function Tl(t,e,r,n,i,o,a="emptyOnly"){return new Ri(t,e,r,n,i,a,o).recognize()}var Ol=31,Ri=class{constructor(e,r,n,i,o,a,s){this.injector=e,this.configLoader=r,this.rootComponentType=n,this.config=i,this.urlTree=o,this.paramsInheritanceStrategy=a,this.urlSerializer=s,this.applyRedirects=new Mi(this.urlSerializer,this.urlTree),this.absoluteRedirectCount=0,this.allowRedirects=!0}noMatchError(e){return new R(4002,`'${e.segmentGroup}'`)}recognize(){let e=bo(this.urlTree.root,[],[],this.config).segmentGroup;return this.match(e).pipe(C(r=>{let n=new vt([],Object.freeze({}),Object.freeze(u({},this.urlTree.queryParams)),this.urlTree.fragment,{},_,this.rootComponentType,null,{}),i=new z(n,r),o=new un("",i),a=Us(n,[],this.urlTree.queryParams,this.urlTree.fragment);return a.queryParams=this.urlTree.queryParams,o.url=this.urlSerializer.serialize(a),this.inheritParamsAndData(o._root,null),{state:o,tree:a}}))}match(e){return this.processSegmentGroup(this.injector,this.config,e,_).pipe(le(n=>{if(n instanceof fn)return this.urlTree=n.urlTree,this.match(n.urlTree.root);throw n instanceof wt?this.noMatchError(n):n}))}inheritParamsAndData(e,r){let n=e.value,i=Pi(n,r,this.paramsInheritanceStrategy);n.params=Object.freeze(i.params),n.data=Object.freeze(i.data),e.children.forEach(o=>this.inheritParamsAndData(o,n))}processSegmentGroup(e,r,n,i){return n.segments.length===0&&n.hasChildren()?this.processChildren(e,r,n):this.processSegment(e,r,n,n.segments,i,!0).pipe(C(o=>o instanceof z?[o]:[]))}processChildren(e,r,n){let i=[];for(let o of Object.keys(n.children))o==="primary"?i.unshift(o):i.push(o);return V(i).pipe(ve(o=>{let a=n.children[o],s=el(r,o);return this.processSegmentGroup(e,s,a,o)}),ir((o,a)=>(o.push(...a),o)),Dn(null),nr(),q(o=>{if(o===null)return Ve(n);let a=zo(o);return Pl(a),p(a)}))}processSegment(e,r,n,i,o,a){return V(r).pipe(ve(s=>this.processSegmentAgainstRoute(s._injector??e,r,s,n,i,o,a).pipe(le(d=>{if(d instanceof wt)return p(null);throw d}))),ue(s=>!!s),le(s=>{if(Lo(s))return Rl(n,i,o)?p(new Di):Ve(n);throw s}))}processSegmentAgainstRoute(e,r,n,i,o,a,s){return Dl(n,i,o,a)?n.redirectTo===void 0?this.matchSegmentAgainstRoute(e,i,n,o,a):this.allowRedirects&&s?this.expandSegmentAgainstRouteUsingRedirect(e,i,r,n,o,a):Ve(i):Ve(i)}expandSegmentAgainstRouteUsingRedirect(e,r,n,i,o,a){let{matched:s,consumedSegments:d,positionalParamSegments:l,remainingSegments:c}=Vi(r,i,o);if(!s)return Ve(r);i.redirectTo.startsWith("/")&&(this.absoluteRedirectCount++,this.absoluteRedirectCount>Ol&&(this.allowRedirects=!1));let h=this.applyRedirects.applyRedirectCommands(d,i.redirectTo,l);return this.applyRedirects.lineralizeSegments(i,h).pipe(q(f=>this.processSegment(e,n,r,f.concat(c),a,!1)))}matchSegmentAgainstRoute(e,r,n,i,o){let a=kl(r,n,i,e,this.urlSerializer);return n.path==="**"&&(r.children={}),a.pipe(W(s=>s.matched?(e=n._injector??e,this.getChildConfig(e,n,i).pipe(W(({routes:d})=>{let l=n._loadedInjector??e,{consumedSegments:c,remainingSegments:h,parameters:f}=s,A=new vt(c,f,Object.freeze(u({},this.urlTree.queryParams)),this.urlTree.fragment,Fl(n),Q(n),n.component??n._loadedComponent??null,n,jl(n)),{segmentGroup:ie,slicedSegments:re}=bo(r,c,h,d);if(re.length===0&&ie.hasChildren())return this.processChildren(l,d,ie).pipe(C(M=>M===null?null:new z(A,M)));if(d.length===0&&re.length===0)return p(new z(A,[]));let D=Q(n)===o;return this.processSegment(l,d,ie,re,D?_:o,!0).pipe(C(M=>new z(A,M instanceof z?[M]:[])))}))):Ve(r)))}getChildConfig(e,r,n){return r.children?p({routes:r.children,injector:e}):r.loadChildren?r._loadedRoutes!==void 0?p({routes:r._loadedRoutes,injector:r._loadedInjector}):xl(e,r,n,this.urlSerializer).pipe(q(i=>i?this.configLoader.loadChildren(e,r).pipe(P(o=>{r._loadedRoutes=o.routes,r._loadedInjector=o.injector})):Cl(r))):p({routes:[],injector:e})}};function Pl(t){t.sort((e,r)=>e.value.outlet===_?-1:r.value.outlet===_?1:e.value.outlet.localeCompare(r.value.outlet))}function Nl(t){let e=t.value.routeConfig;return e&&e.path===""}function zo(t){let e=[],r=new Set;for(let n of t){if(!Nl(n)){e.push(n);continue}let i=e.find(o=>n.value.routeConfig===o.value.routeConfig);i!==void 0?(i.children.push(...n.children),r.add(i)):e.push(n)}for(let n of r){let i=zo(n.children);e.push(new z(n.value,i))}return e.filter(n=>!r.has(n))}function Fl(t){return t.data||{}}function jl(t){return t.resolve||{}}function Vl(t,e,r,n,i,o){return q(a=>Tl(t,e,r,n,a.extractedUrl,i,o).pipe(C(({state:s,tree:d})=>O(u({},a),{targetSnapshot:s,urlAfterRedirects:d}))))}function Ul(t,e){return q(r=>{let{targetSnapshot:n,guards:{canActivateChecks:i}}=r;if(!i.length)return p(r);let o=new Set(i.map(d=>d.route)),a=new Set;for(let d of o)if(!a.has(d))for(let l of Bo(d))a.add(l);let s=0;return V(a).pipe(ve(d=>o.has(d)?Ll(d,n,t,e):(d.data=Pi(d,d.parent,t).resolve,p(void 0))),P(()=>s++),Rn(1),q(d=>s===a.size?p(r):ae))})}function Bo(t){let e=t.children.map(r=>Bo(r)).flat();return[t,...e]}function Ll(t,e,r,n){let i=t.routeConfig,o=t._resolve;return i?.title!==void 0&&!No(i)&&(o[_t]=i.title),$l(o,t,e,n).pipe(C(a=>(t._resolvedData=a,t.data=Pi(t,t.parent,r).resolve,null)))}function $l(t,e,r,n){let i=si(t);if(i.length===0)return p({});let o={};return V(i).pipe(q(a=>zl(t[a],e,r,n).pipe(ue(),P(s=>{o[a]=s}))),Rn(1),tr(o),le(a=>Lo(a)?ae:be(a)))}function zl(t,e,r,n){let i=Ct(e)??n,o=We(t,i),a=o.resolve?o.resolve(e,r):ee(i,()=>o(e,r));return me(a)}function oi(t){return W(e=>{let r=t(e);return r?V(r).pipe(C(()=>e)):p(e)})}var Go=(()=>{let e=class e{buildTitle(n){let i,o=n.root;for(;o!==void 0;)i=this.getResolvedTitleForRoute(o)??i,o=o.children.find(a=>a.outlet===_);return i}getResolvedTitleForRoute(n){return n.data[_t]}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:()=>g(Bl),providedIn:"root"});let t=e;return t})(),Bl=(()=>{let e=class e extends Go{constructor(n){super(),this.title=n}updateTitle(n){let i=this.buildTitle(n);i!==void 0&&this.title.setTitle(i)}};e.\u0275fac=function(i){return new(i||e)(E(ho))},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})(),Ui=new I("",{providedIn:"root",factory:()=>({})}),Li=new I(""),Gl=(()=>{let e=class e{constructor(){this.componentLoaders=new WeakMap,this.childrenLoaders=new WeakMap,this.compiler=g(Bn)}loadComponent(n){if(this.componentLoaders.get(n))return this.componentLoaders.get(n);if(n._loadedComponent)return p(n._loadedComponent);this.onLoadStartListener&&this.onLoadStartListener(n);let i=me(n.loadComponent()).pipe(C(qo),P(a=>{this.onLoadEndListener&&this.onLoadEndListener(n),n._loadedComponent=a}),ce(()=>{this.componentLoaders.delete(n)})),o=new Sn(i,()=>new ye).pipe(En());return this.componentLoaders.set(n,o),o}loadChildren(n,i){if(this.childrenLoaders.get(i))return this.childrenLoaders.get(i);if(i._loadedRoutes)return p({routes:i._loadedRoutes,injector:i._loadedInjector});this.onLoadStartListener&&this.onLoadStartListener(i);let a=ql(i,this.compiler,n,this.onLoadEndListener).pipe(ce(()=>{this.childrenLoaders.delete(i)})),s=new Sn(a,()=>new ye).pipe(En());return this.childrenLoaders.set(i,s),s}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();function ql(t,e,r,n){return me(t.loadChildren()).pipe(C(qo),q(i=>i instanceof Cr||Array.isArray(i)?p(i):V(e.compileModuleAsync(i))),C(i=>{n&&n(t);let o,a,s=!1;return Array.isArray(i)?(a=i,s=!0):(o=i.create(r).injector,a=o.get(Li,[],{optional:!0,self:!0}).flat()),{routes:a.map(ji),injector:o}}))}function Wl(t){return t&&typeof t=="object"&&"default"in t}function qo(t){return Wl(t)?t.default:t}var $i=(()=>{let e=class e{};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:()=>g(Hl),providedIn:"root"});let t=e;return t})(),Hl=(()=>{let e=class e{shouldProcessUrl(n){return!0}extract(n){return n}merge(n,i){return n}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})(),Kl=new I("");var Zl=(()=>{let e=class e{get hasRequestedNavigation(){return this.navigationId!==0}constructor(){this.currentNavigation=null,this.currentTransition=null,this.lastSuccessfulNavigation=null,this.events=new ye,this.transitionAbortSubject=new ye,this.configLoader=g(Gl),this.environmentInjector=g(De),this.urlSerializer=g(Oi),this.rootContexts=g(pn),this.location=g(Lt),this.inputBindingEnabled=g(Fi,{optional:!0})!==null,this.titleStrategy=g(Go),this.options=g(Ui,{optional:!0})||{},this.paramsInheritanceStrategy=this.options.paramsInheritanceStrategy||"emptyOnly",this.urlHandlingStrategy=g($i),this.createViewTransition=g(Kl,{optional:!0}),this.navigationId=0,this.afterPreactivation=()=>p(void 0),this.rootComponentType=null;let n=o=>this.events.next(new mi(o)),i=o=>this.events.next(new yi(o));this.configLoader.onLoadEndListener=i,this.configLoader.onLoadStartListener=n}complete(){this.transitions?.complete()}handleNavigationRequest(n){let i=++this.navigationId;this.transitions?.next(O(u(u({},this.transitions.value),n),{id:i}))}setupNavigations(n,i,o){return this.transitions=new G({id:0,currentUrlTree:i,currentRawUrl:i,extractedUrl:this.urlHandlingStrategy.extract(i),urlAfterRedirects:this.urlHandlingStrategy.extract(i),rawUrl:i,extras:{},resolve:null,reject:null,promise:Promise.resolve(!0),source:ht,restoredState:null,currentSnapshot:o.snapshot,targetSnapshot:null,currentRouterState:o,targetRouterState:null,guards:{canActivateChecks:[],canDeactivateChecks:[]},guardsResult:null}),this.transitions.pipe(se(a=>a.id!==0),C(a=>O(u({},a),{extractedUrl:this.urlHandlingStrategy.extract(a.rawUrl)})),W(a=>{let s=!1,d=!1;return p(a).pipe(W(l=>{if(this.navigationId>a.id)return this.cancelNavigationTransition(a,"",B.SupersededByNewNavigation),ae;this.currentTransition=a,this.currentNavigation={id:l.id,initialUrl:l.rawUrl,extractedUrl:l.extractedUrl,trigger:l.source,extras:l.extras,previousNavigation:this.lastSuccessfulNavigation?O(u({},this.lastSuccessfulNavigation),{previousNavigation:null}):null};let c=!n.navigated||this.isUpdatingInternalState()||this.isUpdatedBrowserUrl(),h=l.extras.onSameUrlNavigation??n.onSameUrlNavigation;if(!c&&h!=="reload"){let f="";return this.events.next(new Ie(l.id,this.urlSerializer.serialize(l.rawUrl),f,ui.IgnoredSameUrlNavigation)),l.resolve(null),ae}if(this.urlHandlingStrategy.shouldProcessUrl(l.rawUrl))return p(l).pipe(W(f=>{let A=this.transitions?.getValue();return this.events.next(new gt(f.id,this.urlSerializer.serialize(f.extractedUrl),f.source,f.restoredState)),A!==this.transitions?.getValue()?ae:Promise.resolve(f)}),Vl(this.environmentInjector,this.configLoader,this.rootComponentType,n.config,this.urlSerializer,this.paramsInheritanceStrategy),P(f=>{a.targetSnapshot=f.targetSnapshot,a.urlAfterRedirects=f.urlAfterRedirects,this.currentNavigation=O(u({},this.currentNavigation),{finalUrl:f.urlAfterRedirects});let A=new ln(f.id,this.urlSerializer.serialize(f.extractedUrl),this.urlSerializer.serialize(f.urlAfterRedirects),f.targetSnapshot);this.events.next(A)}));if(c&&this.urlHandlingStrategy.shouldProcessUrl(l.currentRawUrl)){let{id:f,extractedUrl:A,source:ie,restoredState:re,extras:D}=l,M=new gt(f,this.urlSerializer.serialize(A),ie,re);this.events.next(M);let oe=Oo(this.rootComponentType).snapshot;return this.currentTransition=a=O(u({},l),{targetSnapshot:oe,urlAfterRedirects:A,extras:O(u({},D),{skipLocationChange:!1,replaceUrl:!1})}),this.currentNavigation.finalUrl=A,p(a)}else{let f="";return this.events.next(new Ie(l.id,this.urlSerializer.serialize(l.extractedUrl),f,ui.IgnoredByUrlHandlingStrategy)),l.resolve(null),ae}}),P(l=>{let c=new hi(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects),l.targetSnapshot);this.events.next(c)}),C(l=>(this.currentTransition=a=O(u({},l),{guards:nl(l.targetSnapshot,l.currentSnapshot,this.rootContexts)}),a)),hl(this.environmentInjector,l=>this.events.next(l)),P(l=>{if(a.guardsResult=l.guardsResult,Be(l.guardsResult))throw jo(this.urlSerializer,l.guardsResult);let c=new fi(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects),l.targetSnapshot,!!l.guardsResult);this.events.next(c)}),se(l=>l.guardsResult?!0:(this.cancelNavigationTransition(l,"",B.GuardRejected),!1)),oi(l=>{if(l.guards.canActivateChecks.length)return p(l).pipe(P(c=>{let h=new pi(c.id,this.urlSerializer.serialize(c.extractedUrl),this.urlSerializer.serialize(c.urlAfterRedirects),c.targetSnapshot);this.events.next(h)}),W(c=>{let h=!1;return p(c).pipe(Ul(this.paramsInheritanceStrategy,this.environmentInjector),P({next:()=>h=!0,complete:()=>{h||this.cancelNavigationTransition(c,"",B.NoDataFromResolver)}}))}),P(c=>{let h=new gi(c.id,this.urlSerializer.serialize(c.extractedUrl),this.urlSerializer.serialize(c.urlAfterRedirects),c.targetSnapshot);this.events.next(h)}))}),oi(l=>{let c=h=>{let f=[];h.routeConfig?.loadComponent&&!h.routeConfig._loadedComponent&&f.push(this.configLoader.loadComponent(h.routeConfig).pipe(P(A=>{h.component=A}),C(()=>{})));for(let A of h.children)f.push(...c(A));return f};return Mn(c(l.targetSnapshot.root)).pipe(Dn(null),de(1))}),oi(()=>this.afterPreactivation()),W(()=>{let{currentSnapshot:l,targetSnapshot:c}=a,h=this.createViewTransition?.(this.environmentInjector,l.root,c.root);return h?V(h).pipe(C(()=>a)):p(a)}),C(l=>{let c=Ks(n.routeReuseStrategy,l.targetSnapshot,l.currentRouterState);return this.currentTransition=a=O(u({},l),{targetRouterState:c}),this.currentNavigation.targetRouterState=c,a}),P(()=>{this.events.next(new yt)}),tl(this.rootContexts,n.routeReuseStrategy,l=>this.events.next(l),this.inputBindingEnabled),de(1),P({next:l=>{s=!0,this.lastSuccessfulNavigation=this.currentNavigation,this.events.next(new Me(l.id,this.urlSerializer.serialize(l.extractedUrl),this.urlSerializer.serialize(l.urlAfterRedirects))),this.titleStrategy?.updateTitle(l.targetRouterState.snapshot),l.resolve(!0)},complete:()=>{s=!0}}),ar(this.transitionAbortSubject.pipe(P(l=>{throw l}))),ce(()=>{!s&&!d&&this.cancelNavigationTransition(a,"",B.SupersededByNewNavigation),this.currentTransition?.id===a.id&&(this.currentNavigation=null,this.currentTransition=null)}),le(l=>{if(d=!0,Uo(l))this.events.next(new ge(a.id,this.urlSerializer.serialize(a.extractedUrl),l.message,l.cancellationCode)),Xs(l)?this.events.next(new bt(l.url)):a.resolve(!1);else{this.events.next(new mt(a.id,this.urlSerializer.serialize(a.extractedUrl),l,a.targetSnapshot??void 0));try{a.resolve(n.errorHandler(l))}catch(c){this.options.resolveNavigationPromiseOnError?a.resolve(!1):a.reject(c)}}return ae}))}))}cancelNavigationTransition(n,i,o){let a=new ge(n.id,this.urlSerializer.serialize(n.extractedUrl),i,o);this.events.next(a),n.resolve(!1)}isUpdatingInternalState(){return this.currentTransition?.extractedUrl.toString()!==this.currentTransition?.currentUrlTree.toString()}isUpdatedBrowserUrl(){return this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(!0))).toString()!==this.currentTransition?.extractedUrl.toString()&&!this.currentTransition?.extras.skipLocationChange}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();function Jl(t){return t!==ht}var Xl=(()=>{let e=class e{};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:()=>g(Yl),providedIn:"root"});let t=e;return t})(),Ti=class{shouldDetach(e){return!1}store(e,r){}shouldAttach(e){return!1}retrieve(e){return null}shouldReuseRoute(e,r){return e.routeConfig===r.routeConfig}},Yl=(()=>{let e=class e extends Ti{};e.\u0275fac=(()=>{let n;return function(o){return(n||(n=Ze(e)))(o||e)}})(),e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})(),Wo=(()=>{let e=class e{};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:()=>g(Ql),providedIn:"root"});let t=e;return t})(),Ql=(()=>{let e=class e extends Wo{constructor(){super(...arguments),this.location=g(Lt),this.urlSerializer=g(Oi),this.options=g(Ui,{optional:!0})||{},this.canceledNavigationResolution=this.options.canceledNavigationResolution||"replace",this.urlHandlingStrategy=g($i),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.currentUrlTree=new pe,this.rawUrlTree=this.currentUrlTree,this.currentPageId=0,this.lastSuccessfulId=-1,this.routerState=Oo(null),this.stateMemento=this.createStateMemento()}getCurrentUrlTree(){return this.currentUrlTree}getRawUrlTree(){return this.rawUrlTree}restoredState(){return this.location.getState()}get browserPageId(){return this.canceledNavigationResolution!=="computed"?this.currentPageId:this.restoredState()?.\u0275routerPageId??this.currentPageId}getRouterState(){return this.routerState}createStateMemento(){return{rawUrlTree:this.rawUrlTree,currentUrlTree:this.currentUrlTree,routerState:this.routerState}}registerNonRouterCurrentEntryChangeListener(n){return this.location.subscribe(i=>{i.type==="popstate"&&n(i.url,i.state)})}handleRouterEvent(n,i){if(n instanceof gt)this.stateMemento=this.createStateMemento();else if(n instanceof Ie)this.rawUrlTree=i.initialUrl;else if(n instanceof ln){if(this.urlUpdateStrategy==="eager"&&!i.extras.skipLocationChange){let o=this.urlHandlingStrategy.merge(i.finalUrl,i.initialUrl);this.setBrowserUrl(o,i)}}else n instanceof yt?(this.currentUrlTree=i.finalUrl,this.rawUrlTree=this.urlHandlingStrategy.merge(i.finalUrl,i.initialUrl),this.routerState=i.targetRouterState,this.urlUpdateStrategy==="deferred"&&(i.extras.skipLocationChange||this.setBrowserUrl(this.rawUrlTree,i))):n instanceof ge&&(n.code===B.GuardRejected||n.code===B.NoDataFromResolver)?this.restoreHistory(i):n instanceof mt?this.restoreHistory(i,!0):n instanceof Me&&(this.lastSuccessfulId=n.id,this.currentPageId=this.browserPageId)}setBrowserUrl(n,i){let o=this.urlSerializer.serialize(n);if(this.location.isCurrentPathEqualTo(o)||i.extras.replaceUrl){let a=this.browserPageId,s=u(u({},i.extras.state),this.generateNgRouterState(i.id,a));this.location.replaceState(o,"",s)}else{let a=u(u({},i.extras.state),this.generateNgRouterState(i.id,this.browserPageId+1));this.location.go(o,"",a)}}restoreHistory(n,i=!1){if(this.canceledNavigationResolution==="computed"){let o=this.browserPageId,a=this.currentPageId-o;a!==0?this.location.historyGo(a):this.currentUrlTree===n.finalUrl&&a===0&&(this.resetState(n),this.resetUrlToCurrentUrlTree())}else this.canceledNavigationResolution==="replace"&&(i&&this.resetState(n),this.resetUrlToCurrentUrlTree())}resetState(n){this.routerState=this.stateMemento.routerState,this.currentUrlTree=this.stateMemento.currentUrlTree,this.rawUrlTree=this.urlHandlingStrategy.merge(this.currentUrlTree,n.finalUrl??this.rawUrlTree)}resetUrlToCurrentUrlTree(){this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree),"",this.generateNgRouterState(this.lastSuccessfulId,this.currentPageId))}generateNgRouterState(n,i){return this.canceledNavigationResolution==="computed"?{navigationId:n,\u0275routerPageId:i}:{navigationId:n}}};e.\u0275fac=(()=>{let n;return function(o){return(n||(n=Ze(e)))(o||e)}})(),e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})(),ct=function(t){return t[t.COMPLETE=0]="COMPLETE",t[t.FAILED=1]="FAILED",t[t.REDIRECTING=2]="REDIRECTING",t}(ct||{});function ed(t,e){t.events.pipe(se(r=>r instanceof Me||r instanceof ge||r instanceof mt||r instanceof Ie),C(r=>r instanceof Me||r instanceof Ie?ct.COMPLETE:(r instanceof ge?r.code===B.Redirect||r.code===B.SupersededByNewNavigation:!1)?ct.REDIRECTING:ct.FAILED),se(r=>r!==ct.REDIRECTING),de(1)).subscribe(()=>{e()})}function td(t){throw t}var nd={paths:"exact",fragment:"ignored",matrixParams:"ignored",queryParams:"exact"},id={paths:"subset",fragment:"ignored",matrixParams:"ignored",queryParams:"subset"},Ho=(()=>{let e=class e{get currentUrlTree(){return this.stateManager.getCurrentUrlTree()}get rawUrlTree(){return this.stateManager.getRawUrlTree()}get events(){return this._events}get routerState(){return this.stateManager.getRouterState()}constructor(){this.disposed=!1,this.isNgZoneEnabled=!1,this.console=g(jt),this.stateManager=g(Wo),this.options=g(Ui,{optional:!0})||{},this.pendingTasks=g(Pt),this.urlUpdateStrategy=this.options.urlUpdateStrategy||"deferred",this.navigationTransitions=g(Zl),this.urlSerializer=g(Oi),this.location=g(Lt),this.urlHandlingStrategy=g($i),this._events=new ye,this.errorHandler=this.options.errorHandler||td,this.navigated=!1,this.routeReuseStrategy=g(Xl),this.onSameUrlNavigation=this.options.onSameUrlNavigation||"ignore",this.config=g(Li,{optional:!0})?.flat()??[],this.componentInputBindingEnabled=!!g(Fi,{optional:!0}),this.eventsSubscription=new It,this.isNgZoneEnabled=g(H)instanceof H&&H.isInAngularZone(),this.resetConfig(this.config),this.navigationTransitions.setupNavigations(this,this.currentUrlTree,this.routerState).subscribe({error:n=>{this.console.warn(n)}}),this.subscribeToNavigationEvents()}subscribeToNavigationEvents(){let n=this.navigationTransitions.events.subscribe(i=>{try{let o=this.navigationTransitions.currentTransition,a=this.navigationTransitions.currentNavigation;if(o!==null&&a!==null){if(this.stateManager.handleRouterEvent(i,a),i instanceof ge&&i.code!==B.Redirect&&i.code!==B.SupersededByNewNavigation)this.navigated=!0;else if(i instanceof Me)this.navigated=!0;else if(i instanceof bt){let s=this.urlHandlingStrategy.merge(i.url,o.currentRawUrl),d={info:o.extras.info,skipLocationChange:o.extras.skipLocationChange,replaceUrl:this.urlUpdateStrategy==="eager"||Jl(o.source)};this.scheduleNavigation(s,ht,null,d,{resolve:o.resolve,reject:o.reject,promise:o.promise})}}od(i)&&this._events.next(i)}catch(o){this.navigationTransitions.transitionAbortSubject.next(o)}});this.eventsSubscription.add(n)}resetRootComponentType(n){this.routerState.root.component=n,this.navigationTransitions.rootComponentType=n}initialNavigation(){this.setUpLocationChangeListener(),this.navigationTransitions.hasRequestedNavigation||this.navigateToSyncWithBrowser(this.location.path(!0),ht,this.stateManager.restoredState())}setUpLocationChangeListener(){this.nonRouterCurrentEntryChangeSubscription??=this.stateManager.registerNonRouterCurrentEntryChangeListener((n,i)=>{setTimeout(()=>{this.navigateToSyncWithBrowser(n,"popstate",i)},0)})}navigateToSyncWithBrowser(n,i,o){let a={replaceUrl:!0},s=o?.navigationId?o:null;if(o){let l=u({},o);delete l.navigationId,delete l.\u0275routerPageId,Object.keys(l).length!==0&&(a.state=l)}let d=this.parseUrl(n);this.scheduleNavigation(d,i,s,a)}get url(){return this.serializeUrl(this.currentUrlTree)}getCurrentNavigation(){return this.navigationTransitions.currentNavigation}get lastSuccessfulNavigation(){return this.navigationTransitions.lastSuccessfulNavigation}resetConfig(n){this.config=n.map(ji),this.navigated=!1}ngOnDestroy(){this.dispose()}dispose(){this.navigationTransitions.complete(),this.nonRouterCurrentEntryChangeSubscription&&(this.nonRouterCurrentEntryChangeSubscription.unsubscribe(),this.nonRouterCurrentEntryChangeSubscription=void 0),this.disposed=!0,this.eventsSubscription.unsubscribe()}createUrlTree(n,i={}){let{relativeTo:o,queryParams:a,fragment:s,queryParamsHandling:d,preserveFragment:l}=i,c=l?this.currentUrlTree.fragment:s,h=null;switch(d){case"merge":h=u(u({},this.currentUrlTree.queryParams),a);break;case"preserve":h=this.currentUrlTree.queryParams;break;default:h=a||null}h!==null&&(h=this.removeEmptyProps(h));let f;try{let A=o?o.snapshot:this.routerState.snapshot.root;f=Io(A)}catch{(typeof n[0]!="string"||!n[0].startsWith("/"))&&(n=[]),f=this.currentUrlTree.root}return Do(f,n,h,c??null)}navigateByUrl(n,i={skipLocationChange:!1}){let o=Be(n)?n:this.parseUrl(n),a=this.urlHandlingStrategy.merge(o,this.rawUrlTree);return this.scheduleNavigation(a,ht,null,i)}navigate(n,i={skipLocationChange:!1}){return rd(n),this.navigateByUrl(this.createUrlTree(n,i),i)}serializeUrl(n){return this.urlSerializer.serialize(n)}parseUrl(n){try{return this.urlSerializer.parse(n)}catch{return this.urlSerializer.parse("/")}}isActive(n,i){let o;if(i===!0?o=u({},nd):i===!1?o=u({},id):o=i,Be(n))return po(this.currentUrlTree,n,o);let a=this.parseUrl(n);return po(this.currentUrlTree,a,o)}removeEmptyProps(n){return Object.entries(n).reduce((i,[o,a])=>(a!=null&&(i[o]=a),i),{})}scheduleNavigation(n,i,o,a,s){if(this.disposed)return Promise.resolve(!1);let d,l,c;s?(d=s.resolve,l=s.reject,c=s.promise):c=new Promise((f,A)=>{d=f,l=A});let h=this.pendingTasks.add();return ed(this,()=>{queueMicrotask(()=>this.pendingTasks.remove(h))}),this.navigationTransitions.handleNavigationRequest({source:i,restoredState:o,currentUrlTree:this.currentUrlTree,currentRawUrl:this.currentUrlTree,rawUrl:n,extras:a,resolve:d,reject:l,promise:c,currentSnapshot:this.routerState.snapshot,currentRouterState:this.routerState}),c.catch(f=>Promise.reject(f))}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();function rd(t){for(let e=0;e<t.length;e++)if(t[e]==null)throw new R(4008,!1)}function od(t){return!(t instanceof yt)&&!(t instanceof bt)}var ad=new I("");function Ko(t,...e){return Ce([{provide:Li,multi:!0,useValue:t},[],{provide:Ge,useFactory:sd,deps:[Ho]},{provide:zn,multi:!0,useFactory:ld},e.map(r=>r.\u0275providers)])}function sd(t){return t.routerState.root}function ld(){let t=g(Nn);return e=>{let r=t.get(Ut);if(e!==r.components[0])return;let n=t.get(Ho),i=t.get(dd);t.get(cd)===1&&n.initialNavigation(),t.get(ud,null,On.Optional)?.setUpPreloading(),t.get(ad,null,On.Optional)?.init(),n.resetRootComponentType(r.componentTypes[0]),i.closed||(i.next(),i.complete(),i.unsubscribe())}}var dd=new I("",{factory:()=>new ye}),cd=new I("",{providedIn:"root",factory:()=>1});var ud=new I("");var Zo=[];var hd="@",fd=(()=>{let e=class e{constructor(n,i,o,a,s){this.doc=n,this.delegate=i,this.zone=o,this.animationType=a,this.moduleImpl=s,this._rendererFactoryPromise=null,this.scheduler=g(wr,{optional:!0})}ngOnDestroy(){this._engine?.flush()}loadImpl(){return(this.moduleImpl??import("./chunk-IXE4WB3S.js")).catch(i=>{throw new R(5300,!1)}).then(({\u0275createEngine:i,\u0275AnimationRendererFactory:o})=>{this._engine=i(this.animationType,this.doc,this.scheduler);let a=new o(this.delegate,this._engine,this.zone);return this.delegate=a,a})}createRenderer(n,i){let o=this.delegate.createRenderer(n,i);if(o.\u0275type===0)return o;typeof o.throwOnSyntheticProps=="boolean"&&(o.throwOnSyntheticProps=!1);let a=new zi(o);return i?.data?.animation&&!this._rendererFactoryPromise&&(this._rendererFactoryPromise=this.loadImpl()),this._rendererFactoryPromise?.then(s=>{let d=s.createRenderer(n,i);a.use(d)}).catch(s=>{a.use(o)}),a}begin(){this.delegate.begin?.()}end(){this.delegate.end?.()}whenRenderingDone(){return this.delegate.whenRenderingDone?.()??Promise.resolve()}};e.\u0275fac=function(i){Vn()},e.\u0275prov=k({token:e,factory:e.\u0275fac});let t=e;return t})(),zi=class{constructor(e){this.delegate=e,this.replay=[],this.\u0275type=1}use(e){if(this.delegate=e,this.replay!==null){for(let r of this.replay)r(e);this.replay=null}}get data(){return this.delegate.data}destroy(){this.replay=null,this.delegate.destroy()}createElement(e,r){return this.delegate.createElement(e,r)}createComment(e){return this.delegate.createComment(e)}createText(e){return this.delegate.createText(e)}get destroyNode(){return this.delegate.destroyNode}appendChild(e,r){this.delegate.appendChild(e,r)}insertBefore(e,r,n,i){this.delegate.insertBefore(e,r,n,i)}removeChild(e,r,n){this.delegate.removeChild(e,r,n)}selectRootElement(e,r){return this.delegate.selectRootElement(e,r)}parentNode(e){return this.delegate.parentNode(e)}nextSibling(e){return this.delegate.nextSibling(e)}setAttribute(e,r,n,i){this.delegate.setAttribute(e,r,n,i)}removeAttribute(e,r,n){this.delegate.removeAttribute(e,r,n)}addClass(e,r){this.delegate.addClass(e,r)}removeClass(e,r){this.delegate.removeClass(e,r)}setStyle(e,r,n,i){this.delegate.setStyle(e,r,n,i)}removeStyle(e,r,n){this.delegate.removeStyle(e,r,n)}setProperty(e,r,n){this.shouldReplay(r)&&this.replay.push(i=>i.setProperty(e,r,n)),this.delegate.setProperty(e,r,n)}setValue(e,r){this.delegate.setValue(e,r)}listen(e,r,n){return this.shouldReplay(r)&&this.replay.push(i=>i.listen(e,r,n)),this.delegate.listen(e,r,n)}shouldReplay(e){return this.replay!==null&&e.startsWith(hd)}};function Jo(t="animations"){return Un("NgAsyncAnimations"),Ce([{provide:Tt,useFactory:(e,r,n)=>new fd(e,r,n,t),deps:[N,Xt,H]},{provide:fr,useValue:t==="noop"?"NoopAnimations":"BrowserAnimations"}])}var Xo={providers:[Ko(Zo),eo(),Jo()]};var Yo=(()=>{let e=class e{constructor(){this.data='[  {    "dex": 1,    "name": "bulbasaur",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 2,    "name": "ivysaur",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 3,    "name": "venusaur",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 4,    "name": "charmander",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 5,    "name": "charmeleon",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 6,    "name": "charizard",    "types": [      "fire",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 7,    "name": "squirtle",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 8,    "name": "wartortle",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 9,    "name": "blastoise",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 10,    "name": "caterpie",    "types": [      "bug"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 11,    "name": "metapod",    "types": [      "bug"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 12,    "name": "butterfree",    "types": [      "bug",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 13,    "name": "weedle",    "types": [      "bug",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 14,    "name": "kakuna",    "types": [      "bug",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 15,    "name": "beedrill",    "types": [      "bug",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 16,    "name": "pidgey",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 17,    "name": "pidgeotto",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 18,    "name": "pidgeot",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 19,    "name": "rattata",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 20,    "name": "raticate",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 21,    "name": "spearow",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 22,    "name": "fearow",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 23,    "name": "ekans",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 24,    "name": "arbok",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 25,    "name": "pikachu",    "types": [      "electric"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 26,    "name": "raichu",    "types": [      "electric"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 27,    "name": "sandshrew",    "types": [      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 28,    "name": "sandslash",    "types": [      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 29,    "name": "nidoran-f",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 30,    "name": "nidorina",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 31,    "name": "nidoqueen",    "types": [      "poison",      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 32,    "name": "nidoran-m",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 33,    "name": "nidorino",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 34,    "name": "nidoking",    "types": [      "poison",      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 35,    "name": "clefairy",    "types": [      "fairy"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 36,    "name": "clefable",    "types": [      "fairy"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 37,    "name": "vulpix",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 38,    "name": "ninetales",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 39,    "name": "jigglypuff",    "types": [      "normal",      "fairy"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 40,    "name": "wigglytuff",    "types": [      "normal",      "fairy"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 41,    "name": "zubat",    "types": [      "poison",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 42,    "name": "golbat",    "types": [      "poison",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 43,    "name": "oddish",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 44,    "name": "gloom",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 45,    "name": "vileplume",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 46,    "name": "paras",    "types": [      "bug",      "grass"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 47,    "name": "parasect",    "types": [      "bug",      "grass"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 48,    "name": "venonat",    "types": [      "bug",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 49,    "name": "venomoth",    "types": [      "bug",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 50,    "name": "diglett",    "types": [      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 51,    "name": "dugtrio",    "types": [      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 52,    "name": "meowth",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 53,    "name": "persian",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 54,    "name": "psyduck",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 55,    "name": "golduck",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 56,    "name": "mankey",    "types": [      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 57,    "name": "primeape",    "types": [      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 58,    "name": "growlithe",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 59,    "name": "arcanine",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 60,    "name": "poliwag",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 61,    "name": "poliwhirl",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 62,    "name": "poliwrath",    "types": [      "water",      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 63,    "name": "abra",    "types": [      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 64,    "name": "kadabra",    "types": [      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 65,    "name": "alakazam",    "types": [      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 66,    "name": "machop",    "types": [      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 67,    "name": "machoke",    "types": [      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 68,    "name": "machamp",    "types": [      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 69,    "name": "bellsprout",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 70,    "name": "weepinbell",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 71,    "name": "victreebel",    "types": [      "grass",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 72,    "name": "tentacool",    "types": [      "water",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 73,    "name": "tentacruel",    "types": [      "water",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 74,    "name": "geodude",    "types": [      "rock",      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 75,    "name": "graveler",    "types": [      "rock",      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 76,    "name": "golem",    "types": [      "rock",      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 77,    "name": "ponyta",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 78,    "name": "rapidash",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 79,    "name": "slowpoke",    "types": [      "water",      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 80,    "name": "slowbro",    "types": [      "water",      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 81,    "name": "magnemite",    "types": [      "electric",      "steel"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 82,    "name": "magneton",    "types": [      "electric",      "steel"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 83,    "name": "farfetchd",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 84,    "name": "doduo",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 85,    "name": "dodrio",    "types": [      "normal",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 86,    "name": "seel",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 87,    "name": "dewgong",    "types": [      "water",      "ice"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 88,    "name": "grimer",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 89,    "name": "muk",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 90,    "name": "shellder",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 91,    "name": "cloyster",    "types": [      "water",      "ice"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 92,    "name": "gastly",    "types": [      "ghost",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 93,    "name": "haunter",    "types": [      "ghost",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 94,    "name": "gengar",    "types": [      "ghost",      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 95,    "name": "onix",    "types": [      "rock",      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 96,    "name": "drowzee",    "types": [      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 97,    "name": "hypno",    "types": [      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 98,    "name": "krabby",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 99,    "name": "kingler",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 100,    "name": "voltorb",    "types": [      "electric"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 101,    "name": "electrode",    "types": [      "electric"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 102,    "name": "exeggcute",    "types": [      "grass",      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 103,    "name": "exeggutor",    "types": [      "grass",      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 104,    "name": "cubone",    "types": [      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 105,    "name": "marowak",    "types": [      "ground"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 106,    "name": "hitmonlee",    "types": [      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 107,    "name": "hitmonchan",    "types": [      "fighting"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 108,    "name": "lickitung",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 109,    "name": "koffing",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 110,    "name": "weezing",    "types": [      "poison"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 111,    "name": "rhyhorn",    "types": [      "ground",      "rock"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 112,    "name": "rhydon",    "types": [      "ground",      "rock"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 113,    "name": "chansey",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 114,    "name": "tangela",    "types": [      "grass"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 115,    "name": "kangaskhan",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 116,    "name": "horsea",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 117,    "name": "seadra",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 118,    "name": "goldeen",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 119,    "name": "seaking",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 120,    "name": "staryu",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 121,    "name": "starmie",    "types": [      "water",      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 122,    "name": "mr-mime",    "types": [      "psychic",      "fairy"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 123,    "name": "scyther",    "types": [      "bug",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 124,    "name": "jynx",    "types": [      "ice",      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 125,    "name": "electabuzz",    "types": [      "electric"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 126,    "name": "magmar",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 127,    "name": "pinsir",    "types": [      "bug"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 128,    "name": "tauros",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 129,    "name": "magikarp",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 130,    "name": "gyarados",    "types": [      "water",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 131,    "name": "lapras",    "types": [      "water",      "ice"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 132,    "name": "ditto",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 133,    "name": "eevee",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 134,    "name": "vaporeon",    "types": [      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 135,    "name": "jolteon",    "types": [      "electric"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 136,    "name": "flareon",    "types": [      "fire"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 137,    "name": "porygon",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 138,    "name": "omanyte",    "types": [      "rock",      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 139,    "name": "omastar",    "types": [      "rock",      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 140,    "name": "kabuto",    "types": [      "rock",      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 141,    "name": "kabutops",    "types": [      "rock",      "water"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 142,    "name": "aerodactyl",    "types": [      "rock",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 143,    "name": "snorlax",    "types": [      "normal"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 144,    "name": "articuno",    "types": [      "ice",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 145,    "name": "zapdos",    "types": [      "electric",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 146,    "name": "moltres",    "types": [      "fire",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 147,    "name": "dratini",    "types": [      "dragon"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 148,    "name": "dragonair",    "types": [      "dragon"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 149,    "name": "dragonite",    "types": [      "dragon",      "flying"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 150,    "name": "mewtwo",    "types": [      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 151,    "name": "mew",    "types": [      "psychic"    ],    "region": "kanto",    "obtained": false  },  {    "dex": 152,    "name": "chikorita",    "types": [      "grass"    ],    "region": "johto",    "obtained": false  },  {    "dex": 153,    "name": "bayleef",    "types": [      "grass"    ],    "region": "johto",    "obtained": false  },  {    "dex": 154,    "name": "meganium",    "types": [      "grass"    ],    "region": "johto",    "obtained": false  },  {    "dex": 155,    "name": "cyndaquil",    "types": [      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 156,    "name": "quilava",    "types": [      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 157,    "name": "typhlosion",    "types": [      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 158,    "name": "totodile",    "types": [      "water"    ],    "region": "johto",    "obtained": false  },  {    "dex": 159,    "name": "croconaw",    "types": [      "water"    ],    "region": "johto",    "obtained": false  },  {    "dex": 160,    "name": "feraligatr",    "types": [      "water"    ],    "region": "johto",    "obtained": false  },  {    "dex": 161,    "name": "sentret",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 162,    "name": "furret",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 163,    "name": "hoothoot",    "types": [      "normal",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 164,    "name": "noctowl",    "types": [      "normal",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 165,    "name": "ledyba",    "types": [      "bug",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 166,    "name": "ledian",    "types": [      "bug",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 167,    "name": "spinarak",    "types": [      "bug",      "poison"    ],    "region": "johto",    "obtained": false  },  {    "dex": 168,    "name": "ariados",    "types": [      "bug",      "poison"    ],    "region": "johto",    "obtained": false  },  {    "dex": 169,    "name": "crobat",    "types": [      "poison",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 170,    "name": "chinchou",    "types": [      "water",      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 171,    "name": "lanturn",    "types": [      "water",      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 172,    "name": "pichu",    "types": [      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 173,    "name": "cleffa",    "types": [      "fairy"    ],    "region": "johto",    "obtained": false  },  {    "dex": 174,    "name": "igglybuff",    "types": [      "normal",      "fairy"    ],    "region": "johto",    "obtained": false  },  {    "dex": 175,    "name": "togepi",    "types": [      "fairy"    ],    "region": "johto",    "obtained": false  },  {    "dex": 176,    "name": "togetic",    "types": [      "fairy",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 177,    "name": "natu",    "types": [      "psychic",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 178,    "name": "xatu",    "types": [      "psychic",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 179,    "name": "mareep",    "types": [      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 180,    "name": "flaaffy",    "types": [      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 181,    "name": "ampharos",    "types": [      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 182,    "name": "bellossom",    "types": [      "grass"    ],    "region": "johto",    "obtained": false  },  {    "dex": 183,    "name": "marill",    "types": [      "water",      "fairy"    ],    "region": "johto",    "obtained": false  },  {    "dex": 184,    "name": "azumarill",    "types": [      "water",      "fairy"    ],    "region": "johto",    "obtained": false  },  {    "dex": 185,    "name": "sudowoodo",    "types": [      "rock"    ],    "region": "johto",    "obtained": false  },  {    "dex": 186,    "name": "politoed",    "types": [      "water"    ],    "region": "johto",    "obtained": false  },  {    "dex": 187,    "name": "hoppip",    "types": [      "grass",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 188,    "name": "skiploom",    "types": [      "grass",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 189,    "name": "jumpluff",    "types": [      "grass",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 190,    "name": "aipom",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 191,    "name": "sunkern",    "types": [      "grass"    ],    "region": "johto",    "obtained": false  },  {    "dex": 192,    "name": "sunflora",    "types": [      "grass"    ],    "region": "johto",    "obtained": false  },  {    "dex": 193,    "name": "yanma",    "types": [      "bug",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 194,    "name": "wooper",    "types": [      "water",      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 195,    "name": "quagsire",    "types": [      "water",      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 196,    "name": "espeon",    "types": [      "psychic"    ],    "region": "johto",    "obtained": false  },  {    "dex": 197,    "name": "umbreon",    "types": [      "dark"    ],    "region": "johto",    "obtained": false  },  {    "dex": 198,    "name": "murkrow",    "types": [      "dark",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 199,    "name": "slowking",    "types": [      "water",      "psychic"    ],    "region": "johto",    "obtained": false  },  {    "dex": 200,    "name": "misdreavus",    "types": [      "ghost"    ],    "region": "johto",    "obtained": false  },  {    "dex": 201,    "name": "unown",    "types": [      "psychic"    ],    "region": "johto",    "obtained": false  },  {    "dex": 202,    "name": "wobbuffet",    "types": [      "psychic"    ],    "region": "johto",    "obtained": false  },  {    "dex": 203,    "name": "girafarig",    "types": [      "normal",      "psychic"    ],    "region": "johto",    "obtained": false  },  {    "dex": 204,    "name": "pineco",    "types": [      "bug"    ],    "region": "johto",    "obtained": false  },  {    "dex": 205,    "name": "forretress",    "types": [      "bug",      "steel"    ],    "region": "johto",    "obtained": false  },  {    "dex": 206,    "name": "dunsparce",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 207,    "name": "gligar",    "types": [      "ground",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 208,    "name": "steelix",    "types": [      "steel",      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 209,    "name": "snubbull",    "types": [      "fairy"    ],    "region": "johto",    "obtained": false  },  {    "dex": 210,    "name": "granbull",    "types": [      "fairy"    ],    "region": "johto",    "obtained": false  },  {    "dex": 211,    "name": "qwilfish",    "types": [      "water",      "poison"    ],    "region": "johto",    "obtained": false  },  {    "dex": 212,    "name": "scizor",    "types": [      "bug",      "steel"    ],    "region": "johto",    "obtained": false  },  {    "dex": 213,    "name": "shuckle",    "types": [      "bug",      "rock"    ],    "region": "johto",    "obtained": false  },  {    "dex": 214,    "name": "heracross",    "types": [      "bug",      "fighting"    ],    "region": "johto",    "obtained": false  },  {    "dex": 215,    "name": "sneasel",    "types": [      "dark",      "ice"    ],    "region": "johto",    "obtained": false  },  {    "dex": 216,    "name": "teddiursa",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 217,    "name": "ursaring",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 218,    "name": "slugma",    "types": [      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 219,    "name": "magcargo",    "types": [      "fire",      "rock"    ],    "region": "johto",    "obtained": false  },  {    "dex": 220,    "name": "swinub",    "types": [      "ice",      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 221,    "name": "piloswine",    "types": [      "ice",      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 222,    "name": "corsola",    "types": [      "water",      "rock"    ],    "region": "johto",    "obtained": false  },  {    "dex": 223,    "name": "remoraid",    "types": [      "water"    ],    "region": "johto",    "obtained": false  },  {    "dex": 224,    "name": "octillery",    "types": [      "water"    ],    "region": "johto",    "obtained": false  },  {    "dex": 225,    "name": "delibird",    "types": [      "ice",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 226,    "name": "mantine",    "types": [      "water",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 227,    "name": "skarmory",    "types": [      "steel",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 228,    "name": "houndour",    "types": [      "dark",      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 229,    "name": "houndoom",    "types": [      "dark",      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 230,    "name": "kingdra",    "types": [      "water",      "dragon"    ],    "region": "johto",    "obtained": false  },  {    "dex": 231,    "name": "phanpy",    "types": [      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 232,    "name": "donphan",    "types": [      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 233,    "name": "porygon2",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 234,    "name": "stantler",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 235,    "name": "smeargle",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 236,    "name": "tyrogue",    "types": [      "fighting"    ],    "region": "johto",    "obtained": false  },  {    "dex": 237,    "name": "hitmontop",    "types": [      "fighting"    ],    "region": "johto",    "obtained": false  },  {    "dex": 238,    "name": "smoochum",    "types": [      "ice",      "psychic"    ],    "region": "johto",    "obtained": false  },  {    "dex": 239,    "name": "elekid",    "types": [      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 240,    "name": "magby",    "types": [      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 241,    "name": "miltank",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 242,    "name": "blissey",    "types": [      "normal"    ],    "region": "johto",    "obtained": false  },  {    "dex": 243,    "name": "raikou",    "types": [      "electric"    ],    "region": "johto",    "obtained": false  },  {    "dex": 244,    "name": "entei",    "types": [      "fire"    ],    "region": "johto",    "obtained": false  },  {    "dex": 245,    "name": "suicune",    "types": [      "water"    ],    "region": "johto",    "obtained": false  },  {    "dex": 246,    "name": "larvitar",    "types": [      "rock",      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 247,    "name": "pupitar",    "types": [      "rock",      "ground"    ],    "region": "johto",    "obtained": false  },  {    "dex": 248,    "name": "tyranitar",    "types": [      "rock",      "dark"    ],    "region": "johto",    "obtained": false  },  {    "dex": 249,    "name": "lugia",    "types": [      "psychic",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 250,    "name": "ho-oh",    "types": [      "fire",      "flying"    ],    "region": "johto",    "obtained": false  },  {    "dex": 251,    "name": "celebi",    "types": [      "psychic",      "grass"    ],    "region": "johto",    "obtained": false  },  {    "dex": 252,    "name": "treecko",    "types": [      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 253,    "name": "grovyle",    "types": [      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 254,    "name": "sceptile",    "types": [      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 255,    "name": "torchic",    "types": [      "fire"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 256,    "name": "combusken",    "types": [      "fire",      "fighting"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 257,    "name": "blaziken",    "types": [      "fire",      "fighting"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 258,    "name": "mudkip",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 259,    "name": "marshtomp",    "types": [      "water",      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 260,    "name": "swampert",    "types": [      "water",      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 261,    "name": "poochyena",    "types": [      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 262,    "name": "mightyena",    "types": [      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 263,    "name": "zigzagoon",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 264,    "name": "linoone",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 265,    "name": "wurmple",    "types": [      "bug"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 266,    "name": "silcoon",    "types": [      "bug"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 267,    "name": "beautifly",    "types": [      "bug",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 268,    "name": "cascoon",    "types": [      "bug"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 269,    "name": "dustox",    "types": [      "bug",      "poison"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 270,    "name": "lotad",    "types": [      "water",      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 271,    "name": "lombre",    "types": [      "water",      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 272,    "name": "ludicolo",    "types": [      "water",      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 273,    "name": "seedot",    "types": [      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 274,    "name": "nuzleaf",    "types": [      "grass",      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 275,    "name": "shiftry",    "types": [      "grass",      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 276,    "name": "taillow",    "types": [      "normal",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 277,    "name": "swellow",    "types": [      "normal",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 278,    "name": "wingull",    "types": [      "water",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 279,    "name": "pelipper",    "types": [      "water",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 280,    "name": "ralts",    "types": [      "psychic",      "fairy"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 281,    "name": "kirlia",    "types": [      "psychic",      "fairy"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 282,    "name": "gardevoir",    "types": [      "psychic",      "fairy"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 283,    "name": "surskit",    "types": [      "bug",      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 284,    "name": "masquerain",    "types": [      "bug",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 285,    "name": "shroomish",    "types": [      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 286,    "name": "breloom",    "types": [      "grass",      "fighting"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 287,    "name": "slakoth",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 288,    "name": "vigoroth",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 289,    "name": "slaking",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 290,    "name": "nincada",    "types": [      "bug",      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 291,    "name": "ninjask",    "types": [      "bug",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 292,    "name": "shedinja",    "types": [      "bug",      "ghost"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 293,    "name": "whismur",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 294,    "name": "loudred",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 295,    "name": "exploud",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 296,    "name": "makuhita",    "types": [      "fighting"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 297,    "name": "hariyama",    "types": [      "fighting"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 298,    "name": "azurill",    "types": [      "normal",      "fairy"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 299,    "name": "nosepass",    "types": [      "rock"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 300,    "name": "skitty",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 301,    "name": "delcatty",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 302,    "name": "sableye",    "types": [      "dark",      "ghost"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 303,    "name": "mawile",    "types": [      "steel",      "fairy"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 304,    "name": "aron",    "types": [      "steel",      "rock"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 305,    "name": "lairon",    "types": [      "steel",      "rock"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 306,    "name": "aggron",    "types": [      "steel",      "rock"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 307,    "name": "meditite",    "types": [      "fighting",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 308,    "name": "medicham",    "types": [      "fighting",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 309,    "name": "electrike",    "types": [      "electric"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 310,    "name": "manectric",    "types": [      "electric"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 311,    "name": "plusle",    "types": [      "electric"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 312,    "name": "minun",    "types": [      "electric"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 313,    "name": "volbeat",    "types": [      "bug"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 314,    "name": "illumise",    "types": [      "bug"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 315,    "name": "roselia",    "types": [      "grass",      "poison"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 316,    "name": "gulpin",    "types": [      "poison"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 317,    "name": "swalot",    "types": [      "poison"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 318,    "name": "carvanha",    "types": [      "water",      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 319,    "name": "sharpedo",    "types": [      "water",      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 320,    "name": "wailmer",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 321,    "name": "wailord",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 322,    "name": "numel",    "types": [      "fire",      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 323,    "name": "camerupt",    "types": [      "fire",      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 324,    "name": "torkoal",    "types": [      "fire"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 325,    "name": "spoink",    "types": [      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 326,    "name": "grumpig",    "types": [      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 327,    "name": "spinda",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 328,    "name": "trapinch",    "types": [      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 329,    "name": "vibrava",    "types": [      "ground",      "dragon"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 330,    "name": "flygon",    "types": [      "ground",      "dragon"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 331,    "name": "cacnea",    "types": [      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 332,    "name": "cacturne",    "types": [      "grass",      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 333,    "name": "swablu",    "types": [      "normal",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 334,    "name": "altaria",    "types": [      "dragon",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 335,    "name": "zangoose",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 336,    "name": "seviper",    "types": [      "poison"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 337,    "name": "lunatone",    "types": [      "rock",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 338,    "name": "solrock",    "types": [      "rock",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 339,    "name": "barboach",    "types": [      "water",      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 340,    "name": "whiscash",    "types": [      "water",      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 341,    "name": "corphish",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 342,    "name": "crawdaunt",    "types": [      "water",      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 343,    "name": "baltoy",    "types": [      "ground",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 344,    "name": "claydol",    "types": [      "ground",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 345,    "name": "lileep",    "types": [      "rock",      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 346,    "name": "cradily",    "types": [      "rock",      "grass"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 347,    "name": "anorith",    "types": [      "rock",      "bug"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 348,    "name": "armaldo",    "types": [      "rock",      "bug"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 349,    "name": "feebas",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 350,    "name": "milotic",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 351,    "name": "castform",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 352,    "name": "kecleon",    "types": [      "normal"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 353,    "name": "shuppet",    "types": [      "ghost"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 354,    "name": "banette",    "types": [      "ghost"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 355,    "name": "duskull",    "types": [      "ghost"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 356,    "name": "dusclops",    "types": [      "ghost"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 357,    "name": "tropius",    "types": [      "grass",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 358,    "name": "chimecho",    "types": [      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 359,    "name": "absol",    "types": [      "dark"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 360,    "name": "wynaut",    "types": [      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 361,    "name": "snorunt",    "types": [      "ice"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 362,    "name": "glalie",    "types": [      "ice"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 363,    "name": "spheal",    "types": [      "ice",      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 364,    "name": "sealeo",    "types": [      "ice",      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 365,    "name": "walrein",    "types": [      "ice",      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 366,    "name": "clamperl",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 367,    "name": "huntail",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 368,    "name": "gorebyss",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 369,    "name": "relicanth",    "types": [      "water",      "rock"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 370,    "name": "luvdisc",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 371,    "name": "bagon",    "types": [      "dragon"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 372,    "name": "shelgon",    "types": [      "dragon"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 373,    "name": "salamence",    "types": [      "dragon",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 374,    "name": "beldum",    "types": [      "steel",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 375,    "name": "metang",    "types": [      "steel",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 376,    "name": "metagross",    "types": [      "steel",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 377,    "name": "regirock",    "types": [      "rock"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 378,    "name": "regice",    "types": [      "ice"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 379,    "name": "registeel",    "types": [      "steel"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 380,    "name": "latias",    "types": [      "dragon",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 381,    "name": "latios",    "types": [      "dragon",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 382,    "name": "kyogre",    "types": [      "water"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 383,    "name": "groudon",    "types": [      "ground"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 384,    "name": "rayquaza",    "types": [      "dragon",      "flying"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 385,    "name": "jirachi",    "types": [      "steel",      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 386,    "name": "deoxys",    "types": [      "psychic"    ],    "region": "hoenn",    "obtained": false  },  {    "dex": 387,    "name": "turtwig",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 388,    "name": "grotle",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 389,    "name": "torterra",    "types": [      "grass",      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 390,    "name": "chimchar",    "types": [      "fire"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 391,    "name": "monferno",    "types": [      "fire",      "fighting"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 392,    "name": "infernape",    "types": [      "fire",      "fighting"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 393,    "name": "piplup",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 394,    "name": "prinplup",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 395,    "name": "empoleon",    "types": [      "water",      "steel"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 396,    "name": "starly",    "types": [      "normal",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 397,    "name": "staravia",    "types": [      "normal",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 398,    "name": "staraptor",    "types": [      "normal",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 399,    "name": "bidoof",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 400,    "name": "bibarel",    "types": [      "normal",      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 401,    "name": "kricketot",    "types": [      "bug"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 402,    "name": "kricketune",    "types": [      "bug"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 403,    "name": "shinx",    "types": [      "electric"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 404,    "name": "luxio",    "types": [      "electric"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 405,    "name": "luxray",    "types": [      "electric"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 406,    "name": "budew",    "types": [      "grass",      "poison"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 407,    "name": "roserade",    "types": [      "grass",      "poison"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 408,    "name": "cranidos",    "types": [      "rock"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 409,    "name": "rampardos",    "types": [      "rock"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 410,    "name": "shieldon",    "types": [      "rock",      "steel"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 411,    "name": "bastiodon",    "types": [      "rock",      "steel"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 412,    "name": "burmy",    "types": [      "bug"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 413,    "name": "wormadam",    "types": [      "bug",      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 414,    "name": "mothim",    "types": [      "bug",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 415,    "name": "combee",    "types": [      "bug",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 416,    "name": "vespiquen",    "types": [      "bug",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 417,    "name": "pachirisu",    "types": [      "electric"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 418,    "name": "buizel",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 419,    "name": "floatzel",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 420,    "name": "cherubi",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 421,    "name": "cherrim",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 422,    "name": "shellos",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 423,    "name": "gastrodon",    "types": [      "water",      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 424,    "name": "ambipom",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 425,    "name": "drifloon",    "types": [      "ghost",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 426,    "name": "drifblim",    "types": [      "ghost",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 427,    "name": "buneary",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 428,    "name": "lopunny",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 429,    "name": "mismagius",    "types": [      "ghost"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 430,    "name": "honchkrow",    "types": [      "dark",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 431,    "name": "glameow",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 432,    "name": "purugly",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 433,    "name": "chingling",    "types": [      "psychic"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 434,    "name": "stunky",    "types": [      "poison",      "dark"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 435,    "name": "skuntank",    "types": [      "poison",      "dark"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 436,    "name": "bronzor",    "types": [      "steel",      "psychic"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 437,    "name": "bronzong",    "types": [      "steel",      "psychic"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 438,    "name": "bonsly",    "types": [      "rock"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 439,    "name": "mime-jr",    "types": [      "psychic",      "fairy"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 440,    "name": "happiny",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 441,    "name": "chatot",    "types": [      "normal",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 442,    "name": "spiritomb",    "types": [      "ghost",      "dark"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 443,    "name": "gible",    "types": [      "dragon",      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 444,    "name": "gabite",    "types": [      "dragon",      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 445,    "name": "garchomp",    "types": [      "dragon",      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 446,    "name": "munchlax",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 447,    "name": "riolu",    "types": [      "fighting"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 448,    "name": "lucario",    "types": [      "fighting",      "steel"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 449,    "name": "hippopotas",    "types": [      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 450,    "name": "hippowdon",    "types": [      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 451,    "name": "skorupi",    "types": [      "poison",      "bug"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 452,    "name": "drapion",    "types": [      "poison",      "dark"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 453,    "name": "croagunk",    "types": [      "poison",      "fighting"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 454,    "name": "toxicroak",    "types": [      "poison",      "fighting"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 455,    "name": "carnivine",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 456,    "name": "finneon",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 457,    "name": "lumineon",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 458,    "name": "mantyke",    "types": [      "water",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 459,    "name": "snover",    "types": [      "grass",      "ice"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 460,    "name": "abomasnow",    "types": [      "grass",      "ice"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 461,    "name": "weavile",    "types": [      "dark",      "ice"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 462,    "name": "magnezone",    "types": [      "electric",      "steel"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 463,    "name": "lickilicky",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 464,    "name": "rhyperior",    "types": [      "ground",      "rock"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 465,    "name": "tangrowth",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 466,    "name": "electivire",    "types": [      "electric"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 467,    "name": "magmortar",    "types": [      "fire"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 468,    "name": "togekiss",    "types": [      "fairy",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 469,    "name": "yanmega",    "types": [      "bug",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 470,    "name": "leafeon",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 471,    "name": "glaceon",    "types": [      "ice"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 472,    "name": "gliscor",    "types": [      "ground",      "flying"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 473,    "name": "mamoswine",    "types": [      "ice",      "ground"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 474,    "name": "porygon-z",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 475,    "name": "gallade",    "types": [      "psychic",      "fighting"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 476,    "name": "probopass",    "types": [      "rock",      "steel"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 477,    "name": "dusknoir",    "types": [      "ghost"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 478,    "name": "froslass",    "types": [      "ice",      "ghost"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 479,    "name": "rotom",    "types": [      "electric",      "ghost"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 480,    "name": "uxie",    "types": [      "psychic"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 481,    "name": "mesprit",    "types": [      "psychic"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 482,    "name": "azelf",    "types": [      "psychic"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 483,    "name": "dialga",    "types": [      "steel",      "dragon"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 484,    "name": "palkia",    "types": [      "water",      "dragon"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 485,    "name": "heatran",    "types": [      "fire",      "steel"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 486,    "name": "regigigas",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 487,    "name": "giratina",    "types": [      "ghost",      "dragon"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 488,    "name": "cresselia",    "types": [      "psychic"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 489,    "name": "phione",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 490,    "name": "manaphy",    "types": [      "water"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 491,    "name": "darkrai",    "types": [      "dark"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 492,    "name": "shaymin",    "types": [      "grass"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 493,    "name": "arceus",    "types": [      "normal"    ],    "region": "sinnoh",    "obtained": false  },  {    "dex": 494,    "name": "victini",    "types": [      "psychic",      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 495,    "name": "snivy",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 496,    "name": "servine",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 497,    "name": "serperior",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 498,    "name": "tepig",    "types": [      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 499,    "name": "pignite",    "types": [      "fire",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 500,    "name": "emboar",    "types": [      "fire",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 501,    "name": "oshawott",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 502,    "name": "dewott",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 503,    "name": "samurott",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 504,    "name": "patrat",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 505,    "name": "watchog",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 506,    "name": "lillipup",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 507,    "name": "herdier",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 508,    "name": "stoutland",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 509,    "name": "purrloin",    "types": [      "dark"    ],    "region": "unova",    "obtained": false  },  {    "dex": 510,    "name": "liepard",    "types": [      "dark"    ],    "region": "unova",    "obtained": false  },  {    "dex": 511,    "name": "pansage",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 512,    "name": "simisage",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 513,    "name": "pansear",    "types": [      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 514,    "name": "simisear",    "types": [      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 515,    "name": "panpour",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 516,    "name": "simipour",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 517,    "name": "munna",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 518,    "name": "musharna",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 519,    "name": "pidove",    "types": [      "normal",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 520,    "name": "tranquill",    "types": [      "normal",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 521,    "name": "unfezant",    "types": [      "normal",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 522,    "name": "blitzle",    "types": [      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 523,    "name": "zebstrika",    "types": [      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 524,    "name": "roggenrola",    "types": [      "rock"    ],    "region": "unova",    "obtained": false  },  {    "dex": 525,    "name": "boldore",    "types": [      "rock"    ],    "region": "unova",    "obtained": false  },  {    "dex": 526,    "name": "gigalith",    "types": [      "rock"    ],    "region": "unova",    "obtained": false  },  {    "dex": 527,    "name": "woobat",    "types": [      "psychic",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 528,    "name": "swoobat",    "types": [      "psychic",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 529,    "name": "drilbur",    "types": [      "ground"    ],    "region": "unova",    "obtained": false  },  {    "dex": 530,    "name": "excadrill",    "types": [      "ground",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 531,    "name": "audino",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 532,    "name": "timburr",    "types": [      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 533,    "name": "gurdurr",    "types": [      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 534,    "name": "conkeldurr",    "types": [      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 535,    "name": "tympole",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 536,    "name": "palpitoad",    "types": [      "water",      "ground"    ],    "region": "unova",    "obtained": false  },  {    "dex": 537,    "name": "seismitoad",    "types": [      "water",      "ground"    ],    "region": "unova",    "obtained": false  },  {    "dex": 538,    "name": "throh",    "types": [      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 539,    "name": "sawk",    "types": [      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 540,    "name": "sewaddle",    "types": [      "bug",      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 541,    "name": "swadloon",    "types": [      "bug",      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 542,    "name": "leavanny",    "types": [      "bug",      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 543,    "name": "venipede",    "types": [      "bug",      "poison"    ],    "region": "unova",    "obtained": false  },  {    "dex": 544,    "name": "whirlipede",    "types": [      "bug",      "poison"    ],    "region": "unova",    "obtained": false  },  {    "dex": 545,    "name": "scolipede",    "types": [      "bug",      "poison"    ],    "region": "unova",    "obtained": false  },  {    "dex": 546,    "name": "cottonee",    "types": [      "grass",      "fairy"    ],    "region": "unova",    "obtained": false  },  {    "dex": 547,    "name": "whimsicott",    "types": [      "grass",      "fairy"    ],    "region": "unova",    "obtained": false  },  {    "dex": 548,    "name": "petilil",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 549,    "name": "lilligant",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 550,    "name": "basculin",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 551,    "name": "sandile",    "types": [      "ground",      "dark"    ],    "region": "unova",    "obtained": false  },  {    "dex": 552,    "name": "krokorok",    "types": [      "ground",      "dark"    ],    "region": "unova",    "obtained": false  },  {    "dex": 553,    "name": "krookodile",    "types": [      "ground",      "dark"    ],    "region": "unova",    "obtained": false  },  {    "dex": 554,    "name": "darumaka",    "types": [      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 555,    "name": "darmanitan",    "types": [      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 556,    "name": "maractus",    "types": [      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 557,    "name": "dwebble",    "types": [      "bug",      "rock"    ],    "region": "unova",    "obtained": false  },  {    "dex": 558,    "name": "crustle",    "types": [      "bug",      "rock"    ],    "region": "unova",    "obtained": false  },  {    "dex": 559,    "name": "scraggy",    "types": [      "dark",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 560,    "name": "scrafty",    "types": [      "dark",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 561,    "name": "sigilyph",    "types": [      "psychic",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 562,    "name": "yamask",    "types": [      "ghost"    ],    "region": "unova",    "obtained": false  },  {    "dex": 563,    "name": "cofagrigus",    "types": [      "ghost"    ],    "region": "unova",    "obtained": false  },  {    "dex": 564,    "name": "tirtouga",    "types": [      "water",      "rock"    ],    "region": "unova",    "obtained": false  },  {    "dex": 565,    "name": "carracosta",    "types": [      "water",      "rock"    ],    "region": "unova",    "obtained": false  },  {    "dex": 566,    "name": "archen",    "types": [      "rock",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 567,    "name": "archeops",    "types": [      "rock",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 568,    "name": "trubbish",    "types": [      "poison"    ],    "region": "unova",    "obtained": false  },  {    "dex": 569,    "name": "garbodor",    "types": [      "poison"    ],    "region": "unova",    "obtained": false  },  {    "dex": 570,    "name": "zorua",    "types": [      "dark"    ],    "region": "unova",    "obtained": false  },  {    "dex": 571,    "name": "zoroark",    "types": [      "dark"    ],    "region": "unova",    "obtained": false  },  {    "dex": 572,    "name": "minccino",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 573,    "name": "cinccino",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 574,    "name": "gothita",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 575,    "name": "gothorita",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 576,    "name": "gothitelle",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 577,    "name": "solosis",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 578,    "name": "duosion",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 579,    "name": "reuniclus",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 580,    "name": "ducklett",    "types": [      "water",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 581,    "name": "swanna",    "types": [      "water",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 582,    "name": "vanillite",    "types": [      "ice"    ],    "region": "unova",    "obtained": false  },  {    "dex": 583,    "name": "vanillish",    "types": [      "ice"    ],    "region": "unova",    "obtained": false  },  {    "dex": 584,    "name": "vanilluxe",    "types": [      "ice"    ],    "region": "unova",    "obtained": false  },  {    "dex": 585,    "name": "deerling",    "types": [      "normal",      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 586,    "name": "sawsbuck",    "types": [      "normal",      "grass"    ],    "region": "unova",    "obtained": false  },  {    "dex": 587,    "name": "emolga",    "types": [      "electric",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 588,    "name": "karrablast",    "types": [      "bug"    ],    "region": "unova",    "obtained": false  },  {    "dex": 589,    "name": "escavalier",    "types": [      "bug",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 590,    "name": "foongus",    "types": [      "grass",      "poison"    ],    "region": "unova",    "obtained": false  },  {    "dex": 591,    "name": "amoonguss",    "types": [      "grass",      "poison"    ],    "region": "unova",    "obtained": false  },  {    "dex": 592,    "name": "frillish",    "types": [      "water",      "ghost"    ],    "region": "unova",    "obtained": false  },  {    "dex": 593,    "name": "jellicent",    "types": [      "water",      "ghost"    ],    "region": "unova",    "obtained": false  },  {    "dex": 594,    "name": "alomomola",    "types": [      "water"    ],    "region": "unova",    "obtained": false  },  {    "dex": 595,    "name": "joltik",    "types": [      "bug",      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 596,    "name": "galvantula",    "types": [      "bug",      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 597,    "name": "ferroseed",    "types": [      "grass",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 598,    "name": "ferrothorn",    "types": [      "grass",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 599,    "name": "klink",    "types": [      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 600,    "name": "klang",    "types": [      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 601,    "name": "klinklang",    "types": [      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 602,    "name": "tynamo",    "types": [      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 603,    "name": "eelektrik",    "types": [      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 604,    "name": "eelektross",    "types": [      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 605,    "name": "elgyem",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 606,    "name": "beheeyem",    "types": [      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 607,    "name": "litwick",    "types": [      "ghost",      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 608,    "name": "lampent",    "types": [      "ghost",      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 609,    "name": "chandelure",    "types": [      "ghost",      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 610,    "name": "axew",    "types": [      "dragon"    ],    "region": "unova",    "obtained": false  },  {    "dex": 611,    "name": "fraxure",    "types": [      "dragon"    ],    "region": "unova",    "obtained": false  },  {    "dex": 612,    "name": "haxorus",    "types": [      "dragon"    ],    "region": "unova",    "obtained": false  },  {    "dex": 613,    "name": "cubchoo",    "types": [      "ice"    ],    "region": "unova",    "obtained": false  },  {    "dex": 614,    "name": "beartic",    "types": [      "ice"    ],    "region": "unova",    "obtained": false  },  {    "dex": 615,    "name": "cryogonal",    "types": [      "ice"    ],    "region": "unova",    "obtained": false  },  {    "dex": 616,    "name": "shelmet",    "types": [      "bug"    ],    "region": "unova",    "obtained": false  },  {    "dex": 617,    "name": "accelgor",    "types": [      "bug"    ],    "region": "unova",    "obtained": false  },  {    "dex": 618,    "name": "stunfisk",    "types": [      "ground",      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 619,    "name": "mienfoo",    "types": [      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 620,    "name": "mienshao",    "types": [      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 621,    "name": "druddigon",    "types": [      "dragon"    ],    "region": "unova",    "obtained": false  },  {    "dex": 622,    "name": "golett",    "types": [      "ground",      "ghost"    ],    "region": "unova",    "obtained": false  },  {    "dex": 623,    "name": "golurk",    "types": [      "ground",      "ghost"    ],    "region": "unova",    "obtained": false  },  {    "dex": 624,    "name": "pawniard",    "types": [      "dark",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 625,    "name": "bisharp",    "types": [      "dark",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 626,    "name": "bouffalant",    "types": [      "normal"    ],    "region": "unova",    "obtained": false  },  {    "dex": 627,    "name": "rufflet",    "types": [      "normal",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 628,    "name": "braviary",    "types": [      "normal",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 629,    "name": "vullaby",    "types": [      "dark",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 630,    "name": "mandibuzz",    "types": [      "dark",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 631,    "name": "heatmor",    "types": [      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 632,    "name": "durant",    "types": [      "bug",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 633,    "name": "deino",    "types": [      "dark",      "dragon"    ],    "region": "unova",    "obtained": false  },  {    "dex": 634,    "name": "zweilous",    "types": [      "dark",      "dragon"    ],    "region": "unova",    "obtained": false  },  {    "dex": 635,    "name": "hydreigon",    "types": [      "dark",      "dragon"    ],    "region": "unova",    "obtained": false  },  {    "dex": 636,    "name": "larvesta",    "types": [      "bug",      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 637,    "name": "volcarona",    "types": [      "bug",      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 638,    "name": "cobalion",    "types": [      "steel",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 639,    "name": "terrakion",    "types": [      "rock",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 640,    "name": "virizion",    "types": [      "grass",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 641,    "name": "tornadus",    "types": [      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 642,    "name": "thundurus",    "types": [      "electric",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 643,    "name": "reshiram",    "types": [      "dragon",      "fire"    ],    "region": "unova",    "obtained": false  },  {    "dex": 644,    "name": "zekrom",    "types": [      "dragon",      "electric"    ],    "region": "unova",    "obtained": false  },  {    "dex": 645,    "name": "landorus",    "types": [      "ground",      "flying"    ],    "region": "unova",    "obtained": false  },  {    "dex": 646,    "name": "kyurem",    "types": [      "dragon",      "ice"    ],    "region": "unova",    "obtained": false  },  {    "dex": 647,    "name": "keldeo",    "types": [      "water",      "fighting"    ],    "region": "unova",    "obtained": false  },  {    "dex": 648,    "name": "meloetta",    "types": [      "normal",      "psychic"    ],    "region": "unova",    "obtained": false  },  {    "dex": 649,    "name": "genesect",    "types": [      "bug",      "steel"    ],    "region": "unova",    "obtained": false  },  {    "dex": 650,    "name": "chespin",    "types": [      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 651,    "name": "quilladin",    "types": [      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 652,    "name": "chesnaught",    "types": [      "grass",      "fighting"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 653,    "name": "fennekin",    "types": [      "fire"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 654,    "name": "braixen",    "types": [      "fire"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 655,    "name": "delphox",    "types": [      "fire",      "psychic"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 656,    "name": "froakie",    "types": [      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 657,    "name": "frogadier",    "types": [      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 658,    "name": "greninja",    "types": [      "water",      "dark"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 659,    "name": "bunnelby",    "types": [      "normal"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 660,    "name": "diggersby",    "types": [      "normal",      "ground"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 661,    "name": "fletchling",    "types": [      "normal",      "flying"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 662,    "name": "fletchinder",    "types": [      "fire",      "flying"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 663,    "name": "talonflame",    "types": [      "fire",      "flying"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 664,    "name": "scatterbug",    "types": [      "bug"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 665,    "name": "spewpa",    "types": [      "bug"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 666,    "name": "vivillon",    "types": [      "bug",      "flying"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 667,    "name": "litleo",    "types": [      "fire",      "normal"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 668,    "name": "pyroar",    "types": [      "fire",      "normal"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 669,    "name": "flabebe",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 670,    "name": "floette",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 671,    "name": "florges",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 672,    "name": "skiddo",    "types": [      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 673,    "name": "gogoat",    "types": [      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 674,    "name": "pancham",    "types": [      "fighting"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 675,    "name": "pangoro",    "types": [      "fighting",      "dark"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 676,    "name": "furfrou",    "types": [      "normal"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 677,    "name": "espurr",    "types": [      "psychic"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 678,    "name": "meowstic",    "types": [      "psychic"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 679,    "name": "honedge",    "types": [      "steel",      "ghost"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 680,    "name": "doublade",    "types": [      "steel",      "ghost"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 681,    "name": "aegislash",    "types": [      "steel",      "ghost"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 682,    "name": "spritzee",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 683,    "name": "aromatisse",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 684,    "name": "swirlix",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 685,    "name": "slurpuff",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 686,    "name": "inkay",    "types": [      "dark",      "psychic"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 687,    "name": "malamar",    "types": [      "dark",      "psychic"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 688,    "name": "binacle",    "types": [      "rock",      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 689,    "name": "barbaracle",    "types": [      "rock",      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 690,    "name": "skrelp",    "types": [      "poison",      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 691,    "name": "dragalge",    "types": [      "poison",      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 692,    "name": "clauncher",    "types": [      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 693,    "name": "clawitzer",    "types": [      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 694,    "name": "helioptile",    "types": [      "electric",      "normal"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 695,    "name": "heliolisk",    "types": [      "electric",      "normal"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 696,    "name": "tyrunt",    "types": [      "rock",      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 697,    "name": "tyrantrum",    "types": [      "rock",      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 698,    "name": "amaura",    "types": [      "rock",      "ice"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 699,    "name": "aurorus",    "types": [      "rock",      "ice"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 700,    "name": "sylveon",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 701,    "name": "hawlucha",    "types": [      "fighting",      "flying"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 702,    "name": "dedenne",    "types": [      "electric",      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 703,    "name": "carbink",    "types": [      "rock",      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 704,    "name": "goomy",    "types": [      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 705,    "name": "sliggoo",    "types": [      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 706,    "name": "goodra",    "types": [      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 707,    "name": "klefki",    "types": [      "steel",      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 708,    "name": "phantump",    "types": [      "ghost",      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 709,    "name": "trevenant",    "types": [      "ghost",      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 710,    "name": "pumpkaboo",    "types": [      "ghost",      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 711,    "name": "gourgeist",    "types": [      "ghost",      "grass"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 712,    "name": "bergmite",    "types": [      "ice"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 713,    "name": "avalugg",    "types": [      "ice"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 714,    "name": "noibat",    "types": [      "flying",      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 715,    "name": "noivern",    "types": [      "flying",      "dragon"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 716,    "name": "xerneas",    "types": [      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 717,    "name": "yveltal",    "types": [      "dark",      "flying"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 718,    "name": "zygarde",    "types": [      "dragon",      "ground"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 719,    "name": "diancie",    "types": [      "rock",      "fairy"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 720,    "name": "hoopa",    "types": [      "psychic",      "ghost"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 721,    "name": "volcanion",    "types": [      "fire",      "water"    ],    "region": "kalos",    "obtained": false  },  {    "dex": 722,    "name": "rowlet",    "types": [      "grass",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 723,    "name": "dartrix",    "types": [      "grass",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 724,    "name": "decidueye",    "types": [      "grass",      "ghost"    ],    "region": "alola",    "obtained": false  },  {    "dex": 725,    "name": "litten",    "types": [      "fire"    ],    "region": "alola",    "obtained": false  },  {    "dex": 726,    "name": "torracat",    "types": [      "fire"    ],    "region": "alola",    "obtained": false  },  {    "dex": 727,    "name": "incineroar",    "types": [      "fire",      "dark"    ],    "region": "alola",    "obtained": false  },  {    "dex": 728,    "name": "popplio",    "types": [      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 729,    "name": "brionne",    "types": [      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 730,    "name": "primarina",    "types": [      "water",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 731,    "name": "pikipek",    "types": [      "normal",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 732,    "name": "trumbeak",    "types": [      "normal",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 733,    "name": "toucannon",    "types": [      "normal",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 734,    "name": "yungoos",    "types": [      "normal"    ],    "region": "alola",    "obtained": false  },  {    "dex": 735,    "name": "gumshoos",    "types": [      "normal"    ],    "region": "alola",    "obtained": false  },  {    "dex": 736,    "name": "grubbin",    "types": [      "bug"    ],    "region": "alola",    "obtained": false  },  {    "dex": 737,    "name": "charjabug",    "types": [      "bug",      "electric"    ],    "region": "alola",    "obtained": false  },  {    "dex": 738,    "name": "vikavolt",    "types": [      "bug",      "electric"    ],    "region": "alola",    "obtained": false  },  {    "dex": 739,    "name": "crabrawler",    "types": [      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 740,    "name": "crabominable",    "types": [      "fighting",      "ice"    ],    "region": "alola",    "obtained": false  },  {    "dex": 741,    "name": "oricorio",    "types": [      "fire",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 742,    "name": "cutiefly",    "types": [      "bug",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 743,    "name": "ribombee",    "types": [      "bug",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 744,    "name": "rockruff",    "types": [      "rock"    ],    "region": "alola",    "obtained": false  },  {    "dex": 745,    "name": "lycanroc",    "types": [      "rock"    ],    "region": "alola",    "obtained": false  },  {    "dex": 746,    "name": "wishiwashi",    "types": [      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 747,    "name": "mareanie",    "types": [      "poison",      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 748,    "name": "toxapex",    "types": [      "poison",      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 749,    "name": "mudbray",    "types": [      "ground"    ],    "region": "alola",    "obtained": false  },  {    "dex": 750,    "name": "mudsdale",    "types": [      "ground"    ],    "region": "alola",    "obtained": false  },  {    "dex": 751,    "name": "dewpider",    "types": [      "water",      "bug"    ],    "region": "alola",    "obtained": false  },  {    "dex": 752,    "name": "araquanid",    "types": [      "water",      "bug"    ],    "region": "alola",    "obtained": false  },  {    "dex": 753,    "name": "fomantis",    "types": [      "grass"    ],    "region": "alola",    "obtained": false  },  {    "dex": 754,    "name": "lurantis",    "types": [      "grass"    ],    "region": "alola",    "obtained": false  },  {    "dex": 755,    "name": "morelull",    "types": [      "grass",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 756,    "name": "shiinotic",    "types": [      "grass",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 757,    "name": "salandit",    "types": [      "poison",      "fire"    ],    "region": "alola",    "obtained": false  },  {    "dex": 758,    "name": "salazzle",    "types": [      "poison",      "fire"    ],    "region": "alola",    "obtained": false  },  {    "dex": 759,    "name": "stufful",    "types": [      "normal",      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 760,    "name": "bewear",    "types": [      "normal",      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 761,    "name": "bounsweet",    "types": [      "grass"    ],    "region": "alola",    "obtained": false  },  {    "dex": 762,    "name": "steenee",    "types": [      "grass"    ],    "region": "alola",    "obtained": false  },  {    "dex": 763,    "name": "tsareena",    "types": [      "grass"    ],    "region": "alola",    "obtained": false  },  {    "dex": 764,    "name": "comfey",    "types": [      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 765,    "name": "oranguru",    "types": [      "normal",      "psychic"    ],    "region": "alola",    "obtained": false  },  {    "dex": 766,    "name": "passimian",    "types": [      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 767,    "name": "wimpod",    "types": [      "bug",      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 768,    "name": "golisopod",    "types": [      "bug",      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 769,    "name": "sandygast",    "types": [      "ghost",      "ground"    ],    "region": "alola",    "obtained": false  },  {    "dex": 770,    "name": "palossand",    "types": [      "ghost",      "ground"    ],    "region": "alola",    "obtained": false  },  {    "dex": 771,    "name": "pyukumuku",    "types": [      "water"    ],    "region": "alola",    "obtained": false  },  {    "dex": 772,    "name": "type-null",    "types": [      "normal"    ],    "region": "alola",    "obtained": false  },  {    "dex": 773,    "name": "silvally",    "types": [      "normal"    ],    "region": "alola",    "obtained": false  },  {    "dex": 774,    "name": "minior",    "types": [      "rock",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 775,    "name": "komala",    "types": [      "normal"    ],    "region": "alola",    "obtained": false  },  {    "dex": 776,    "name": "turtonator",    "types": [      "fire",      "dragon"    ],    "region": "alola",    "obtained": false  },  {    "dex": 777,    "name": "togedemaru",    "types": [      "electric",      "steel"    ],    "region": "alola",    "obtained": false  },  {    "dex": 778,    "name": "mimikyu",    "types": [      "ghost",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 779,    "name": "bruxish",    "types": [      "water",      "psychic"    ],    "region": "alola",    "obtained": false  },  {    "dex": 780,    "name": "drampa",    "types": [      "normal",      "dragon"    ],    "region": "alola",    "obtained": false  },  {    "dex": 781,    "name": "dhelmise",    "types": [      "ghost",      "grass"    ],    "region": "alola",    "obtained": false  },  {    "dex": 782,    "name": "jangmo-o",    "types": [      "dragon"    ],    "region": "alola",    "obtained": false  },  {    "dex": 783,    "name": "hakamo-o",    "types": [      "dragon",      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 784,    "name": "kommo-o",    "types": [      "dragon",      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 785,    "name": "tapu-koko",    "types": [      "electric",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 786,    "name": "tapu-lele",    "types": [      "psychic",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 787,    "name": "tapu-bulu",    "types": [      "grass",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 788,    "name": "tapu-fini",    "types": [      "water",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 789,    "name": "cosmog",    "types": [      "psychic"    ],    "region": "alola",    "obtained": false  },  {    "dex": 790,    "name": "cosmoem",    "types": [      "psychic"    ],    "region": "alola",    "obtained": false  },  {    "dex": 791,    "name": "solgaleo",    "types": [      "psychic",      "steel"    ],    "region": "alola",    "obtained": false  },  {    "dex": 792,    "name": "lunala",    "types": [      "psychic",      "ghost"    ],    "region": "alola",    "obtained": false  },  {    "dex": 793,    "name": "nihilego",    "types": [      "rock",      "poison"    ],    "region": "alola",    "obtained": false  },  {    "dex": 794,    "name": "buzzwole",    "types": [      "bug",      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 795,    "name": "pheromosa",    "types": [      "bug",      "fighting"    ],    "region": "alola",    "obtained": false  },  {    "dex": 796,    "name": "xurkitree",    "types": [      "electric"    ],    "region": "alola",    "obtained": false  },  {    "dex": 797,    "name": "celesteela",    "types": [      "steel",      "flying"    ],    "region": "alola",    "obtained": false  },  {    "dex": 798,    "name": "kartana",    "types": [      "grass",      "steel"    ],    "region": "alola",    "obtained": false  },  {    "dex": 799,    "name": "guzzlord",    "types": [      "dark",      "dragon"    ],    "region": "alola",    "obtained": false  },  {    "dex": 800,    "name": "necrozma",    "types": [      "psychic"    ],    "region": "alola",    "obtained": false  },  {    "dex": 801,    "name": "magearna",    "types": [      "steel",      "fairy"    ],    "region": "alola",    "obtained": false  },  {    "dex": 802,    "name": "marshadow",    "types": [      "fighting",      "ghost"    ],    "region": "alola",    "obtained": false  },  {    "dex": 803,    "name": "poipole",    "types": [      "poison"    ],    "region": "alola",    "obtained": false  },  {    "dex": 804,    "name": "naganadel",    "types": [      "poison",      "dragon"    ],    "region": "alola",    "obtained": false  },  {    "dex": 805,    "name": "stakataka",    "types": [      "rock",      "steel"    ],    "region": "alola",    "obtained": false  },  {    "dex": 806,    "name": "blacephalon",    "types": [      "fire",      "ghost"    ],    "region": "alola",    "obtained": false  },  {    "dex": 807,    "name": "zeraora",    "types": [      "electric"    ],    "region": "alola",    "obtained": false  },  {    "dex": 808,    "name": "meltan",    "types": [      "steel"    ],    "region": "alola",    "obtained": false  },  {    "dex": 809,    "name": "melmetal",    "types": [      "steel"    ],    "region": "alola",    "obtained": false  },  {    "dex": 810,    "name": "grookey",    "types": [      "grass"    ],    "region": "galar",    "obtained": false  },  {    "dex": 811,    "name": "thwackey",    "types": [      "grass"    ],    "region": "galar",    "obtained": false  },  {    "dex": 812,    "name": "rillaboom",    "types": [      "grass"    ],    "region": "galar",    "obtained": false  },  {    "dex": 813,    "name": "scorbunny",    "types": [      "fire"    ],    "region": "galar",    "obtained": false  },  {    "dex": 814,    "name": "raboot",    "types": [      "fire"    ],    "region": "galar",    "obtained": false  },  {    "dex": 815,    "name": "cinderace",    "types": [      "fire"    ],    "region": "galar",    "obtained": false  },  {    "dex": 816,    "name": "sobble",    "types": [      "water"    ],    "region": "galar",    "obtained": false  },  {    "dex": 817,    "name": "drizzile",    "types": [      "water"    ],    "region": "galar",    "obtained": false  },  {    "dex": 818,    "name": "inteleon",    "types": [      "water"    ],    "region": "galar",    "obtained": false  },  {    "dex": 819,    "name": "skwovet",    "types": [      "normal"    ],    "region": "galar",    "obtained": false  },  {    "dex": 820,    "name": "greedent",    "types": [      "normal"    ],    "region": "galar",    "obtained": false  },  {    "dex": 821,    "name": "rookidee",    "types": [      "flying"    ],    "region": "galar",    "obtained": false  },  {    "dex": 822,    "name": "corvisquire",    "types": [      "flying"    ],    "region": "galar",    "obtained": false  },  {    "dex": 823,    "name": "corviknight",    "types": [      "flying",      "steel"    ],    "region": "galar",    "obtained": false  },  {    "dex": 824,    "name": "blipbug",    "types": [      "bug"    ],    "region": "galar",    "obtained": false  },  {    "dex": 825,    "name": "dottler",    "types": [      "bug",      "psychic"    ],    "region": "galar",    "obtained": false  },  {    "dex": 826,    "name": "orbeetle",    "types": [      "bug",      "psychic"    ],    "region": "galar",    "obtained": false  },  {    "dex": 827,    "name": "nickit",    "types": [      "dark"    ],    "region": "galar",    "obtained": false  },  {    "dex": 828,    "name": "thievul",    "types": [      "dark"    ],    "region": "galar",    "obtained": false  },  {    "dex": 829,    "name": "gossifleur",    "types": [      "grass"    ],    "region": "galar",    "obtained": false  },  {    "dex": 830,    "name": "eldegoss",    "types": [      "grass"    ],    "region": "galar",    "obtained": false  },  {    "dex": 831,    "name": "wooloo",    "types": [      "normal"    ],    "region": "galar",    "obtained": false  },  {    "dex": 832,    "name": "dubwool",    "types": [      "normal"    ],    "region": "galar",    "obtained": false  },  {    "dex": 833,    "name": "chewtle",    "types": [      "water"    ],    "region": "galar",    "obtained": false  },  {    "dex": 834,    "name": "drednaw",    "types": [      "water",      "rock"    ],    "region": "galar",    "obtained": false  },  {    "dex": 835,    "name": "yamper",    "types": [      "electric"    ],    "region": "galar",    "obtained": false  },  {    "dex": 836,    "name": "boltund",    "types": [      "electric"    ],    "region": "galar",    "obtained": false  },  {    "dex": 837,    "name": "rolycoly",    "types": [      "rock"    ],    "region": "galar",    "obtained": false  },  {    "dex": 838,    "name": "carkol",    "types": [      "rock",      "fire"    ],    "region": "galar",    "obtained": false  },  {    "dex": 839,    "name": "coalossal",    "types": [      "rock",      "fire"    ],    "region": "galar",    "obtained": false  },  {    "dex": 840,    "name": "applin",    "types": [      "grass",      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 841,    "name": "flapple",    "types": [      "grass",      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 842,    "name": "appletun",    "types": [      "grass",      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 843,    "name": "silicobra",    "types": [      "ground"    ],    "region": "galar",    "obtained": false  },  {    "dex": 844,    "name": "sandaconda",    "types": [      "ground"    ],    "region": "galar",    "obtained": false  },  {    "dex": 845,    "name": "cramorant",    "types": [      "flying",      "water"    ],    "region": "galar",    "obtained": false  },  {    "dex": 846,    "name": "arrokuda",    "types": [      "water"    ],    "region": "galar",    "obtained": false  },  {    "dex": 847,    "name": "barraskewda",    "types": [      "water"    ],    "region": "galar",    "obtained": false  },  {    "dex": 848,    "name": "toxel",    "types": [      "electric",      "poison"    ],    "region": "galar",    "obtained": false  },  {    "dex": 849,    "name": "toxtricity",    "types": [      "electric",      "poison"    ],    "region": "galar",    "obtained": false  },  {    "dex": 850,    "name": "sizzlipede",    "types": [      "fire",      "bug"    ],    "region": "galar",    "obtained": false  },  {    "dex": 851,    "name": "centiskorch",    "types": [      "fire",      "bug"    ],    "region": "galar",    "obtained": false  },  {    "dex": 852,    "name": "clobbopus",    "types": [      "fighting"    ],    "region": "galar",    "obtained": false  },  {    "dex": 853,    "name": "grapploct",    "types": [      "fighting"    ],    "region": "galar",    "obtained": false  },  {    "dex": 854,    "name": "sinistea",    "types": [      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 855,    "name": "polteageist",    "types": [      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 856,    "name": "hatenna",    "types": [      "psychic"    ],    "region": "galar",    "obtained": false  },  {    "dex": 857,    "name": "hattrem",    "types": [      "psychic"    ],    "region": "galar",    "obtained": false  },  {    "dex": 858,    "name": "hatterene",    "types": [      "psychic",      "fairy"    ],    "region": "galar",    "obtained": false  },  {    "dex": 859,    "name": "impidimp",    "types": [      "dark",      "fairy"    ],    "region": "galar",    "obtained": false  },  {    "dex": 860,    "name": "morgrem",    "types": [      "dark",      "fairy"    ],    "region": "galar",    "obtained": false  },  {    "dex": 861,    "name": "grimmsnarl",    "types": [      "dark",      "fairy"    ],    "region": "galar",    "obtained": false  },  {    "dex": 862,    "name": "obstagoon",    "types": [      "dark",      "normal"    ],    "region": "galar",    "obtained": false  },  {    "dex": 863,    "name": "perrserker",    "types": [      "steel"    ],    "region": "galar",    "obtained": false  },  {    "dex": 864,    "name": "cursola",    "types": [      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 865,    "name": "sirfetchd",    "types": [      "fighting"    ],    "region": "galar",    "obtained": false  },  {    "dex": 866,    "name": "mr-rime",    "types": [      "ice",      "psychic"    ],    "region": "galar",    "obtained": false  },  {    "dex": 867,    "name": "runerigus",    "types": [      "ground",      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 868,    "name": "milcery",    "types": [      "fairy"    ],    "region": "galar",    "obtained": false  },  {    "dex": 869,    "name": "alcremie",    "types": [      "fairy"    ],    "region": "galar",    "obtained": false  },  {    "dex": 870,    "name": "falinks",    "types": [      "fighting"    ],    "region": "galar",    "obtained": false  },  {    "dex": 871,    "name": "pincurchin",    "types": [      "electric"    ],    "region": "galar",    "obtained": false  },  {    "dex": 872,    "name": "snom",    "types": [      "ice",      "bug"    ],    "region": "galar",    "obtained": false  },  {    "dex": 873,    "name": "frosmoth",    "types": [      "ice",      "bug"    ],    "region": "galar",    "obtained": false  },  {    "dex": 874,    "name": "stonjourner",    "types": [      "rock"    ],    "region": "galar",    "obtained": false  },  {    "dex": 875,    "name": "eiscue",    "types": [      "ice"    ],    "region": "galar",    "obtained": false  },  {    "dex": 876,    "name": "indeedee",    "types": [      "psychic",      "normal"    ],    "region": "galar",    "obtained": false  },  {    "dex": 877,    "name": "morpeko",    "types": [      "electric",      "dark"    ],    "region": "galar",    "obtained": false  },  {    "dex": 878,    "name": "cufant",    "types": [      "steel"    ],    "region": "galar",    "obtained": false  },  {    "dex": 879,    "name": "copperajah",    "types": [      "steel"    ],    "region": "galar",    "obtained": false  },  {    "dex": 880,    "name": "dracozolt",    "types": [      "electric",      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 881,    "name": "arctozolt",    "types": [      "electric",      "ice"    ],    "region": "galar",    "obtained": false  },  {    "dex": 882,    "name": "dracovish",    "types": [      "water",      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 883,    "name": "arctovish",    "types": [      "water",      "ice"    ],    "region": "galar",    "obtained": false  },  {    "dex": 884,    "name": "duraludon",    "types": [      "steel",      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 885,    "name": "dreepy",    "types": [      "dragon",      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 886,    "name": "drakloak",    "types": [      "dragon",      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 887,    "name": "dragapult",    "types": [      "dragon",      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 888,    "name": "zacian",    "types": [      "fairy"    ],    "region": "galar",    "obtained": false  },  {    "dex": 889,    "name": "zamazenta",    "types": [      "fighting"    ],    "region": "galar",    "obtained": false  },  {    "dex": 890,    "name": "eternatus",    "types": [      "poison",      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 891,    "name": "kubfu",    "types": [      "fighting"    ],    "region": "galar",    "obtained": false  },  {    "dex": 892,    "name": "urshifu",    "types": [      "fighting",      "dark"    ],    "region": "galar",    "obtained": false  },  {    "dex": 893,    "name": "zarude",    "types": [      "dark",      "grass"    ],    "region": "galar",    "obtained": false  },  {    "dex": 894,    "name": "regieleki",    "types": [      "electric"    ],    "region": "galar",    "obtained": false  },  {    "dex": 895,    "name": "regidrago",    "types": [      "dragon"    ],    "region": "galar",    "obtained": false  },  {    "dex": 896,    "name": "glastrier",    "types": [      "ice"    ],    "region": "galar",    "obtained": false  },  {    "dex": 897,    "name": "spectrier",    "types": [      "ghost"    ],    "region": "galar",    "obtained": false  },  {    "dex": 898,    "name": "calyrex",    "types": [      "psychic",      "grass"    ],    "region": "galar",    "obtained": false  },  {    "dex": 899,    "name": "wyrdeer",    "types": [      "normal",      "psychic"    ],    "region": "hisui",    "obtained": false  },  {    "dex": 900,    "name": "kleavor",    "types": [      "bug",      "rock"    ],    "region": "hisui",    "obtained": false  },  {    "dex": 901,    "name": "ursaluna",    "types": [      "ground",      "normal"    ],    "region": "hisui",    "obtained": false  },  {    "dex": 902,    "name": "basculegion",    "types": [      "water",      "ghost"    ],    "region": "hisui",    "obtained": false  },  {    "dex": 903,    "name": "sneasler",    "types": [      "fighting",      "poison"    ],    "region": "hisui",    "obtained": false  },  {    "dex": 904,    "name": "overqwil",    "types": [      "dark",      "poison"    ],    "region": "hisui",    "obtained": false  },  {    "dex": 905,    "name": "enamorus",    "types": [      "fairy",      "flying"    ],    "region": "hisui",    "obtained": false  },  {    "dex": 906,    "name": "sprigatito",    "types": [      "grass"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 907,    "name": "floragato",    "types": [      "grass"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 908,    "name": "meowscarada",    "types": [      "grass",      "dark"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 909,    "name": "fuecoco",    "types": [      "fire"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 910,    "name": "crocalor",    "types": [      "fire"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 911,    "name": "skeledirge",    "types": [      "fire",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 912,    "name": "quaxly",    "types": [      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 913,    "name": "quaxwell",    "types": [      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 914,    "name": "quaquaval",    "types": [      "water",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 915,    "name": "lechonk",    "types": [      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 916,    "name": "oinkologne",    "types": [      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 917,    "name": "tarountula",    "types": [      "bug"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 918,    "name": "spidops",    "types": [      "bug"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 919,    "name": "nymble",    "types": [      "bug"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 920,    "name": "lokix",    "types": [      "bug",      "dark"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 921,    "name": "pawmi",    "types": [      "electric"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 922,    "name": "pawmo",    "types": [      "electric",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 923,    "name": "pawmot",    "types": [      "electric",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 924,    "name": "tandemaus",    "types": [      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 925,    "name": "maushold",    "types": [      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 926,    "name": "fidough",    "types": [      "fairy"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 927,    "name": "dachsbun",    "types": [      "fairy"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 928,    "name": "smoliv",    "types": [      "grass",      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 929,    "name": "dolliv",    "types": [      "grass",      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 930,    "name": "arboliva",    "types": [      "grass",      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 931,    "name": "squawkabilly",    "types": [      "normal",      "flying"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 932,    "name": "nacli",    "types": [      "rock"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 933,    "name": "naclstack",    "types": [      "rock"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 934,    "name": "garganacl",    "types": [      "rock"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 935,    "name": "charcadet",    "types": [      "fire"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 936,    "name": "armarouge",    "types": [      "fire",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 937,    "name": "ceruledge",    "types": [      "fire",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 938,    "name": "tadbulb",    "types": [      "electric"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 939,    "name": "bellibolt",    "types": [      "electric"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 940,    "name": "wattrel",    "types": [      "electric",      "flying"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 941,    "name": "kilowattrel",    "types": [      "electric",      "flying"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 942,    "name": "maschiff",    "types": [      "dark"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 943,    "name": "mabosstiff",    "types": [      "dark"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 944,    "name": "shroodle",    "types": [      "poison",      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 945,    "name": "grafaiai",    "types": [      "poison",      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 946,    "name": "bramblin",    "types": [      "grass",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 947,    "name": "brambleghast",    "types": [      "grass",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 948,    "name": "toedscool",    "types": [      "ground",      "grass"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 949,    "name": "toedscruel",    "types": [      "ground",      "grass"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 950,    "name": "klawf",    "types": [      "rock"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 951,    "name": "capsakid",    "types": [      "grass"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 952,    "name": "scovillain",    "types": [      "grass",      "fire"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 953,    "name": "rellor",    "types": [      "bug"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 954,    "name": "rabsca",    "types": [      "bug",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 955,    "name": "flittle",    "types": [      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 956,    "name": "espathra",    "types": [      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 957,    "name": "tinkatink",    "types": [      "fairy",      "steel"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 958,    "name": "tinkatuff",    "types": [      "fairy",      "steel"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 959,    "name": "tinkaton",    "types": [      "fairy",      "steel"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 960,    "name": "wiglett",    "types": [      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 961,    "name": "wugtrio",    "types": [      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 962,    "name": "bombirdier",    "types": [      "flying",      "dark"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 963,    "name": "finizen",    "types": [      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 964,    "name": "palafin",    "types": [      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 965,    "name": "varoom",    "types": [      "steel",      "poison"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 966,    "name": "revavroom",    "types": [      "steel",      "poison"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 967,    "name": "cyclizar",    "types": [      "dragon",      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 968,    "name": "orthworm",    "types": [      "steel"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 969,    "name": "glimmet",    "types": [      "rock",      "poison"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 970,    "name": "glimmora",    "types": [      "rock",      "poison"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 971,    "name": "greavard",    "types": [      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 972,    "name": "houndstone",    "types": [      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 973,    "name": "flamigo",    "types": [      "flying",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 974,    "name": "cetoddle",    "types": [      "ice"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 975,    "name": "cetitan",    "types": [      "ice"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 976,    "name": "veluza",    "types": [      "water",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 977,    "name": "dondozo",    "types": [      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 978,    "name": "tatsugiri",    "types": [      "dragon",      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 979,    "name": "annihilape",    "types": [      "fighting",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 980,    "name": "clodsire",    "types": [      "poison",      "ground"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 981,    "name": "farigiraf",    "types": [      "normal",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 982,    "name": "dudunsparce",    "types": [      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 983,    "name": "kingambit",    "types": [      "dark",      "steel"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 984,    "name": "great-tusk",    "types": [      "ground",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 985,    "name": "scream-tail",    "types": [      "fairy",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 986,    "name": "brute-bonnet",    "types": [      "grass",      "dark"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 987,    "name": "flutter-mane",    "types": [      "ghost",      "fairy"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 988,    "name": "slither-wing",    "types": [      "bug",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 989,    "name": "sandy-shocks",    "types": [      "electric",      "ground"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 990,    "name": "iron-treads",    "types": [      "ground",      "steel"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 991,    "name": "iron-bundle",    "types": [      "ice",      "water"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 992,    "name": "iron-hands",    "types": [      "fighting",      "electric"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 993,    "name": "iron-jugulis",    "types": [      "dark",      "flying"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 994,    "name": "iron-moth",    "types": [      "fire",      "poison"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 995,    "name": "iron-thorns",    "types": [      "rock",      "electric"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 996,    "name": "frigibax",    "types": [      "dragon",      "ice"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 997,    "name": "arctibax",    "types": [      "dragon",      "ice"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 998,    "name": "baxcalibur",    "types": [      "dragon",      "ice"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 999,    "name": "gimmighoul",    "types": [      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1000,    "name": "gholdengo",    "types": [      "steel",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1001,    "name": "wo-chien",    "types": [      "dark",      "grass"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1002,    "name": "chien-pao",    "types": [      "dark",      "ice"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1003,    "name": "ting-lu",    "types": [      "dark",      "ground"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1004,    "name": "chi-yu",    "types": [      "dark",      "fire"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1005,    "name": "roaring-moon",    "types": [      "dragon",      "dark"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1006,    "name": "iron-valiant",    "types": [      "fairy",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1007,    "name": "koraidon",    "types": [      "fighting",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1008,    "name": "miraidon",    "types": [      "electric",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1009,    "name": "walking-wake",    "types": [      "water",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1010,    "name": "iron-leaves",    "types": [      "grass",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1011,    "name": "dipplin",    "types": [      "grass",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1012,    "name": "poltchageist",    "types": [      "grass",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1013,    "name": "sinistcha",    "types": [      "grass",      "ghost"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1014,    "name": "okidogi",    "types": [      "poison",      "fighting"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1015,    "name": "munkidori",    "types": [      "poison",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1016,    "name": "fezandipiti",    "types": [      "poison",      "fairy"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1017,    "name": "ogerpon",    "types": [      "grass"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1018,    "name": "archaludon",    "types": [      "steel",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1019,    "name": "hydrapple",    "types": [      "grass",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1020,    "name": "gouging-fire",    "types": [      "fire",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1021,    "name": "raging-bolt",    "types": [      "electric",      "dragon"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1022,    "name": "iron-boulder",    "types": [      "rock",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1023,    "name": "iron-crown",    "types": [      "steel",      "psychic"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1024,    "name": "terapagos",    "types": [      "normal"    ],    "region": "paldea",    "obtained": false  },  {    "dex": 1025,    "name": "pecharunt",    "types": [      "poison",      "ghost"    ],    "region": "paldea",    "obtained": false  }]'}getData(){return JSON.parse(this.data)}};e.\u0275fac=function(i){return new(i||e)},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();var mn=(()=>{let e=class e{constructor(n,i){this.http=n,this.defaultData=i,this._baseUrl="https://quickserve-syter6.azurewebsites.net",this._appUuid="7c8613b8-3fa7-42d4-964a-bd7097779e71",this.httpOptions={headers:new te({"Content-Type":"application/json"})}}write(n){return j(this,null,function*(){let i=this._baseUrl+"/data/"+this._appUuid;yield An(this.http.put(i,JSON.stringify(n),this.httpOptions))})}toggleObtained(n){return j(this,null,function*(){let i=yield this.retrieve(),o=i.find(a=>a.dex===n);o!=null&&(o.obtained=!o.obtained,yield this.write(JSON.stringify(i,null,2)))})}retrieve(){return j(this,null,function*(){let n=this._baseUrl+"/data/"+this._appUuid,i;try{let o=JSON.stringify(yield An(this.http.get(n)));i=JSON.parse(o)}catch{return yield this.write(JSON.stringify(this.defaultData.getData())),this.retrieve()}return i.map(o=>({dex:o.dex,name:o.name,obtained:o.obtained,types:o.types,region:o.region}))})}};e.\u0275fac=function(i){return new(i||e)(E(rt),E(Yo))},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();var ea=(()=>{let e=class e{constructor(n){this.dataService=n,this.onRefresh=new L}toggleObtained(){return j(this,null,function*(){yield this.dataService.toggleObtained(this.data.dex),yield this.onRefresh.emit()})}get imageUrl(){return"../../../assets/images/pokemon/"+this.data.dex+".png"}};e.\u0275fac=function(i){return new(i||e)(T(mn))},e.\u0275cmp=Z({type:e,selectors:[["app-pokemon"]],inputs:{data:"data"},outputs:{onRefresh:"onRefresh"},standalone:!0,features:[J],decls:7,vars:7,consts:[[1,"pokemon",3,"click"],["alt","","width","90","height","90","loading","lazy",1,"pokemon_img",3,"ngSrc"],["id","pokemon_name"],["id","pokemon_num"]],template:function(i,o){i&1&&(y(0,"div",0),v("click",function(){return o.toggleObtained()}),Ne(1,"img",1),y(2,"p",2),w(3),jr(4,"titlecase"),b(),y(5,"p",3),w(6),b()()),i&2&&(x("obtained",o.data.obtained),m(),Ft("ngSrc",o.imageUrl),m(2),Rr(Vr(4,5,o.data.name)),m(3),Tr("(#",o.data.dex,")"))},dependencies:[Br,qr],styles:[".pokemon[_ngcontent-%COMP%]{width:100px;height:135px;border-radius:3px;margin:5px;display:inline-block;cursor:pointer;box-shadow:1px 1px 10px gray;opacity:.35}.obtained[_ngcontent-%COMP%]{opacity:1}.pokemon_img[_ngcontent-%COMP%]{width:90px;height:90px;margin:5px}.pokemon[_ngcontent-%COMP%]   #pokemon_name[_ngcontent-%COMP%]{margin:-5px;text-align:center}.pokemon[_ngcontent-%COMP%]   #pokemon_num[_ngcontent-%COMP%]{margin:4px;text-align:center;font-size:10px}"]});let t=e;return t})();function gd(t,e){if(t&1){let r=Ar();y(0,"app-pokemon",2),v("onRefresh",function(){dr(r);let i=Mr();return cr(i.refresh())}),b()}if(t&2){let r=e.$implicit;Pe("data",r)}}var ta=(()=>{let e=class e{constructor(){this.onRefresh=new L}refresh(){this.onRefresh.emit()}};e.\u0275fac=function(i){return new(i||e)},e.\u0275cmp=Z({type:e,selectors:[["app-pokemon-list"]],inputs:{pokemon:"pokemon"},outputs:{onRefresh:"onRefresh"},standalone:!0,features:[J],decls:2,vars:1,consts:[[1,"pokemon_list"],[3,"data","onRefresh",4,"ngFor","ngForOf"],[3,"onRefresh","data"]],template:function(i,o){i&1&&(y(0,"div",0),Er(1,gd,1,1,"app-pokemon",1),b()),i&2&&(m(),Pe("ngForOf",o.pokemon))},dependencies:[ea,et,zr],styles:['.pokemon_list[_ngcontent-%COMP%]{margin-bottom:80px;display:flex;flex-wrap:wrap;justify-content:center}@media (max-width: 400px){.pokemon_list[_ngcontent-%COMP%]:after{content:"";display:block;height:50px;width:100%}}']});let t=e;return t})();var md=["*"],yn;function yd(){if(yn===void 0&&(yn=null,typeof window<"u")){let t=window;t.trustedTypes!==void 0&&(yn=t.trustedTypes.createPolicy("angular#components",{createHTML:e=>e}))}return yn}function Et(t){return yd()?.createHTML(t)||t}function na(t){return Error(`Unable to find icon with the name "${t}"`)}function bd(){return Error("Could not find HttpClient provider for use with Angular Material icons. Please include the HttpClientModule from @angular/common/http in your app imports.")}function ia(t){return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL via Angular's DomSanitizer. Attempted URL was "${t}".`)}function ra(t){return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by Angular's DomSanitizer. Attempted literal was "${t}".`)}var ne=class{constructor(e,r,n){this.url=e,this.svgText=r,this.options=n}},vd=(()=>{let e=class e{constructor(n,i,o,a){this._httpClient=n,this._sanitizer=i,this._errorHandler=a,this._svgIconConfigs=new Map,this._iconSetConfigs=new Map,this._cachedIconsByUrl=new Map,this._inProgressUrlFetches=new Map,this._fontCssClassesByAlias=new Map,this._resolvers=[],this._defaultFontSetClass=["material-icons","mat-ligature-font"],this._document=o}addSvgIcon(n,i,o){return this.addSvgIconInNamespace("",n,i,o)}addSvgIconLiteral(n,i,o){return this.addSvgIconLiteralInNamespace("",n,i,o)}addSvgIconInNamespace(n,i,o,a){return this._addSvgIconConfig(n,i,new ne(o,null,a))}addSvgIconResolver(n){return this._resolvers.push(n),this}addSvgIconLiteralInNamespace(n,i,o,a){let s=this._sanitizer.sanitize($.HTML,o);if(!s)throw ra(o);let d=Et(s);return this._addSvgIconConfig(n,i,new ne("",d,a))}addSvgIconSet(n,i){return this.addSvgIconSetInNamespace("",n,i)}addSvgIconSetLiteral(n,i){return this.addSvgIconSetLiteralInNamespace("",n,i)}addSvgIconSetInNamespace(n,i,o){return this._addSvgIconSetConfig(n,new ne(i,null,o))}addSvgIconSetLiteralInNamespace(n,i,o){let a=this._sanitizer.sanitize($.HTML,i);if(!a)throw ra(i);let s=Et(a);return this._addSvgIconSetConfig(n,new ne("",s,o))}registerFontClassAlias(n,i=n){return this._fontCssClassesByAlias.set(n,i),this}classNameForFontAlias(n){return this._fontCssClassesByAlias.get(n)||n}setDefaultFontSetClass(...n){return this._defaultFontSetClass=n,this}getDefaultFontSetClass(){return this._defaultFontSetClass}getSvgIconFromUrl(n){let i=this._sanitizer.sanitize($.RESOURCE_URL,n);if(!i)throw ia(n);let o=this._cachedIconsByUrl.get(i);return o?p(bn(o)):this._loadSvgIconFromConfig(new ne(n,null)).pipe(P(a=>this._cachedIconsByUrl.set(i,a)),C(a=>bn(a)))}getNamedSvgIcon(n,i=""){let o=oa(i,n),a=this._svgIconConfigs.get(o);if(a)return this._getSvgFromConfig(a);if(a=this._getIconConfigFromResolvers(i,n),a)return this._svgIconConfigs.set(o,a),this._getSvgFromConfig(a);let s=this._iconSetConfigs.get(i);return s?this._getSvgFromIconSetConfigs(n,s):be(na(o))}ngOnDestroy(){this._resolvers=[],this._svgIconConfigs.clear(),this._iconSetConfigs.clear(),this._cachedIconsByUrl.clear()}_getSvgFromConfig(n){return n.svgText?p(bn(this._svgElementFromConfig(n))):this._loadSvgIconFromConfig(n).pipe(C(i=>bn(i)))}_getSvgFromIconSetConfigs(n,i){let o=this._extractIconWithNameFromAnySet(n,i);if(o)return p(o);let a=i.filter(s=>!s.svgText).map(s=>this._loadSvgIconSetFromConfig(s).pipe(le(d=>{let c=`Loading icon set URL: ${this._sanitizer.sanitize($.RESOURCE_URL,s.url)} failed: ${d.message}`;return this._errorHandler.handleError(new Error(c)),p(null)})));return Dt(a).pipe(C(()=>{let s=this._extractIconWithNameFromAnySet(n,i);if(!s)throw na(n);return s}))}_extractIconWithNameFromAnySet(n,i){for(let o=i.length-1;o>=0;o--){let a=i[o];if(a.svgText&&a.svgText.toString().indexOf(n)>-1){let s=this._svgElementFromConfig(a),d=this._extractSvgIconFromSet(s,n,a.options);if(d)return d}}return null}_loadSvgIconFromConfig(n){return this._fetchIcon(n).pipe(P(i=>n.svgText=i),C(()=>this._svgElementFromConfig(n)))}_loadSvgIconSetFromConfig(n){return n.svgText?p(null):this._fetchIcon(n).pipe(P(i=>n.svgText=i))}_extractSvgIconFromSet(n,i,o){let a=n.querySelector(`[id="${i}"]`);if(!a)return null;let s=a.cloneNode(!0);if(s.removeAttribute("id"),s.nodeName.toLowerCase()==="svg")return this._setSvgAttributes(s,o);if(s.nodeName.toLowerCase()==="symbol")return this._setSvgAttributes(this._toSvgElement(s),o);let d=this._svgElementFromString(Et("<svg></svg>"));return d.appendChild(s),this._setSvgAttributes(d,o)}_svgElementFromString(n){let i=this._document.createElement("DIV");i.innerHTML=n;let o=i.querySelector("svg");if(!o)throw Error("<svg> tag not found");return o}_toSvgElement(n){let i=this._svgElementFromString(Et("<svg></svg>")),o=n.attributes;for(let a=0;a<o.length;a++){let{name:s,value:d}=o[a];s!=="id"&&i.setAttribute(s,d)}for(let a=0;a<n.childNodes.length;a++)n.childNodes[a].nodeType===this._document.ELEMENT_NODE&&i.appendChild(n.childNodes[a].cloneNode(!0));return i}_setSvgAttributes(n,i){return n.setAttribute("fit",""),n.setAttribute("height","100%"),n.setAttribute("width","100%"),n.setAttribute("preserveAspectRatio","xMidYMid meet"),n.setAttribute("focusable","false"),i&&i.viewBox&&n.setAttribute("viewBox",i.viewBox),n}_fetchIcon(n){let{url:i,options:o}=n,a=o?.withCredentials??!1;if(!this._httpClient)throw bd();if(i==null)throw Error(`Cannot fetch icon from URL "${i}".`);let s=this._sanitizer.sanitize($.RESOURCE_URL,i);if(!s)throw ia(i);let d=this._inProgressUrlFetches.get(s);if(d)return d;let l=this._httpClient.get(s,{responseType:"text",withCredentials:a}).pipe(C(c=>Et(c)),ce(()=>this._inProgressUrlFetches.delete(s)),rr());return this._inProgressUrlFetches.set(s,l),l}_addSvgIconConfig(n,i,o){return this._svgIconConfigs.set(oa(n,i),o),this}_addSvgIconSetConfig(n,i){let o=this._iconSetConfigs.get(n);return o?o.push(i):this._iconSetConfigs.set(n,[i]),this}_svgElementFromConfig(n){if(!n.svgElement){let i=this._svgElementFromString(n.svgText);this._setSvgAttributes(i,n.options),n.svgElement=i}return n.svgElement}_getIconConfigFromResolvers(n,i){for(let o=0;o<this._resolvers.length;o++){let a=this._resolvers[o](i,n);if(a)return xd(a)?new ne(a.url,null,a.options):new ne(a,null)}}};e.\u0275fac=function(i){return new(i||e)(E(rt,8),E(ti),E(N,8),E(ke))},e.\u0275prov=k({token:e,factory:e.\u0275fac,providedIn:"root"});let t=e;return t})();function bn(t){return t.cloneNode(!0)}function oa(t,e){return t+":"+e}function xd(t){return!!(t.url&&t.options)}var wd=new I("MAT_ICON_DEFAULT_OPTIONS"),_d=new I("mat-icon-location",{providedIn:"root",factory:Cd});function Cd(){let t=g(N),e=t?t.location:null;return{getPathname:()=>e?e.pathname+e.search:""}}var aa=["clip-path","color-profile","src","cursor","fill","filter","marker","marker-start","marker-mid","marker-end","mask","stroke"],kd=aa.map(t=>`[${t}]`).join(", "),Ed=/^url\(['"]?#(.*?)['"]?\)$/,sa=(()=>{let e=class e{get color(){return this._color||this._defaultColor}set color(n){this._color=n}get svgIcon(){return this._svgIcon}set svgIcon(n){n!==this._svgIcon&&(n?this._updateSvgIcon(n):this._svgIcon&&this._clearSvgElement(),this._svgIcon=n)}get fontSet(){return this._fontSet}set fontSet(n){let i=this._cleanupFontValue(n);i!==this._fontSet&&(this._fontSet=i,this._updateFontIconClasses())}get fontIcon(){return this._fontIcon}set fontIcon(n){let i=this._cleanupFontValue(n);i!==this._fontIcon&&(this._fontIcon=i,this._updateFontIconClasses())}constructor(n,i,o,a,s,d){this._elementRef=n,this._iconRegistry=i,this._location=a,this._errorHandler=s,this.inline=!1,this._previousFontSetClass=[],this._currentIconFetch=It.EMPTY,d&&(d.color&&(this.color=this._defaultColor=d.color),d.fontSet&&(this.fontSet=d.fontSet)),o||n.nativeElement.setAttribute("aria-hidden","true")}_splitIconName(n){if(!n)return["",""];let i=n.split(":");switch(i.length){case 1:return["",i[0]];case 2:return i;default:throw Error(`Invalid icon name: "${n}"`)}}ngOnInit(){this._updateFontIconClasses()}ngAfterViewChecked(){let n=this._elementsWithExternalReferences;if(n&&n.size){let i=this._location.getPathname();i!==this._previousPath&&(this._previousPath=i,this._prependPathToReferences(i))}}ngOnDestroy(){this._currentIconFetch.unsubscribe(),this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear()}_usingFontIcon(){return!this.svgIcon}_setSvgElement(n){this._clearSvgElement();let i=this._location.getPathname();this._previousPath=i,this._cacheChildrenWithExternalReferences(n),this._prependPathToReferences(i),this._elementRef.nativeElement.appendChild(n)}_clearSvgElement(){let n=this._elementRef.nativeElement,i=n.childNodes.length;for(this._elementsWithExternalReferences&&this._elementsWithExternalReferences.clear();i--;){let o=n.childNodes[i];(o.nodeType!==1||o.nodeName.toLowerCase()==="svg")&&o.remove()}}_updateFontIconClasses(){if(!this._usingFontIcon())return;let n=this._elementRef.nativeElement,i=(this.fontSet?this._iconRegistry.classNameForFontAlias(this.fontSet).split(/ +/):this._iconRegistry.getDefaultFontSetClass()).filter(o=>o.length>0);this._previousFontSetClass.forEach(o=>n.classList.remove(o)),i.forEach(o=>n.classList.add(o)),this._previousFontSetClass=i,this.fontIcon!==this._previousFontIconClass&&!i.includes("mat-ligature-font")&&(this._previousFontIconClass&&n.classList.remove(this._previousFontIconClass),this.fontIcon&&n.classList.add(this.fontIcon),this._previousFontIconClass=this.fontIcon)}_cleanupFontValue(n){return typeof n=="string"?n.trim().split(" ")[0]:n}_prependPathToReferences(n){let i=this._elementsWithExternalReferences;i&&i.forEach((o,a)=>{o.forEach(s=>{a.setAttribute(s.name,`url('${n}#${s.value}')`)})})}_cacheChildrenWithExternalReferences(n){let i=n.querySelectorAll(kd),o=this._elementsWithExternalReferences=this._elementsWithExternalReferences||new Map;for(let a=0;a<i.length;a++)aa.forEach(s=>{let d=i[a],l=d.getAttribute(s),c=l?l.match(Ed):null;if(c){let h=o.get(d);h||(h=[],o.set(d,h)),h.push({name:s,value:c[1]})}})}_updateSvgIcon(n){if(this._svgNamespace=null,this._svgName=null,this._currentIconFetch.unsubscribe(),n){let[i,o]=this._splitIconName(n);i&&(this._svgNamespace=i),o&&(this._svgName=o),this._currentIconFetch=this._iconRegistry.getNamedSvgIcon(o,i).pipe(de(1)).subscribe(a=>this._setSvgElement(a),a=>{let s=`Error retrieving icon ${i}:${o}! ${a.message}`;this._errorHandler.handleError(new Error(s))})}}};e.\u0275fac=function(i){return new(i||e)(T(Re),T(vd),Pn("aria-hidden"),T(_d),T(ke),T(wd,8))},e.\u0275cmp=Z({type:e,selectors:[["mat-icon"]],hostAttrs:["role","img",1,"mat-icon","notranslate"],hostVars:10,hostBindings:function(i,o){i&2&&(Nt("data-mat-icon-type",o._usingFontIcon()?"font":"svg")("data-mat-icon-name",o._svgName||o.fontIcon)("data-mat-icon-namespace",o._svgNamespace||o.fontSet)("fontIcon",o._usingFontIcon()?o.fontIcon:null),Sr(o.color?"mat-"+o.color:""),x("mat-icon-inline",o.inline)("mat-icon-no-color",o.color!=="primary"&&o.color!=="accent"&&o.color!=="warn"))},inputs:{color:"color",inline:[we.HasDecoratorInputTransform,"inline","inline",Qe],svgIcon:"svgIcon",fontSet:"fontSet",fontIcon:"fontIcon"},exportAs:["matIcon"],standalone:!0,features:[Ln,J],ngContentSelectors:md,decls:1,vars:0,template:function(i,o){i&1&&(Ir(),Dr(0))},styles:["mat-icon,mat-icon.mat-primary,mat-icon.mat-accent,mat-icon.mat-warn{color:var(--mat-icon-color)}.mat-icon{-webkit-user-select:none;user-select:none;background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px;overflow:hidden}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}.mat-icon.mat-ligature-font[fontIcon]::before{content:attr(fontIcon)}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}"],encapsulation:2,changeDetection:0});let t=e;return t})();var ga=(()=>{let e=class e{constructor(n,i){this._renderer=n,this._elementRef=i,this.onChange=o=>{},this.onTouched=()=>{}}setProperty(n,i){this._renderer.setProperty(this._elementRef.nativeElement,n,i)}registerOnTouched(n){this.onTouched=n}registerOnChange(n){this.onChange=n}setDisabledState(n){this.setProperty("disabled",n)}};e.\u0275fac=function(i){return new(i||e)(T(Ot),T(Re))},e.\u0275dir=he({type:e});let t=e;return t})(),Sd=(()=>{let e=class e extends ga{};e.\u0275fac=(()=>{let n;return function(o){return(n||(n=Ze(e)))(o||e)}})(),e.\u0275dir=he({type:e,features:[Xe]});let t=e;return t})(),ma=new I("");var Ad={provide:ma,useExisting:Tn(()=>_n),multi:!0};function Md(){let t=Fe()?Fe().getUserAgent():"";return/android (\d+)/.test(t.toLowerCase())}var Id=new I(""),_n=(()=>{let e=class e extends ga{constructor(n,i,o){super(n,i),this._compositionMode=o,this._composing=!1,this._compositionMode==null&&(this._compositionMode=!Md())}writeValue(n){let i=n??"";this.setProperty("value",i)}_handleInput(n){(!this._compositionMode||this._compositionMode&&!this._composing)&&this.onChange(n)}_compositionStart(){this._composing=!0}_compositionEnd(n){this._composing=!1,this._compositionMode&&this.onChange(n)}};e.\u0275fac=function(i){return new(i||e)(T(Ot),T(Re),T(Id,8))},e.\u0275dir=he({type:e,selectors:[["input","formControlName","",3,"type","checkbox"],["textarea","formControlName",""],["input","formControl","",3,"type","checkbox"],["textarea","formControl",""],["input","ngModel","",3,"type","checkbox"],["textarea","ngModel",""],["","ngDefaultControl",""]],hostBindings:function(i,o){i&1&&v("input",function(s){return o._handleInput(s.target.value)})("blur",function(){return o.onTouched()})("compositionstart",function(){return o._compositionStart()})("compositionend",function(s){return o._compositionEnd(s.target.value)})},features:[$n([Ad]),Xe]});let t=e;return t})();var Dd=new I(""),Rd=new I("");function ya(t){return t!=null}function ba(t){return Vt(t)?V(t):t}function va(t){let e={};return t.forEach(r=>{e=r!=null?u(u({},e),r):e}),Object.keys(e).length===0?null:e}function xa(t,e){return e.map(r=>r(t))}function Td(t){return!t.validate}function wa(t){return t.map(e=>Td(e)?e:r=>e.validate(r))}function Od(t){if(!t)return null;let e=t.filter(ya);return e.length==0?null:function(r){return va(xa(r,e))}}function _a(t){return t!=null?Od(wa(t)):null}function Pd(t){if(!t)return null;let e=t.filter(ya);return e.length==0?null:function(r){let n=xa(r,e).map(ba);return Dt(n).pipe(C(va))}}function Ca(t){return t!=null?Pd(wa(t)):null}function la(t,e){return t===null?[e]:Array.isArray(t)?[...t,e]:[t,e]}function Nd(t){return t._rawValidators}function Fd(t){return t._rawAsyncValidators}function Bi(t){return t?Array.isArray(t)?t:[t]:[]}function xn(t,e){return Array.isArray(t)?t.includes(e):t===e}function da(t,e){let r=Bi(e);return Bi(t).forEach(i=>{xn(r,i)||r.push(i)}),r}function ca(t,e){return Bi(e).filter(r=>!xn(t,r))}var wn=class{constructor(){this._rawValidators=[],this._rawAsyncValidators=[],this._onDestroyCallbacks=[]}get value(){return this.control?this.control.value:null}get valid(){return this.control?this.control.valid:null}get invalid(){return this.control?this.control.invalid:null}get pending(){return this.control?this.control.pending:null}get disabled(){return this.control?this.control.disabled:null}get enabled(){return this.control?this.control.enabled:null}get errors(){return this.control?this.control.errors:null}get pristine(){return this.control?this.control.pristine:null}get dirty(){return this.control?this.control.dirty:null}get touched(){return this.control?this.control.touched:null}get status(){return this.control?this.control.status:null}get untouched(){return this.control?this.control.untouched:null}get statusChanges(){return this.control?this.control.statusChanges:null}get valueChanges(){return this.control?this.control.valueChanges:null}get path(){return null}_setValidators(e){this._rawValidators=e||[],this._composedValidatorFn=_a(this._rawValidators)}_setAsyncValidators(e){this._rawAsyncValidators=e||[],this._composedAsyncValidatorFn=Ca(this._rawAsyncValidators)}get validator(){return this._composedValidatorFn||null}get asyncValidator(){return this._composedAsyncValidatorFn||null}_registerOnDestroy(e){this._onDestroyCallbacks.push(e)}_invokeOnDestroyCallbacks(){this._onDestroyCallbacks.forEach(e=>e()),this._onDestroyCallbacks=[]}reset(e=void 0){this.control&&this.control.reset(e)}hasError(e,r){return this.control?this.control.hasError(e,r):!1}getError(e,r){return this.control?this.control.getError(e,r):null}},Gi=class extends wn{get formDirective(){return null}get path(){return null}},Mt=class extends wn{constructor(){super(...arguments),this._parent=null,this.name=null,this.valueAccessor=null}},qi=class{constructor(e){this._cd=e}get isTouched(){return!!this._cd?.control?.touched}get isUntouched(){return!!this._cd?.control?.untouched}get isPristine(){return!!this._cd?.control?.pristine}get isDirty(){return!!this._cd?.control?.dirty}get isValid(){return!!this._cd?.control?.valid}get isInvalid(){return!!this._cd?.control?.invalid}get isPending(){return!!this._cd?.control?.pending}get isSubmitted(){return!!this._cd?.submitted}},jd={"[class.ng-untouched]":"isUntouched","[class.ng-touched]":"isTouched","[class.ng-pristine]":"isPristine","[class.ng-dirty]":"isDirty","[class.ng-valid]":"isValid","[class.ng-invalid]":"isInvalid","[class.ng-pending]":"isPending"},ph=O(u({},jd),{"[class.ng-submitted]":"isSubmitted"}),ka=(()=>{let e=class e extends qi{constructor(n){super(n)}};e.\u0275fac=function(i){return new(i||e)(T(Mt,2))},e.\u0275dir=he({type:e,selectors:[["","formControlName",""],["","ngModel",""],["","formControl",""]],hostVars:14,hostBindings:function(i,o){i&2&&x("ng-untouched",o.isUntouched)("ng-touched",o.isTouched)("ng-pristine",o.isPristine)("ng-dirty",o.isDirty)("ng-valid",o.isValid)("ng-invalid",o.isInvalid)("ng-pending",o.isPending)},features:[Xe]});let t=e;return t})();var St="VALID",vn="INVALID",He="PENDING",At="DISABLED";function Vd(t){return(Cn(t)?t.validators:t)||null}function Ud(t){return Array.isArray(t)?_a(t):t||null}function Ld(t,e){return(Cn(e)?e.asyncValidators:t)||null}function $d(t){return Array.isArray(t)?Ca(t):t||null}function Cn(t){return t!=null&&!Array.isArray(t)&&typeof t=="object"}var Wi=class{constructor(e,r){this._pendingDirty=!1,this._hasOwnPendingAsyncValidator=!1,this._pendingTouched=!1,this._onCollectionChange=()=>{},this._parent=null,this.pristine=!0,this.touched=!1,this._onDisabledChange=[],this._assignValidators(e),this._assignAsyncValidators(r)}get validator(){return this._composedValidatorFn}set validator(e){this._rawValidators=this._composedValidatorFn=e}get asyncValidator(){return this._composedAsyncValidatorFn}set asyncValidator(e){this._rawAsyncValidators=this._composedAsyncValidatorFn=e}get parent(){return this._parent}get valid(){return this.status===St}get invalid(){return this.status===vn}get pending(){return this.status==He}get disabled(){return this.status===At}get enabled(){return this.status!==At}get dirty(){return!this.pristine}get untouched(){return!this.touched}get updateOn(){return this._updateOn?this._updateOn:this.parent?this.parent.updateOn:"change"}setValidators(e){this._assignValidators(e)}setAsyncValidators(e){this._assignAsyncValidators(e)}addValidators(e){this.setValidators(da(e,this._rawValidators))}addAsyncValidators(e){this.setAsyncValidators(da(e,this._rawAsyncValidators))}removeValidators(e){this.setValidators(ca(e,this._rawValidators))}removeAsyncValidators(e){this.setAsyncValidators(ca(e,this._rawAsyncValidators))}hasValidator(e){return xn(this._rawValidators,e)}hasAsyncValidator(e){return xn(this._rawAsyncValidators,e)}clearValidators(){this.validator=null}clearAsyncValidators(){this.asyncValidator=null}markAsTouched(e={}){this.touched=!0,this._parent&&!e.onlySelf&&this._parent.markAsTouched(e)}markAllAsTouched(){this.markAsTouched({onlySelf:!0}),this._forEachChild(e=>e.markAllAsTouched())}markAsUntouched(e={}){this.touched=!1,this._pendingTouched=!1,this._forEachChild(r=>{r.markAsUntouched({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}markAsDirty(e={}){this.pristine=!1,this._parent&&!e.onlySelf&&this._parent.markAsDirty(e)}markAsPristine(e={}){this.pristine=!0,this._pendingDirty=!1,this._forEachChild(r=>{r.markAsPristine({onlySelf:!0})}),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}markAsPending(e={}){this.status=He,e.emitEvent!==!1&&this.statusChanges.emit(this.status),this._parent&&!e.onlySelf&&this._parent.markAsPending(e)}disable(e={}){let r=this._parentMarkedDirty(e.onlySelf);this.status=At,this.errors=null,this._forEachChild(n=>{n.disable(O(u({},e),{onlySelf:!0}))}),this._updateValue(),e.emitEvent!==!1&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._updateAncestors(O(u({},e),{skipPristineCheck:r})),this._onDisabledChange.forEach(n=>n(!0))}enable(e={}){let r=this._parentMarkedDirty(e.onlySelf);this.status=St,this._forEachChild(n=>{n.enable(O(u({},e),{onlySelf:!0}))}),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent}),this._updateAncestors(O(u({},e),{skipPristineCheck:r})),this._onDisabledChange.forEach(n=>n(!1))}_updateAncestors(e){this._parent&&!e.onlySelf&&(this._parent.updateValueAndValidity(e),e.skipPristineCheck||this._parent._updatePristine(),this._parent._updateTouched())}setParent(e){this._parent=e}getRawValue(){return this.value}updateValueAndValidity(e={}){this._setInitialStatus(),this._updateValue(),this.enabled&&(this._cancelExistingSubscription(),this.errors=this._runValidator(),this.status=this._calculateStatus(),(this.status===St||this.status===He)&&this._runAsyncValidator(e.emitEvent)),e.emitEvent!==!1&&(this.valueChanges.emit(this.value),this.statusChanges.emit(this.status)),this._parent&&!e.onlySelf&&this._parent.updateValueAndValidity(e)}_updateTreeValidity(e={emitEvent:!0}){this._forEachChild(r=>r._updateTreeValidity(e)),this.updateValueAndValidity({onlySelf:!0,emitEvent:e.emitEvent})}_setInitialStatus(){this.status=this._allControlsDisabled()?At:St}_runValidator(){return this.validator?this.validator(this):null}_runAsyncValidator(e){if(this.asyncValidator){this.status=He,this._hasOwnPendingAsyncValidator=!0;let r=ba(this.asyncValidator(this));this._asyncValidationSubscription=r.subscribe(n=>{this._hasOwnPendingAsyncValidator=!1,this.setErrors(n,{emitEvent:e})})}}_cancelExistingSubscription(){this._asyncValidationSubscription&&(this._asyncValidationSubscription.unsubscribe(),this._hasOwnPendingAsyncValidator=!1)}setErrors(e,r={}){this.errors=e,this._updateControlsErrors(r.emitEvent!==!1)}get(e){let r=e;return r==null||(Array.isArray(r)||(r=r.split(".")),r.length===0)?null:r.reduce((n,i)=>n&&n._find(i),this)}getError(e,r){let n=r?this.get(r):this;return n&&n.errors?n.errors[e]:null}hasError(e,r){return!!this.getError(e,r)}get root(){let e=this;for(;e._parent;)e=e._parent;return e}_updateControlsErrors(e){this.status=this._calculateStatus(),e&&this.statusChanges.emit(this.status),this._parent&&this._parent._updateControlsErrors(e)}_initObservables(){this.valueChanges=new L,this.statusChanges=new L}_calculateStatus(){return this._allControlsDisabled()?At:this.errors?vn:this._hasOwnPendingAsyncValidator||this._anyControlsHaveStatus(He)?He:this._anyControlsHaveStatus(vn)?vn:St}_anyControlsHaveStatus(e){return this._anyControls(r=>r.status===e)}_anyControlsDirty(){return this._anyControls(e=>e.dirty)}_anyControlsTouched(){return this._anyControls(e=>e.touched)}_updatePristine(e={}){this.pristine=!this._anyControlsDirty(),this._parent&&!e.onlySelf&&this._parent._updatePristine(e)}_updateTouched(e={}){this.touched=this._anyControlsTouched(),this._parent&&!e.onlySelf&&this._parent._updateTouched(e)}_registerOnCollectionChange(e){this._onCollectionChange=e}_setUpdateStrategy(e){Cn(e)&&e.updateOn!=null&&(this._updateOn=e.updateOn)}_parentMarkedDirty(e){let r=this._parent&&this._parent.dirty;return!e&&!!r&&!this._parent._anyControlsDirty()}_find(e){return null}_assignValidators(e){this._rawValidators=Array.isArray(e)?e.slice():e,this._composedValidatorFn=Ud(this._rawValidators)}_assignAsyncValidators(e){this._rawAsyncValidators=Array.isArray(e)?e.slice():e,this._composedAsyncValidatorFn=$d(this._rawAsyncValidators)}};var Ea=new I("CallSetDisabledState",{providedIn:"root",factory:()=>Hi}),Hi="always";function zd(t,e){return[...e.path,t]}function Bd(t,e,r=Hi){qd(t,e),e.valueAccessor.writeValue(t.value),(t.disabled||r==="always")&&e.valueAccessor.setDisabledState?.(t.disabled),Wd(t,e),Kd(t,e),Hd(t,e),Gd(t,e)}function ua(t,e){t.forEach(r=>{r.registerOnValidatorChange&&r.registerOnValidatorChange(e)})}function Gd(t,e){if(e.valueAccessor.setDisabledState){let r=n=>{e.valueAccessor.setDisabledState(n)};t.registerOnDisabledChange(r),e._registerOnDestroy(()=>{t._unregisterOnDisabledChange(r)})}}function qd(t,e){let r=Nd(t);e.validator!==null?t.setValidators(la(r,e.validator)):typeof r=="function"&&t.setValidators([r]);let n=Fd(t);e.asyncValidator!==null?t.setAsyncValidators(la(n,e.asyncValidator)):typeof n=="function"&&t.setAsyncValidators([n]);let i=()=>t.updateValueAndValidity();ua(e._rawValidators,i),ua(e._rawAsyncValidators,i)}function Wd(t,e){e.valueAccessor.registerOnChange(r=>{t._pendingValue=r,t._pendingChange=!0,t._pendingDirty=!0,t.updateOn==="change"&&Sa(t,e)})}function Hd(t,e){e.valueAccessor.registerOnTouched(()=>{t._pendingTouched=!0,t.updateOn==="blur"&&t._pendingChange&&Sa(t,e),t.updateOn!=="submit"&&t.markAsTouched()})}function Sa(t,e){t._pendingDirty&&t.markAsDirty(),t.setValue(t._pendingValue,{emitModelToViewChange:!1}),e.viewToModelUpdate(t._pendingValue),t._pendingChange=!1}function Kd(t,e){let r=(n,i)=>{e.valueAccessor.writeValue(n),i&&e.viewToModelUpdate(n)};t.registerOnChange(r),e._registerOnDestroy(()=>{t._unregisterOnChange(r)})}function Zd(t,e){if(!t.hasOwnProperty("model"))return!1;let r=t.model;return r.isFirstChange()?!0:!Object.is(e,r.currentValue)}function Jd(t){return Object.getPrototypeOf(t.constructor)===Sd}function Xd(t,e){if(!e)return null;Array.isArray(e);let r,n,i;return e.forEach(o=>{o.constructor===_n?r=o:Jd(o)?n=o:i=o}),i||n||r||null}function ha(t,e){let r=t.indexOf(e);r>-1&&t.splice(r,1)}function fa(t){return typeof t=="object"&&t!==null&&Object.keys(t).length===2&&"value"in t&&"disabled"in t}var Yd=class extends Wi{constructor(e=null,r,n){super(Vd(r),Ld(n,r)),this.defaultValue=null,this._onChange=[],this._pendingChange=!1,this._applyFormState(e),this._setUpdateStrategy(r),this._initObservables(),this.updateValueAndValidity({onlySelf:!0,emitEvent:!!this.asyncValidator}),Cn(r)&&(r.nonNullable||r.initialValueIsDefault)&&(fa(e)?this.defaultValue=e.value:this.defaultValue=e)}setValue(e,r={}){this.value=this._pendingValue=e,this._onChange.length&&r.emitModelToViewChange!==!1&&this._onChange.forEach(n=>n(this.value,r.emitViewToModelChange!==!1)),this.updateValueAndValidity(r)}patchValue(e,r={}){this.setValue(e,r)}reset(e=this.defaultValue,r={}){this._applyFormState(e),this.markAsPristine(r),this.markAsUntouched(r),this.setValue(this.value,r),this._pendingChange=!1}_updateValue(){}_anyControls(e){return!1}_allControlsDisabled(){return this.disabled}registerOnChange(e){this._onChange.push(e)}_unregisterOnChange(e){ha(this._onChange,e)}registerOnDisabledChange(e){this._onDisabledChange.push(e)}_unregisterOnDisabledChange(e){ha(this._onDisabledChange,e)}_forEachChild(e){}_syncPendingControls(){return this.updateOn==="submit"&&(this._pendingDirty&&this.markAsDirty(),this._pendingTouched&&this.markAsTouched(),this._pendingChange)?(this.setValue(this._pendingValue,{onlySelf:!0,emitModelToViewChange:!1}),!0):!1}_applyFormState(e){fa(e)?(this.value=this._pendingValue=e.value,e.disabled?this.disable({onlySelf:!0,emitEvent:!1}):this.enable({onlySelf:!0,emitEvent:!1})):this.value=this._pendingValue=e}};var Qd={provide:Mt,useExisting:Tn(()=>Ki)},pa=Promise.resolve(),Ki=(()=>{let e=class e extends Mt{constructor(n,i,o,a,s,d){super(),this._changeDetectorRef=s,this.callSetDisabledState=d,this.control=new Yd,this._registered=!1,this.name="",this.update=new L,this._parent=n,this._setValidators(i),this._setAsyncValidators(o),this.valueAccessor=Xd(this,a)}ngOnChanges(n){if(this._checkForErrors(),!this._registered||"name"in n){if(this._registered&&(this._checkName(),this.formDirective)){let i=n.name.previousValue;this.formDirective.removeControl({name:i,path:this._getPath(i)})}this._setUpControl()}"isDisabled"in n&&this._updateDisabled(n),Zd(n,this.viewModel)&&(this._updateValue(this.model),this.viewModel=this.model)}ngOnDestroy(){this.formDirective&&this.formDirective.removeControl(this)}get path(){return this._getPath(this.name)}get formDirective(){return this._parent?this._parent.formDirective:null}viewToModelUpdate(n){this.viewModel=n,this.update.emit(n)}_setUpControl(){this._setUpdateStrategy(),this._isStandalone()?this._setUpStandalone():this.formDirective.addControl(this),this._registered=!0}_setUpdateStrategy(){this.options&&this.options.updateOn!=null&&(this.control._updateOn=this.options.updateOn)}_isStandalone(){return!this._parent||!!(this.options&&this.options.standalone)}_setUpStandalone(){Bd(this.control,this,this.callSetDisabledState),this.control.updateValueAndValidity({emitEvent:!1})}_checkForErrors(){this._isStandalone()||this._checkParentType(),this._checkName()}_checkParentType(){}_checkName(){this.options&&this.options.name&&(this.name=this.options.name),!this._isStandalone()&&this.name}_updateValue(n){pa.then(()=>{this.control.setValue(n,{emitViewToModelChange:!1}),this._changeDetectorRef?.markForCheck()})}_updateDisabled(n){let i=n.isDisabled.currentValue,o=i!==0&&Qe(i);pa.then(()=>{o&&!this.control.disabled?this.control.disable():!o&&this.control.disabled&&this.control.enable(),this._changeDetectorRef?.markForCheck()})}_getPath(n){return this._parent?zd(n,this._parent):[n]}};e.\u0275fac=function(i){return new(i||e)(T(Gi,9),T(Dd,10),T(Rd,10),T(ma,10),T(Ye,8),T(Ea,8))},e.\u0275dir=he({type:e,selectors:[["","ngModel","",3,"formControlName","",3,"formControl",""]],inputs:{name:"name",isDisabled:[we.None,"disabled","isDisabled"],model:[we.None,"ngModel","model"],options:[we.None,"ngModelOptions","options"]},outputs:{update:"ngModelChange"},exportAs:["ngModel"],features:[$n([Qd]),Xe,Rt]});let t=e;return t})();var ec=(()=>{let e=class e{};e.\u0275fac=function(i){return new(i||e)},e.\u0275mod=_e({type:e}),e.\u0275inj=xe({});let t=e;return t})();var Aa=(()=>{let e=class e{static withConfig(n){return{ngModule:e,providers:[{provide:Ea,useValue:n.callSetDisabledState??Hi}]}}};e.\u0275fac=function(i){return new(i||e)},e.\u0275mod=_e({type:e}),e.\u0275inj=xe({imports:[ec]});let t=e;return t})();var Ma=(()=>{let e=class e{constructor(n){this.data=n,this.pokemon=[],this.searchOpened=!1,this.obtainedOpened=!1,this.typeOpened=!1,this.locationOpened=!1,this.filter={}}ngOnInit(){return j(this,null,function*(){yield this.refresh()})}refresh(){return j(this,null,function*(){this.pokemon=this.applyFilter(yield this.data.retrieve()),this.totalAmount=this.pokemon.length,this.totalObtained=this.pokemon.filter(n=>n.obtained).length})}applyFilter(n){return this.filter.searchText!=null&&(n=n.filter(i=>i.name.toLowerCase().includes(this.filter.searchText?.toLowerCase()??"")||i.dex==parseInt(this.filter?.searchText??"-1"))),this.filter.hasObtained!=null&&(n=n.filter(i=>this.filter.hasObtained=="OBTAINED"?i.obtained:this.filter.hasObtained=="UNOBTAINED"?!i.obtained:!0)),this.filter.type!=null&&(n=n.filter(i=>i.types.includes(this.filter.type?.toLowerCase()??"-"))),this.filter.region+null&&(n=n.filter(i=>i.region==this.filter.region)),n}closeAll(){this.obtainedOpened=!1,this.locationOpened=!1,this.typeOpened=!1,this.searchOpened=!1}toggleSearch(){let n=this.searchOpened;this.closeAll(),this.searchOpened=!n,this.searchOpened&&document.getElementById("search_bar_input")?.focus()}toggleObtained(){let n=this.obtainedOpened;this.closeAll(),this.obtainedOpened=!n}toggleTypes(){let n=this.typeOpened;this.closeAll(),this.typeOpened=!n}toggleLocations(){let n=this.locationOpened;this.closeAll(),this.locationOpened=!n}setObtainedFilter(n){return j(this,null,function*(){this.filter.hasObtained=n,this.obtainedOpened=!1,yield this.refresh()})}setType(n){return j(this,null,function*(){this.filter.type==n?this.filter.type=null:this.filter.type=n,yield this.refresh()})}setRegion(n){return j(this,null,function*(){this.filter.region==n?this.filter.region=null:this.filter.region=n,yield this.refresh()})}reset(){return j(this,null,function*(){this.filter={},this.closeAll(),yield this.refresh()})}};e.\u0275fac=function(i){return new(i||e)(T(mn))},e.\u0275cmp=Z({type:e,selectors:[["app-root"]],standalone:!0,features:[J],decls:93,vars:82,consts:[[3,"onRefresh","pokemon"],[1,"filter"],[1,"search_bar"],["type","text","id","search_bar_input","placeholder","Pokemon name / Dex",3,"ngModelChange","ngModel"],[1,"obtained_bar"],[1,"obtained_d_all",3,"click"],[1,"obtained_d_obtained",3,"click"],[1,"obtained_d_unobtained",3,"click"],[1,"type_bar"],[1,"types_left"],[1,"type",2,"background-color","rgb(168, 168, 120)",3,"click"],[1,"type",2,"background-color","rgb(240, 128, 48)",3,"click"],[1,"type",2,"background-color","rgb(104, 144, 240)",3,"click"],[1,"type",2,"background-color","rgb(248, 208, 48)",3,"click"],[1,"type",2,"background-color","rgb(120, 200, 80)",3,"click"],[1,"type",2,"background-color","rgb(152, 216, 216)",3,"click"],[1,"types_middle"],[1,"type",2,"background-color","rgb(192, 48, 40)",3,"click"],[1,"type",2,"background-color","rgb(160, 64, 160)",3,"click"],[1,"type",2,"background-color","rgb(224, 192, 104)",3,"click"],[1,"type",2,"background-color","rgb(168, 144, 240)",3,"click"],[1,"type",2,"background-color","rgb(248, 88, 136)",3,"click"],[1,"type",2,"background-color","rgb(168, 184, 32)",3,"click"],[1,"types_right"],[1,"type",2,"background-color","rgb(184, 160, 56)",3,"click"],[1,"type",2,"background-color","rgb(112, 88, 152)",3,"click"],[1,"type",2,"background-color","rgb(112, 56, 248)",3,"click"],[1,"type",2,"background-color","rgb(112, 88, 72)",3,"click"],[1,"type",2,"background-color","rgb(184, 184, 208)",3,"click"],[1,"type",2,"background-color","rgb(240, 182, 188)",3,"click"],[1,"location_bar"],[1,"locations_left"],[1,"region",2,"background-color","rgb(237, 88, 84)",3,"click"],[1,"region",2,"background-color","rgb(253, 185, 39)",3,"click"],[1,"region",2,"background-color","rgb(68, 154, 196)",3,"click"],[1,"region",2,"background-color","rgb(150, 143, 168)",3,"click"],[1,"region",2,"background-color","rgb(43, 87, 151)",3,"click"],[1,"locations_right"],[1,"region",2,"background-color","rgb(240, 126, 110)",3,"click"],[1,"region",2,"background-color","rgb(251, 195, 82)",3,"click"],[1,"region",2,"background-color","rgb(40, 53, 147)",3,"click"],[1,"region",2,"background-color","rgb(175, 200, 134)",3,"click"],[1,"region",2,"background-color","rgb(234, 120, 179)",3,"click"],[1,"bar"],[1,"left_panels"],[3,"click"],[1,"progress"],["id","progress_text"],["id","progress_bar",3,"max","value"],[1,"right_panels"]],template:function(i,o){i&1&&(y(0,"app-pokemon-list",0),v("onRefresh",function(){return o.refresh()}),b(),y(1,"div",1)(2,"div",2)(3,"input",3),Fr("ngModelChange",function(s){return Nr(o.filter.searchText,s)||(o.filter.searchText=s),s}),v("ngModelChange",function(){return o.refresh()}),b()(),y(4,"div",4)(5,"button",5),v("click",function(){return o.setObtainedFilter("")}),w(6,"Display all"),b(),y(7,"button",6),v("click",function(){return o.setObtainedFilter("OBTAINED")}),w(8,"Display all obtained"),b(),y(9,"button",7),v("click",function(){return o.setObtainedFilter("UNOBTAINED")}),w(10,"Display all unobtained"),b()(),y(11,"div",8)(12,"div",9)(13,"div",10),v("click",function(){return o.setType("normal")}),w(14,"Normal"),b(),y(15,"div",11),v("click",function(){return o.setType("fire")}),w(16,"Fire"),b(),y(17,"div",12),v("click",function(){return o.setType("water")}),w(18,"Water"),b(),y(19,"div",13),v("click",function(){return o.setType("electric")}),w(20,"Electric"),b(),y(21,"div",14),v("click",function(){return o.setType("grass")}),w(22,"Grass"),b(),y(23,"div",15),v("click",function(){return o.setType("ice")}),w(24,"Ice"),b()(),y(25,"div",16)(26,"div",17),v("click",function(){return o.setType("fighting")}),w(27,"Fighting"),b(),y(28,"div",18),v("click",function(){return o.setType("poison")}),w(29,"Poison"),b(),y(30,"div",19),v("click",function(){return o.setType("ground")}),w(31,"Ground"),b(),y(32,"div",20),v("click",function(){return o.setType("flying")}),w(33,"Flying"),b(),y(34,"div",21),v("click",function(){return o.setType("psychic")}),w(35,"Psychic"),b(),y(36,"div",22),v("click",function(){return o.setType("bug")}),w(37,"Bug"),b()(),y(38,"div",23)(39,"div",24),v("click",function(){return o.setType("rock")}),w(40,"Rock"),b(),y(41,"div",25),v("click",function(){return o.setType("ghost")}),w(42,"Ghost"),b(),y(43,"div",26),v("click",function(){return o.setType("dragon")}),w(44,"Dragon"),b(),y(45,"div",27),v("click",function(){return o.setType("dark")}),w(46,"Dark"),b(),y(47,"div",28),v("click",function(){return o.setType("steel")}),w(48,"Steel"),b(),y(49,"div",29),v("click",function(){return o.setType("fairy")}),w(50,"Fairy"),b()()(),y(51,"div",30)(52,"div",31)(53,"div",32),v("click",function(){return o.setRegion("kanto")}),w(54,"Kanto"),b(),y(55,"div",33),v("click",function(){return o.setRegion("johto")}),w(56,"Johto"),b(),y(57,"div",34),v("click",function(){return o.setRegion("hoenn")}),w(58,"Hoenn"),b(),y(59,"div",35),v("click",function(){return o.setRegion("sinnoh")}),w(60,"Sinnoh"),b(),y(61,"div",36),v("click",function(){return o.setRegion("unova")}),w(62,"Unova"),b()(),y(63,"div",37)(64,"div",38),v("click",function(){return o.setRegion("kalos")}),w(65,"Kalos"),b(),y(66,"div",39),v("click",function(){return o.setRegion("alola")}),w(67,"Alola"),b(),y(68,"div",40),v("click",function(){return o.setRegion("galar")}),w(69,"Galar"),b(),y(70,"div",41),v("click",function(){return o.setRegion("hisui")}),w(71,"Hisui"),b(),y(72,"div",42),v("click",function(){return o.setRegion("paldea")}),w(73,"Paldea"),b()()()(),y(74,"div",43)(75,"div",44)(76,"mat-icon",45),v("click",function(){return o.toggleTypes()}),w(77,"grass"),b(),y(78,"mat-icon",45),v("click",function(){return o.toggleLocations()}),w(79,"location_on"),b(),y(80,"mat-icon",45),v("click",function(){return o.toggleSearch()}),w(81,"search"),b()(),y(82,"div",46)(83,"span",47),w(84),b(),Ne(85,"progress",48),b(),y(86,"div",49)(87,"mat-icon",45),v("click",function(){return o.reset()}),w(88,"close"),b(),y(89,"mat-icon",45),v("click",function(){return o.toggleObtained()}),w(90,"visibility"),b(),y(91,"mat-icon",45),v("click",function(){return o.refresh()}),w(92,"refresh"),b()()()),i&2&&(Pe("pokemon",o.pokemon),m(2),x("search_bar_visible",o.searchOpened),m(),Pr("ngModel",o.filter.searchText),m(),x("obtained_bar_visible",o.obtainedOpened),m(),x("selected",o.filter.hasObtained===""),m(2),x("selected",o.filter.hasObtained==="OBTAINED"),m(2),x("selected",o.filter.hasObtained==="UNOBTAINED"),m(2),x("type_bar_visible",o.typeOpened),m(2),x("type_selected",o.filter.type=="normal"),m(2),x("type_selected",o.filter.type=="fire"),m(2),x("type_selected",o.filter.type=="water"),m(2),x("type_selected",o.filter.type=="electric"),m(2),x("type_selected",o.filter.type=="grass"),m(2),x("type_selected",o.filter.type=="ice"),m(3),x("type_selected",o.filter.type=="fighting"),m(2),x("type_selected",o.filter.type=="poison"),m(2),x("type_selected",o.filter.type=="ground"),m(2),x("type_selected",o.filter.type=="flying"),m(2),x("type_selected",o.filter.type=="psychic"),m(2),x("type_selected",o.filter.type=="bug"),m(3),x("type_selected",o.filter.type=="rock"),m(2),x("type_selected",o.filter.type=="ghost"),m(2),x("type_selected",o.filter.type=="dragon"),m(2),x("type_selected",o.filter.type=="dark"),m(2),x("type_selected",o.filter.type=="steel"),m(2),x("type_selected",o.filter.type=="fairy"),m(2),x("location_bar_visible",o.locationOpened),m(2),x("region_selected",o.filter.region=="kanto"),m(2),x("region_selected",o.filter.region=="johto"),m(2),x("region_selected",o.filter.region=="hoenn"),m(2),x("region_selected",o.filter.region=="sinnoh"),m(2),x("region_selected",o.filter.region=="unova"),m(3),x("region_selected",o.filter.region=="kalos"),m(2),x("region_selected",o.filter.region=="alola"),m(2),x("region_selected",o.filter.region=="galar"),m(2),x("region_selected",o.filter.region=="hisui"),m(2),x("region_selected",o.filter.region=="paldea"),m(4),x("selected",o.typeOpened),m(4),x("selected",o.searchOpened),m(4),Or("",o.totalObtained," / ",o.totalAmount,""),m(),Ft("value",o.totalObtained),Pe("max",o.totalAmount),m(4),x("selected",o.obtainedOpened))},dependencies:[et,Aa,_n,ka,Ki,ta,sa],styles:[".bar[_ngcontent-%COMP%]{width:100%;height:40px;background-color:#ffa07a;position:fixed;bottom:0;display:flex;justify-content:space-between;z-index:5}.left_panels[_ngcontent-%COMP%], .right_panels[_ngcontent-%COMP%]{width:37.5%;display:flex;align-items:center;justify-content:end;margin-right:10px}.right_panels[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%], .left_panels[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]{background-color:#dcdcdc4d;transition:.5s;margin:3px;padding:4px;border-radius:5px;cursor:pointer}.right_panels[_ngcontent-%COMP%]   mat-icon.selected[_ngcontent-%COMP%], .left_panels[_ngcontent-%COMP%]   mat-icon.selected[_ngcontent-%COMP%], .right_panels[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]:hover, .left_panels[_ngcontent-%COMP%]   mat-icon[_ngcontent-%COMP%]:hover{background-color:#dcdcdccc}.progress[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:end;width:25%}.right_panels[_ngcontent-%COMP%]{justify-content:start}#progress_bar[_ngcontent-%COMP%]{margin-top:-5px;width:100%}.obtained_bar[_ngcontent-%COMP%], .type_bar[_ngcontent-%COMP%], .location_bar[_ngcontent-%COMP%], .search_bar[_ngcontent-%COMP%]{position:fixed;bottom:0;width:100%;transition:.3s}.search_bar[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{border-bottom:2px solid salmon;padding:3px;display:block;width:100%;height:30px;background-color:#fff;outline:none}.obtained_bar[_ngcontent-%COMP%]{display:flex;justify-content:center}.obtained_bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{padding:5px;margin:3px 3px 0;width:auto;border:0;box-shadow:1px 1px 10px gray;cursor:pointer;transition:.3s}@media (max-width: 400px){.obtained_bar[_ngcontent-%COMP%]{bottom:-50px;flex-direction:column;align-items:center}.obtained_bar[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{width:100%;margin:2px}.location_bar[_ngcontent-%COMP%], .type_bar[_ngcontent-%COMP%]{width:100%!important;margin-left:0!important}}.obtained_bar[_ngcontent-%COMP%]   .selected[_ngcontent-%COMP%]{background-color:#dcdcdc}.obtained_bar_visible[_ngcontent-%COMP%], .type_bar_visible[_ngcontent-%COMP%], .location_bar_visible[_ngcontent-%COMP%], .search_bar_visible[_ngcontent-%COMP%]{bottom:40px!important}.obtained_d_all[_ngcontent-%COMP%]{background-color:#f5f5f5}.obtained_d_obtained[_ngcontent-%COMP%]{background-color:#90ee90}.obtained_d_unobtained[_ngcontent-%COMP%]{background-color:#f08080}.location_bar[_ngcontent-%COMP%], .type_bar[_ngcontent-%COMP%]{height:190px;width:20%;margin-left:40%;background-color:#fff;border:2px solid lightsalmon;border-bottom:none;bottom:-280px;display:flex;justify-content:center}.types_middle[_ngcontent-%COMP%]{margin-left:20px;margin-right:20px}.location_bar[_ngcontent-%COMP%]   .region[_ngcontent-%COMP%], .type_bar[_ngcontent-%COMP%]   .type[_ngcontent-%COMP%]{padding:3px;margin:5px;text-align:center;box-shadow:1px 1px 6px gray;color:#fff;cursor:pointer}.location_bar[_ngcontent-%COMP%]   .region_selected[_ngcontent-%COMP%], .type_bar[_ngcontent-%COMP%]   .type_selected[_ngcontent-%COMP%]{outline:4px dashed #333}.location_bar[_ngcontent-%COMP%]{color:#fff;width:10%;height:160px;margin-left:42.5%}"]});let t=e;return t})();uo(Ma,Xo).catch(t=>console.error(t));
